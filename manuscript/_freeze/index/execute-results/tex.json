{
  "hash": "6cc574542bdd9d2db9bc6c62c4d83861",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cell type-specific contextualisation of the phenomic landscape: a comprehensive and scalable approach towards the diagnosis, prognosis and treatment of all rare diseases\"\nauthor:\n  - name: Brian M. Schilder\n    orcid: 0000-0001-5949-2191\n    corresponding: true\n    email: brian_schilder@alumni.brown.edu\n    roles:\n      - Investigation\n      - Project administration\n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Kitty B. Murphy\n    orcid: 0000-0002-8669-3076\n    corresponding: false\n    roles:\n      - Investigation \n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Robert Gordon-Smith\n    orcid: 0000-0001-6698-7387\n    corresponding: false\n    roles:\n      - Investigation \n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Jai Chapman\n    corresponding: false\n    roles:\n      - Investigation \n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Momoko Otani\n    corresponding: false\n    roles:\n      - Investigation\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: National Heart and Lung Institute\n  - name: Nathan G. Skene\n    orcid: 0000-0002-6807-3180\n    corresponding: true\n    email: n.skene@imperial.ac.uk\n    roles:\n      - Project administration\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\nkeywords:\n  - rare disease\n  - phenotype\n  - single-cell\n  - gene therapy\nkey-points:\n  - We used the Human Phenotype Ontology and single-cell RNA-seq references to characterise the phenome.\n  - We then demonstrated how these results can be applied to clinical diagnosis, prognosis and therapeutics development.\ndate: last-modified\ncitation:\n  container-title: medRxiv\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(data.table)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np2g <- HPOExplorer::load_phenotype_to_genes()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nannot <- HPOExplorer::load_phenotype_to_genes(3)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nper_disease <- p2g[,list(ng=data.table::uniqueN(gene_symbol),\n                         np=data.table::uniqueN(hpo_id)),by=\"disease_id\"]\nper_phenotype <- p2g[,list(ng=data.table::uniqueN(gene_symbol),\n                           nd=data.table::uniqueN(disease_id)),by=\"hpo_id\"]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nhpo <- HPOExplorer::get_hpo()\n## Import precomputed results for reporting summaries\nresults <- MSTExplorer::load_example_results()\nresults <- HPOExplorer::add_hpo_name(results, hpo = hpo)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding HPO names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nresults <- HPOExplorer::add_ont_lvl(results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGetting absolute ontology level for 18,536 IDs.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nresults <- HPOExplorer::add_ancestor(results, hpo = hpo)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding level-2 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n2,204,381 associations remain after filtering.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nresults <- MSTExplorer::map_celltype(results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping cell types to cell ontology terms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding stage information.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nMSTExplorer::add_logfc(results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding logFC column.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nresults[,effect:=estimate]\n## Substitute B for \\beta for now since Quarto doesn't seem to support\n## Greek letters after they've been stored in a data.table...\nresults[,summary:=paste0(\n  \"$\",\n  \"FDR_{pc}=\",format(q,digits=3),\",\",\n  \"B=\",format(estimate,digits=3),\n  \"$\"\n)] \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nres_summ <- MSTExplorer::summarise_results(results = results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving results --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/summarise_results.csv15972563710fe\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nres_summ_all <- res_summ$tmerged[ctd==\"all\"] \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Must use `cache.lazy=FALSE` because sparse matrices not yet supported for caching\nctd_list <- MSTExplorer::load_example_ctd(c(\"ctd_DescartesHuman.rds\",\n                                            \"ctd_HumanCellLandscape.rds\"),\n                                          multi_dataset=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading ctd_DescartesHuman.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading ctd_HumanCellLandscape.rds\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nvalidate_associations_mkg_out <- MSTExplorer::validate_associations_mkg(results = results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ni All local files already up-to-date!\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRemaining: 82 phenotypes across 65 celltypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n90.24% phenotypes recovered.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=1] cl_id: CL:0000000 & hpo_id: HP:0025354\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/cl.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=2] cl_id: CL:0000000 & hpo_id: HP:0005374\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=3] cl_id: CL:0000015 & hpo_id: HP:0012863\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=4] cl_id: CL:0000019 & hpo_id: HP:0000027\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=5] cl_id: CL:0000019 & hpo_id: HP:0012864\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=6] cl_id: CL:0000038 & hpo_id: HP:0012131\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=7] cl_id: CL:0000066 & hpo_id: HP:0032599\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=8] cl_id: CL:0000084 & hpo_id: HP:0002843\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=9] cl_id: CL:0000084 & hpo_id: HP:0011840\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=10] cl_id: CL:0000094 & hpo_id: HP:0001911\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=11] cl_id: CL:0000097 & hpo_id: HP:0100494\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=12] cl_id: CL:0000100 & hpo_id: HP:0002450\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=13] cl_id: CL:2000032 & hpo_id: HP:0003134\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=14] cl_id: CL:0000125 & hpo_id: HP:0100705\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=15] cl_id: CL:0000127 & hpo_id: HP:0100707\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=16] cl_id: CL:0000128 & hpo_id: HP:0100706\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=17] cl_id: CL:0000169 & hpo_id: HP:0006279\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=18] cl_id: CL:0000169 & hpo_id: HP:0006274\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=19] cl_id: CL:0000178 & hpo_id: HP:0010789\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=20] cl_id: CL:0000182 & hpo_id: HP:0031137\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=21] cl_id: CL:0000187 & hpo_id: HP:0100299\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=22] cl_id: CL:0000188 & hpo_id: HP:0004303\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=23] cl_id: CL:0000232 & hpo_id: HP:0001876\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=24] cl_id: CL:0000232 & hpo_id: HP:0001877\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=25] cl_id: CL:0000232 & hpo_id: HP:0410064\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=26] cl_id: CL:0000232 & hpo_id: HP:0410063\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=27] cl_id: CL:0000232 & hpo_id: HP:0020054\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=28] cl_id: CL:0000232 & hpo_id: HP:0012187\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=29] cl_id: CL:0000233 & hpo_id: HP:0001872\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=30] cl_id: CL:0000235 & hpo_id: HP:0004311\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=31] cl_id: CL:0000236 & hpo_id: HP:0005372\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=32] cl_id: CL:0000236 & hpo_id: HP:0002846\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=33] cl_id: CL:0000492 & hpo_id: HP:0500267\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=34] cl_id: CL:0000540 & hpo_id: HP:0002493\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=35] cl_id: CL:0000540 & hpo_id: HP:0002529\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=36] cl_id: CL:0000540 & hpo_id: HP:0012757\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=37] cl_id: CL:0000542 & hpo_id: HP:0004332\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=38] cl_id: CL:0000547 & hpo_id: HP:0025035\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=39] cl_id: CL:0000556 & hpo_id: HP:0012143\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=40] cl_id: CL:0000576 & hpo_id: HP:0012144\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=41] cl_id: CL:0000586 & hpo_id: HP:0012862\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=42] cl_id: CL:0000623 & hpo_id: HP:0012177\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=43] cl_id: CL:0000623 & hpo_id: HP:0012176\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=44] cl_id: CL:0000624 & hpo_id: HP:0031392\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=45] cl_id: CL:0000625 & hpo_id: HP:0031393\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=46] cl_id: CL:0000738 & hpo_id: HP:0008318\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=47] cl_id: CL:0000738 & hpo_id: HP:0004852\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=48] cl_id: CL:0000738 & hpo_id: HP:0001881\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=49] cl_id: CL:0000763 & hpo_id: HP:0020047\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=50] cl_id: CL:0000764 & hpo_id: HP:0012130\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=51] cl_id: CL:0000765 & hpo_id: HP:0034278\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=52] cl_id: CL:0000766 & hpo_id: HP:0010974\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=53] cl_id: CL:0000767 & hpo_id: HP:0001912\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=54] cl_id: CL:0000771 & hpo_id: HP:0001879\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=55] cl_id: CL:0000775 & hpo_id: HP:0001874\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=56] cl_id: CL:0000787 & hpo_id: HP:0030373\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=57] cl_id: CL:0000792 & hpo_id: HP:0020111\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=58] cl_id: CL:0000798 & hpo_id: HP:0500270\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=59] cl_id: CL:0000813 & hpo_id: HP:0032182\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=60] cl_id: CL:0000818 & hpo_id: HP:0030379\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=61] cl_id: CL:0000835 & hpo_id: HP:0004808\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=62] cl_id: CL:0000845 & hpo_id: HP:0030383\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=63] cl_id: CL:0000891 & hpo_id: HP:0003651\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=64] cl_id: CL:0000895 & hpo_id: HP:0410373\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=65] cl_id: CL:0000898 & hpo_id: HP:0031396\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=66] cl_id: CL:0000909 & hpo_id: HP:0410380\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=67] cl_id: CL:0000912 & hpo_id: HP:0500263\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=68] cl_id: CL:0000972 & hpo_id: HP:0030386\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=69] cl_id: CL:0001050 & hpo_id: HP:0410395\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=70] cl_id: CL:0001062 & hpo_id: HP:0020177\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=71] cl_id: CL:0002092 & hpo_id: HP:0005561\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=72] cl_id: CL:0002191 & hpo_id: HP:0012135\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=73] cl_id: CL:0002198 & hpo_id: HP:0005152\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=74] cl_id: CL:0002319 & hpo_id: HP:0002282\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=75] cl_id: CL:0002368 & hpo_id: HP:0012261\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=76] cl_id: CL:0002422 & hpo_id: HP:0004312\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=77] cl_id: CL:0002559 & hpo_id: HP:0500262\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=78] cl_id: CL:0008002 & hpo_id: HP:0030089\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=79] cl_id: CL:0008002 & hpo_id: HP:0003713\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=80] cl_id: CL:0008002 & hpo_id: HP:0012084\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=81] cl_id: CL:0011001 & hpo_id: HP:0006802\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[i=82] cl_id: CL:0011025 & hpo_id: HP:0041080\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nkg_hp <- validate_associations_mkg_out$kg[grepl(\"^HP:\",from)] \n```\n:::\n\n{{< pagebreak >}}\n\n\n\n## Abstract\n\nRare diseases (RDs) are an extremely heterogeneous and underserved category of medical conditions. While the majority of RDs are strongly genetic, it remains largely unknown via which physiological mechanisms genetics cause RD. Therefore, we sought to systematically characterise the cell type-specific mechanisms underlying all RD phenotypes with a known genetic cause by leveraging the Human Phenotype Ontology and transcriptomic single-cell atlases of the entire human body from embryonic, foetal, and adult samples. In total we identified significant associations between 201 cell types and 9,563/11,015 (84.8%) unique phenotypes across 8,741 RDs. We estimate that this represents an over 500-fold increase in the collective knowledge of RD phenotype-cell type mechanisms.\n\nNext, we demonstrated how these results may be used for the development of novel therapeutics. Finally, we take a data-driven approach to highlight several of the most promising gene/cell therapy candidates with the highest probability of animal model-to-human patient translation. Furthermore, we have made these results entirely reproducible and freely accessible to the global community to maximise their impact. To summarise, this work represents a significant step forward in the mission to treat patients across an extremely diverse spectrum of serious RDs.\n\n## Introduction {#sec-introduction}\n\nWhile rare diseases (RDs) are individually uncommon, they collectively account for an enormous global disease burden with over 10,000 recognised RDs affecting at least 300-400 million people globally [@Ferreira2019-jp] (1 in 10-20 people) [@Zhu2020-vo] . Over 75% of RDs primarily affect children with a 30% mortality rate by 5 years of age [@noauthor_undated-kp]. Despite the prevalence and severity of RDs, patients suffering from these conditions are vastly underserved due to several contributing factors. First, diagnosis is extremely challenging due to the highly variable clinical presentations of many of these diseases. The diagnostic odyssey can take patients and their families decades, with an average time to diagnosis of 5 years [@Marwaha2022-uy]. Of those, \\~46% receive at least one incorrect diagnosis and over 75% of all patients never receive any diagnosis @Molster2016-da. Second, prognosis is also made difficult by high variability in disease course and outcomes which makes matching patients with effective and timely treatment plans even more challenging. Finally, even for patients who receive an accurate diagnosis/prognosis, treatments are currently only available for less than 5% of all RDs [@Halley2022-pd]. In addition to the scientific challenges of understanding RDs, there are strong financial disincentives for pharmaceutical and biotechnology companies to develop expensive therapeutics for exceedingly small RD patient populations with little or no return on investment [@Institute_of_Medicine_US_Committee_on_Accelerating_Rare_Diseases_Research_and_Orphan_Product_Development2010-vj; @Yates2022-ra]. Those that have been produced are amongst the world’s most expensive drugs, greatly limiting patients’ ability to access it [@Nuijten2022-yc; @Thielen2022-ud], The provision of timely, effective and affordable care for RD patients will require substantive transformations to our existing scientific, clinical, and regulatory frameworks.\n\nA major challenge in both healthcare and scientific research is the scalable exchange of information. Even in the age of electronic healthcare records (EHR) much of the information about an individual’s history is currently fractured across healthcare providers, often with differing nomenclatures for the same conditions. The Human Phenotype Ontology (HPO) is a hierarchically organised set of controlled clinical terms that provides a much needed common framework by which clinicians and researchers can precisely communicate patient conditions [@Gargano2024-fc; @Kohler2019-pc @Robinson2008-ys; @Kohler2021-wk]. The HPO spans all domains of human physiology and currently describes 18536 phenotypes across 10,300 RDs. Each phenotype and disease is assigned its own unique identifier and organised as a hierarchical graph, such that higher-level terms describe broad phenotypic categories or *branches* (e.g. *HP:0033127*: 'Abnormality of the musculoskeletal system' which contains 4522 unique phenotypes) and lower-level terms describe increasingly precise phenotypes (e.g. *HP:0030675*: 'Contracture of proximal interphalangeal joints of 2nd-5th fingers'). It has already been integrated into healthcare systems and clinical diagnostic tools around the world, with increasing adoption over time [@Gargano2024-fc]. Common ontology-controlled frameworks like the HPO open a wealth of new opportunities, especially when addressing RDs. Services such as the Matchmaker Exchange [@Osmond2022-ml; @Philippakis2015-dq] have enabled the discovery of hundreds of underlying genetic etiologies, and led to the diagnosis of many patients. This also opens the possibility of gathering cohorts of geographically dispersed patients to run clinical trials, the only viable option for treatment in many individuals. To further increase the number of individuals who qualify for these treatments, as well as the trial sample size, proposals have been made deviate from the traditional single-disease clinical trial model and instead perform basket trials on groups of RDs with shared molecular etiologies (SaME) [@Zanello2023-zd]. However this approach, and indeed much of RD patient care, hinges upon first characterising the molecular mechanisms underlying each RD.\n\nOver 80% of RDs have a known genetic cause [@Nguengang_Wakap2020-cz; @noauthor_2022-ok]. Despite this our knowledge of the physiological mechanisms via which genetics cause pathogenesis is lacking for most RDs, severely hindering our ability to effectively diagnose, prognose and treat RD patients. The availability of standardised, ontology-controlled databases presents opportunities to systematically investigate RDs at scale. Since 2008, the HPO has been continuously updated using knowledge from the medical literature, as well as by integrating databases of expert validated gene-phenotype relationships, such as OMIM [@Amberger2019-vl; @Amberger2017-tg; @McKusick2007-di], Orphanet [@Maiella2013-oo; @Weinreich2008-wm], and DECIPHER @Firth2009-qg. A subset of the HPO contains gene annotations for 11,275 phenotypes across 8,746 diseases. Yet genes alone do not tell the full story of how RDs come to be, as their expression and functional relevance varies drastically across the multitude of tissues and cell types contained within the human body.\n\nOur knowledge of single-cell-resolution biology has exploded over the course of the last decade and a half, with numerous applications in both scientific and clinical practices [@Baysoy2023-vt; @Haque2017-bn; @Qi2023-ev]. More recently, comprehensive single-cell transcriptomic atlases across tissues have also emerged [@CZI_Single-Cell_Biology_Program2023-fs; @Svensson2020-lg]. In particular, the Descartes Human @Cao2020-qz and Human Cell Landscape @Han2020-iq projects provide comprehensive multi-system single-cell RNA-seq (scRNA-seq) atlases in embryonic, foetal, and adult human samples from across the human body. These datasets provide data-driven gene signatures for hundreds of cell subtypes. They also allow us to investigate disease mechanisms in the context of specific life stages.\n\nHere, we combine and extend several of the most comprehensive genomic and transcriptomic resources currently available to systematically uncover the cell types underlying granular phenotypes across 8,741 diseases. We then go on to highlight thousands of novel phenotype-cell type associations which collectively expand our knowledge of cell type-resolved phenotypes by an estimated 566-fold. Next, we present several potential avenues for real world applications of these results in the context of RD patient diagnosis, prognosis, treatment, and therapeutics development.\n\n## Results {#sec-results}\n\n### Phenotype-cell type associations\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Create phenotype-gene matrix filled with aggregated GenCC evidence scores\nymat <- HPOExplorer::hpo_to_matrix(formula = \"gene_symbol ~ hpo_id\")\n## Run phenomix with DescartesHuman CellTypeDataset\nlm_res1 <- MSTExplorer::run_phenomix(ctd_name = \"DescartesHuman\",\n                                     annotLevel = 2, \n                                     test_method = \"glm_univariate\",\n                                     ymat = ymat)\n## Run phenomix with HumanCellLandscape CellTypeDataset\nlm_res2 <- MSTExplorer::run_phenomix(ctd_name = \"HumanCellLandscape\",\n                                     annotLevel = 3, \n                                     test_method = \"glm_univariate\",\n                                     ymat = ymat)\n## Merge results\nresults <- data.table::rbindlist(list(DescartesHuman=lm_res1,\n                                      HumanCellLandscape=lm_res2),\n                                idcol = \"ctd\")\n## Apply multiple testing correction\nresults[,q:=stats::p.adjust(p,method=\"fdr\")]\n```\n:::\n\n\nIn this study we systematically investigated the cell types underlying phenotypes across the HPO. A summary of the phenome-wide results stratified by single-cell atlas can be found in @tbl-summary. Within the results using the Descartes Human single-cell atlas, 19,894/  847,077 (2.35%) tests across  77/ 77 (100%) cell types and 7,330/11,275 (65.0%) phenotypes revealed significant phenotype-cell type associations after multiple-testing correction ($FDR_{pc}<0.05$). Using the Human Cell Landscape single-cell atlas, 26,543/1,357,304 (1.96%) tests across 124/124 (100%) cell types and 9,038/11,275 (80.2%) phenotypes showed significant phenotype-cell type associations ($FDR_{pc}<0.05$). The median number of significantly associated phenotypes per cell type was 252 (Descartes Human) and 200 (Human Cell Landscape), respectively.\n\nAcross both single-cell references, the median number of significantly associated cell types per phenotype was 3, suggesting reasonable specificity of the testing strategy. 8,741/8,746 (\\~99.9%) of diseases within the HPO gene annotations showed significant cell type associations for at least one of their respective phenotypes.\n\n### Validation of expected phenotype-cell type relationships\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_bar_dendro_out <- MSTExplorer::plot_bar_dendro(\n  results = results, \n  show_plot = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: ggdendro\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n2,204,381 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltered 'ancestor_name' : 998,282 / 2,204,381 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/cl.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/cl.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverted ontology to: igraph \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverted ontology to: igraph_dist \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: tol\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Invalid .internal.selfref detected and fixed by taking a (shallow)\ncopy of the data.table so that := can add this new column by reference. At an\nearlier point, this data.table has been copied by R (or was created manually\nusing structure() or similar). Avoid names<- and attr<- which in R currently\n(and oddly) may copy the whole data.table. Use set* syntax instead to avoid\ncopying: ?set, ?setnames and ?setattr. If this message doesn't help, please\nreport your use case to the data.table issue tracker so the root cause can be\nfixed or this message improved.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRunning tests: across_branches_per_celltype\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: column(s) not removed because not found: [term]\n\nWarning: Invalid .internal.selfref detected and fixed by taking a (shallow)\ncopy of the data.table so that := can add this new column by reference. At an\nearlier point, this data.table has been copied by R (or was created manually\nusing structure() or similar). Avoid names<- and attr<- which in R currently\n(and oddly) may copy the whole data.table. Use set* syntax instead to avoid\ncopying: ?set, ?setnames and ?setattr. If this message doesn't help, please\nreport your use case to the data.table issue tracker so the root cause can be\nfixed or this message improved.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nAncestor columns already present. Skipping.\n\n2,204,381 associations remain after filtering.\n\nCell type columns already present. Skipping mapping.\n\nTranslating ontology terms to ids.\n\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/cl.rds\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nProportional enrichment summary stats:\n\n - pct_min: 17.23\n\n - pct_max: 64.93\n\n - pct_max_mean: 39.93\n\n - pct_max_sd: 17.7\n\n - enrichment_mean: 4.75\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\noverrep_dat <- plot_bar_dendro_out$ggbars_out$data_summary\n\noverrep_dat[,summary:=paste0(ancestor_name,\": \", \n                             n_celltypes_sig,\"/\",n_celltypes,\n                             \" types of \",shQuote(target_celltypes),\n                             \" were overrepresented\",\n                             \" ($N_{p}$=\",phenotypes_per_ancestor,\").\")] \n```\n:::\n\n\nWithin each high-level branch in the HPO shown in [Fig. @fig-summary]b, we tested whether each cell type was more often associated with phenotypes in that branch relative to those in all other branches (including those not shown). We then checked whether each cell type was overrepresented (at $FDR_{bc}<0.05$) within its respective on-target HPO branch, where the number of phenotypes within that branch ($N_{p}$) Abnormality of the cardiovascular system: 5/6 types of 'cardiocyte' were overrepresented ($N_{p}$=673). Abnormality of the endocrine system: 3/4 types of 'endocrine cell' were overrepresented ($N_{p}$=291). Abnormality of the eye: 5/5 types of 'photoreceptor cell/retinal cell' were overrepresented ($N_{p}$=721). Abnormality of the immune system: 14/14 types of 'leukocyte' were overrepresented ($N_{p}$=253). Abnormality of the musculoskeletal system: 4/4 types of 'cell of skeletal muscle/chondrocyte' were overrepresented ($N_{p}$=2153). Abnormality of the nervous system: 17/24 types of 'neural cell' were overrepresented ($N_{p}$=1645). Abnormality of the respiratory system: 3/3 types of 'respiratory epithelial cell/epithelial cell of lung' were overrepresented ($N_{p}$=291)..\n\nAs an additional form of validation ([Fig. @fig-summary]d), we tested for a relationship between phenotype-cell type association significance ($-log_{e}(p_{pc})$ where $log_{e}$ denotes natural log and and $p_{pc}$ denotes uncorrected phenotype-cell type association p-values) and the proportion of on-target cell types. The list of on-target cell types were determined by matching each high-level HPO branch to a corresponding CL branch. These cross-ontology mappings can be found in @tbl-celltypes. For this analysis we used raw p-values ($p_{pc}$) rather than multiple-testing corrected p-values ($FDR_{pc}$) to provide a more dynamic range of values (as the latter can drive values to 1). All 7/7 high-level HPO branches showed a consistent upwards trend towards greater proportions of on-target cell types with increasing degrees of significance. Furthermore, all branches also showed a proportion of on-target cell types above that expected by chance (baseline = on-target cell types / total cell types) at $-log_{e}(p_{pc})>1$.\n\n\n::: {#cell-fig-summary .cell}\n\n```{.r .cell-code .hidden}\nplot_bar_dendro_out$plot\n```\n\n::: {.cell-output-display}\n![Summary of significant associations between phenotypes and cell types, aggregated by HPO branch. Here we show **a**, the total number of significant phenotype enrichments per cell type ($FDR_{pc}<0.05$) across all branches of the HPO. **b**, Number of phenotype association related to several high-level branches of the HPO. Asterisks above each bar indicate whether that cell type was significantly more often enriched in that branch relative to all other HPO branches, including those not shown here, as a proxy for how specifically that cell type is associated with that branch; $FDR _{b,c}<1e-04$ (\\*\\*\\*\\*), $FDR _{b,c}<0.001$ (\\*\\*\\*), $FDR_{bc}<0.01$ (\\*\\*), $FDR _{b,c}<0.05$ (\\*). **c**, Dendrogram derived from the Cell Ontology (CL) showing the relatedness of all tested cell types to one another. For simplicity, cell type labels shown here are aligned to the CL [@Diehl2016-gt] and can therefore encompass one or more cell types annotated by the original authors of scRNA-seq datasets [@Cao2020-qz; @Han2020-iq]. **d**, Percentage of significant phenotype associations with on-target cell types (second row of facet labels), respective to the HPO branch. As significance increases ($-log_{10}(p)$ along the *x-axis*) the percentage of on-target enriched cell types also increases (*y-axis*).](index_files/figure-pdf/fig-summary-1.pdf){#fig-summary fig-pos='H'}\n:::\n:::\n\n\n### Validation of inter- and intra-dataset consistency\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(data.table)\n## Across CTD\nvalidate_associations_correlate_ctd_out <- MSTExplorer::validate_associations_correlate_ctd(\n  results=results, \n  group_var=\"ctd\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCasting results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n13 comparable celltypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n10932 comparable phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n10 comparable celltypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n553 comparable phenotypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGenerating plots.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'ggside':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering statistics.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## Replace p-values of exactly 0 with smallest number R can compute\nvalidate_associations_correlate_ctd_out$data_stats$p.all$summary_data$p.value <- max(validate_associations_correlate_ctd_out$data_stats$p.all$summary_data$p.value,\n                  .Machine$double.xmin)\n\n## Within CTD: across developmental stages\nvalidate_associations_correlate_ctd_out_hcl <- MSTExplorer::validate_associations_correlate_ctd(\n  results=results,\n  filters= list(ctd=c(\"HumanCellLandscape\"), \n                stage=c(\"Fetus\",\"Adult\")),\n  group_var=\"stage\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltered 'ctd' : 847,077 / 2,204,381 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltered 'stage' : 54,730 / 1,357,304 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCasting results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n38 comparable celltypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n10946 comparable phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n33 comparable celltypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1580 comparable phenotypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGenerating plots.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering statistics.\n```\n\n\n:::\n:::\n\n\nNext, we sought to validate the consistency of our results across the two single-cell reference datasets (Descartes Human vs. Human Cell Landscape) across the subset of overlapping cell types [Fig. @fig-ctd-correlation]. In total there were 142116 phenotype-cell type associations to compare across the two datasets (across 10932 phenotypes and 13 cell types annotated to the exact same CL term. We found that the correlation between p-values of the two datasets was high ($rho=0.492, p=2.31e-93$). Within the subset of results that were significant in both single-cell datasets ($FDR_{pc}<0.05$), we found that correlation of the association effect size were even stronger ($rho=0.722, p=2.31e-93$). We also checked for the intra-dataset consistency between the p-values of the foetal and adult samples in the Human Cell Landscape, showing a very similar degree of correlation as the inter-dataset comparison ($rho=0.436, p=2.74e-149$). Together, these results suggest that our approach to identifying phenotype-cell type associations is highly replicable and generalisable to new datasets.\n\n### More specific phenotypes are associated with fewer genes and cell types\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_ontology_levels_out <- MSTExplorer::plot_ontology_levels(\n  results = results, \n  ctd_list = ctd_list,\n  x_vars = c(\"genes\",\"cell types\",\"p\"),\n  sig_vars= c(FALSE, TRUE, FALSE),\n  log_vars = c(FALSE, FALSE, FALSE),\n  nrow = 1,\n  show_plot = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: gginnards\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering q-values < 0.05 : 'cell types'\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot_ontology_levels_out_stats <- plot_ontology_levels_out$data_stats$summary_data|>\n  data.table::setkeyv(\"parameter2\")\n## replace pvalues of exactly 0 with the minimum computable number in R\n## This avoids creating -Inf when logging values.\nplot_ontology_levels_out_stats[p.value==0, p.value:=.Machine$double.xmin]\nplot_ontology_levels_out_stats[q.value==0, q.value:=.Machine$double.xmin]\nplot_ontology_levels_out_stats[,summary:=paste0(\n  \"$\",\n  \"p=\",format(p.value,digits=3),\", \", \n  \"q=\",format(q.value,digits=3),\", \",\n  \"rho=\",format(estimate,digits=3),\n  \"$\"\n  )][,summary:=gsub(\"=[ ]\",\"=\",summary)]\n```\n:::\n\n\nFirst, we found that phenotype ontology showed a significant negative correlation with the number of genes annotated to that phenotype in the HPO data ([Fig. @fig-ontology-lvl]a; $p=2.23e-308, q=2.23e-308, rho=-0.267$). This is expected as broader phenotypes tend to have large gene set annotations. Next, we reasoned that lower HPO ontology levels representing more specific phenotypes were likely to be associated with fewer, more specific subsets of cell types. This was indeed the case, as we observed a strongly significant negative correlation between the two variables ([Fig. @fig-ontology-lvl]b; $p=2.23e-308, q=2.23e-308, rho=-0.296$). We also found that the effect size of significant phenotype-cell type associations ($FDR_{pc}<0.05$) increased with greater phenotype specificity, though the relationship was rather weak ([Fig. @fig-ontology-lvl]c; NA). Finally, we found that the mean expression specificity of phenotype-associated genes (within the cell types significantly associated with those respective phenotypes at $FDR_{pc}<0.05$) was positively correlated phenotype ontology depth ([Fig. @fig-ontology-lvl]d; NA).\n\n\n::: {#cell-fig-ontology-lvl .cell}\n\n```{.r .cell-code .hidden}\nplot_ontology_levels_out$plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![More specific phenotypes are associated with fewer, more specific genes and cell types. Box plots showing relationship between HPO phenotype level and **a**, the number of genes annotated to each phenotype, **b**, the number of significantly enriched cell types, **c**, the effect size of phenotype-cell type association tests at $FDR_{pc}<0.05$, and **d**, the mean expression specificity of phenotype-associated genes in the cell types significantly associated with those respective phenotypes ($FDR_{pc}<0.05$). Ontology level 0 represents the most inclusive HPO term 'All', while higher ontology levels (max=16) indicate progressively more specific HPO terms (e.g. 'Contracture of proximal interphalangeal joints of 2nd-5th fingers'). Boxes are coloured by the mean value (respective to the subplot) within each HPO level.](index_files/figure-pdf/fig-ontology-lvl-1.pdf){#fig-ontology-lvl fig-pos='H'}\n:::\n:::\n\n\n### Hepatoblasts have a unique role in recurrent Neisserial infections\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntarget_branches <- list(\"Recurrent bacterial infections\"=\"leukocyte\")\nlvl <- subset(hpo@elementMetadata,name==names(target_branches)[1])$ontLvl\nresults_tmp <- HPOExplorer::add_ancestor(data.table::copy(results),\n                                         lvl = lvl,\n                                         force_new = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nForce new. Removing existing ancestor columns.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding level-6 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGetting absolute ontology level for 18,536 IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n2708 ancestors found at level 6\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n2,204,381 associations remain after filtering.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ninfections_out <- MSTExplorer::plot_bar_dendro_facets(\n  results=results_tmp,\n  target_branches=target_branches,\n  facets = \"hpo_name\",\n  lvl=lvl+1,\n  ncol=2,\n  vlines=\"hepatoblast\",\n  legend.position=\"top\",\n  facets_n=NULL,\n  q_threshold=0.05,\n  background_full=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nForce new. Removing existing ancestor columns.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding level-7 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGetting absolute ontology level for 18,536 IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n3124 ancestors found at level 7\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n2,204,381 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n20 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n4,020 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/cl.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRunning tests: across_branches_per_celltype\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: gnuplot\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nremove(results_tmp)\n\nstaph_res <- infections_out$data[hpo_name==\"Recurrent staphylococcal infections\"]\nstaph_res_top <- staph_res[,.SD[p %in% head(sort(p), 1)], by=c(\"hpo_id\")]\n   \nrecurrent_infections_ids <- KGExplorer::get_ontology_descendants(\n  ont = hpo,\n  terms = \"Recurrent infections\")[[1]]\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nhepatoblast_res <- results[q<0.05 & \n                           hpo_id %in% recurrent_infections_ids & \n                           cl_name==\"hepatoblast\"]\nhepatocyte_res <- results[q<0.05 & \n                          ancestor_name==\"Abnormality of the immune system\" &\n                          grepl(\"hepatocyte\",CellType,ignore.case = TRUE)] \n```\n:::\n\n\nWe selected the HPO term 'Recurrent bacterial infections' and all of its descendants (19 phenotypes) as an example of how investigations at the level of granular phenotypes can reveal different cell type-specific mechanisms ([Fig. @fig-rni]). As expected, these phenotypes are primarily associated with immune cell types (e.g. macrophages, dendritic cells, T cells, monocytes, neutrophils). Some associations confirm relationships previously suggested in the literature, such as that between 'Recurrent staphylococcal infections' and myeloid cells [@Heim2014-du; @Pidwill2020-le; @Stoll2018-dc; @Tebartz2015-xs]. Specifically, our results pinpoint monocytes as the most strongly associated cell subtypes ($FDR_{pc}= 1.03e-30,B= 1.76e-01$).\n\nIn contrast to all other recurrent infection types, 'Recurrent Neisserial infections' highlighted a novel association with hepatoblasts (Descartes Human : $FDR_{pc}= 1.13e-06,B= 8.24e-02$). Whilst unexpected, a convincing explanation involves the complement system, a key driver of innate immune response to Neisserial infections. Hepatocytes, which derive from hepatoblasts, produce the majority of complement proteins [@Zhou2016-kq], and Kupffer cells express complement receptors @Dixon2013-ok. In addition, individuals with deficits in complement are at high risk for Neisserial infections [@Ladhani2019-nf; @Rosain2017-ih], and a genome-wide association study in those with a Neisserial infection identified risk variants within complement proteins [@The_International_Meningococcal_Genetics_Consortium2010-if] . While the potential of therapeutically targeting complement in RDs (including Neisserial infections) has been proposed previously [@Lung2019-il; @Reis2015-yz], performing this in a gene- and cell type-specific manner may help to improve efficacy and reduce toxicity (e.g. due to off-target effects). Importantly, there are over 56 known genes within the complement system [@Seal2023-pa], highlighting the need for a systematic, evidence-based approach to identify effective gene targets.\n\nAlso of note, despite the fact that our datasets contain both hepatoblasts and their mature counterpart, hepatocytes, only the hepatoblasts showed this association. This suggests that the genetic factors that predispose individuals for risk of Neisserial infections are specifically affecting hepatoblasts before they become fully differentiated. It is also notable that these phenotypes were the only ones within the 'Recurrent bacterial infections' branch, or even the broader 'Recurrent infections' branch, perhaps indicating a unique role for hepatoblasts in recurrent infectious disease. The only phenotypes within the even broader 'Abnormality of the immune system' HPO branch that significantly associated with mature hepatocytes were 'Pancreatitis' ($FDR_{pc}= 2.08e-02,B= 5.25e-02$) and 'Susceptibility to chickenpox' ($FDR_{pc}= 1.20e-02,B= 5.49e-02$) both of which are well-known to involve the liver [@Al-Hamoudi2009-le; @Brewer2018-dg; @Eshchar1973-tz].\n\n\n::: {#cell-fig-rni .cell}\n\n```{.r .cell-code .hidden}\ninfections_out$plot + \n  ggplot2::guides(fill=ggplot2::guide_legend(ncol=2,\n                                             title = NULL))\n```\n\n::: {.cell-output-display}\n![Hepatoblasts have a unique role in recurrent Neisserial infections. Significant phenotype-cell type tests for phenotypes within the branch 'Recurrent bacterial infections'. Amongst all different kinds of recurrent bacterial infections, hepatoblasts (highlighted by vertical dotted lines) are exclusively enriched in 'Recurrent gram−negative bacterial infections'. Note that terms from multiple levels of the same ontology branch are shown as separate facets (e.g. 'Recurrent bacterial infections' and 'Recurrent gram−negative bacterial infections').](index_files/figure-pdf/fig-rni-1.pdf){#fig-rni fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Annotate results with disease/symptom-level and gene-level information\n## filtering q-values at this step yields the same results as filtering at the next step, \n## albeit with much fast computation.\nresults_annot <- HPOExplorer::add_genes(results[q<0.05],\n                                        allow.cartesian = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with Disease\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nresults_annot <- MSTExplorer::add_symptom_results(results = results_annot, \n                                                  ctd_list = ctd_list)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding symptom-level results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSubsetting results by q_threshold and effect.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n2,479,345 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## Plot multi-scale mechanisms as an interactive network\nphenotype <- \"Recurrent Neisserial infections\"\nvn_rni <- MSTExplorer::prioritise_targets_network(\n  top_targets = results_annot[hpo_name==phenotype], \n  main = NULL,  \n  submain = NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: visNetwork\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file15972f54f8b9_prioritise_targets_network.html\n```\n\n\n:::\n:::\n\n\nNext, we sought to link multi-scale mechanisms at the levels of disease, phenotype, cell type, and gene and visualise these as a network ([Fig. @fig-network-rni]). This revealed that genetic deficiencies in different complement system genes (*C5*, *C8*, and *C7*) are primarily mediated by different cell types (hepatoblasts, stratified epithelial cells, and stromal cells, respectively). While genes of the complement system are expressed throughout many different tissues and cell types, these results indicate that different subsets of these genes may mediate their effects through different cell types. This finding suggests that investigating (during diagnosis) and targeting (during treatment) different cell types may be critical for the diagnosis and treatment of these closely related, yet mechanistically distinct, diseases.\n\n::: {#fig-network-rni .content-visible unless-format=\"html\"}\n![](img/fig-rni.png){height=\"500px;\"}\n\nMulti-scale mechanisms of Recurrent Neisserial infections. Starting from the bottom of the plot, one can trace how causal genes (yellow boxes) mediate their effects through cell types (orange circles), phenotypes (pruple cylinders) and ultimately diseases (blue cylinders). Cell types are connected to phenotypes via association testing ($FDR_{pc}<0.05$), and to diseases when the symptom gene set overlap is \\>25%. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].\n:::\n\n::: {.content-hidden unless-format=\"html\"}\n\n::: {#cell-fig-network-rni .cell}\n\n```{.r .cell-code .hidden}\nvn_rni$plot\n```\n\n![Multi-scale mechanisms of Recurrent Neisserial infections. Starting from the bottom of the plot, one can trace how causal genes (yellow boxes) mediate their effects through cell types (orange circles), phenotypes (pruple cylinders) and ultimately diseases (blue cylinders). Cell types are connected to phenotypes via association testing ($FDR_{pc}<0.05$), and to diseases when the symptom gene set overlap is >25%. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].](index_files/figure-pdf/fig-network-rni-1.pdf){#fig-network-rni fig-pos='H'}\n:::\n\n:::\n\n### Monarch Knowledge Graph recall\n\nNext, we used the Monarch Knowledge Graph (MKG) as a proxy for the field's current state of knowledge of phenotype-cell type associations. We evaluated the proportion of MKG associations that were recapitulation by our results [Fig. @fig-monarch-recall]. For each phenotype-cell type association in the MKG, we computed the percent of cell types recovered in our association results at a given ontological distance according to the CL ontology. An ontological distance of 0 means that our nominated cell type was as close as possible to the MKG cell type after adjusting for the cell types available in our single-cell references. Instances of exact overlap of terms between the MKG and our results would qualify as an ontological distance of 0 (e.g. 'monocyte' vs. 'monocyte'). Greater ontological distances indicate further divergence between the MKG cell type and our nominated cell type. A distance of 1 indicating that the MKG cell type was one step away from our nominated cell type in the CL ontology graph (e.g. 'monocyte' vs. 'classical monocyte'). The maximum possible percent of recovered terms is capped by the percentage of MKG ground-truth phenotypes we were able to find at least one significant cell type association for at $FDR_{pc}$.\n\nIn total, our results contained at least one significant cell type associations for 90.2% of the phenotypes described in the MKG. Of these phenotypes, we captured 54.9% of the MKG phenotype-cell associations at an ontological distance of 0 (i.e. the closest possible Cell Ontology term match). Recall increased with greater flexibility in the matching of cell type annotations. At an ontological distance of 1 (e.g. 'monocyte' vs. 'classical monocyte'), we captured 76.8% of the MKG phenotype-cell associations. Recall reached a maximum of 90.2% at a ontological distance of 5. This recall percentage is capped by the proportion of phenotype for which we were able to find at least one significant cell type association for. It should be noted that we were unable to compute precision as the MKG (and other knowledge databases) only provide true positive associations. Identifying true negatives (e.g. a cell type is definitely never associated with a phenotype) is a fundamentally more difficult task to resolve as it would require proving the null hypothesis. Regardless, these benchmarking tests suggests that our results are able to recover the majority of known phenotype-cell type associations while proposing many new associations.\n\n### Annotation of phenotypes using generative large language models\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngpt_check <- HPOExplorer::gpt_annot_check()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n255 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading in GPT annotations for 16,880 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nQuerying HPO for matching terms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNumber of phenotype hits per query group:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n - intellectual_disability: 19\n - impaired_mobility: 322\n - physical_malformations: 81\n - blindness: 1\n - sensory_impairments: 252\n - immunodeficiency: 29\n - cancer: 56\n - reduced_fertility: 9\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The `facets` argument of `facet_grid()` is deprecated as of ggplot2 2.2.0.\ni Please use the `rows` argument instead.\ni The deprecated feature was likely used in the HPOExplorer package.\n  Please report the issue at\n  <https://github.com/neurogenomics/HPOExplorer/issues>.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngpt_annot <- HPOExplorer::gpt_annot_codify() \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n255 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading in GPT annotations for 16,880 phenotypes.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngpt_annot$annot_weighted[,hpo_name:=gsub(\"^obsolete \",\"\",hpo_name)]\nleast_severe_phenotype <- gpt_annot$annot_weighted[hpo_name==\"Thin toenail\" & severity_score_gpt==0,]\n```\n:::\n\n\nSeverity annotations were gathered from GPT-4 for 16880/18536 (91.06603%) HPO phenotypes. In our companion study, benchmarking tests of these results using ground-truth HPO branch annotations. For example, phenotypes within the 'Blindness' HPO branch (*HP:0000618*) were correctly annotated as causing blindness by GPT-4. Across all annotations, the recall rate of GPT-4 annotations was 96.53% (min=89.66%, max=100%, SD=4.22) with a mean consistency score of 91.21% (min=80.96%, max=97.48%, SD=5.739) for phenotypes whose annotation were collected more than once. This clearly demonstrates the ability of GPT-4 to accurately annotate phenotypes. This allowed us to begin using these annotations to compute systematically collected severity scores for all phenotypes in the HPO.\n\nFrom these annotations we computed a weighted severity score metric for each phenotype ranging from 0-100 (100 being the theoretical maximum severity of a phenotype that always causes every annotation). Within our annotations, the most severe phenotype was 'Atrophy/Degeneration affecting the central nervous system' (*HP:0007367*) with a severity score of 46.67, followed by 'Anencephaly' (*HP:0002323*) with a severity score of 45. There were 677 phenotypes with a severity score of 0 (e.g. 'Thin toenail'). The mean severity score across all phenotypes was 10.25 (median=9.444, standard deviation=6.435).\n\n### Congenital phenotypes are associated with foetal cell types\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_congenital_annotations_out <- MSTExplorer::plot_congenital_annotations(\n  results = results,\n  hpo=hpo)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n255 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading in GPT annotations for 16,880 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n46,437 associations remain after filtering.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot_congenital_annotations_out_data <- \n  data.table::data.table(plot_congenital_annotations_out$data, key=\"congenital_onset\")\nplot_congenital_annotations_out_data[,summary:=paste0(\n  shQuote(congenital_onset),\"=\",.label,\n  \" (n=\",counts,\" associations)\"\n)]\nplot_congenital_annotations_out_stats <- data.table::data.table(\n  plot_congenital_annotations_out$data_stats$summary_data\n  )[,summary:=paste0(\n  \"$\",\n  \"p=\",format(p.value,digits=2),\",\",\n  \"\\\\chi^2_{Pearson}=\",format(statistic,digits=2),\",\",\n  \"\\\\hat{V}_{Cramer}=\",format(estimate,digits=2),\n  \"$\"\n)]\n```\n:::\n\n\nThe frequency of congenital onset with each phenotype (as determined by GPT-4 annotations) was strongly predictive with the proportion of significantly associated foetal cell types in our results ($p=2.3e-200,\\chi^2_{Pearson}=926,\\hat{V}_{Cramer}=0.14$). Furthermore, increasing congenital frequency annotation (on an ordinal scale) corresponded to an increase in the proportion of foetal cell types: 'always'=24% (n=1626 associations), 'often'=20% (n=2965 associations), 'rarely'=12% (n=1954 associations), 'never'=10% (n=806 associations). This is consistent with the expected role of foetal cell types in development and the aetiology of congenital disorders.\n\n\n::: {#cell-fig-congenital .cell}\n\n```{.r .cell-code .hidden}\nlegend_colors <- ggplot2::ggplot_build(\n  plot_congenital_annotations_out$plot)$data[[1]][[\"fill\"]]|>unique()\nimg_fetus <- magick::image_read(here::here(\"manuscript/img/fetus.png\"))\nimg_adult <- magick::image_read(here::here(\"manuscript/img/adult.png\"))\n\nfetus <- magick::image_ggplot(img_fetus) +\nggplot2::geom_line(data = data.frame(x = 1:2, y = 1:2),\n                   linewidth=20,\n                   ggplot2::aes(x, y, \n                                color = 'Foetal\\ncell\\ntypes')) +\nggplot2::scale_color_manual(NULL, values = legend_colors[1]) +\nggplot2::theme(legend.position = 'bottom',\n               legend.key.width = ggplot2::unit(2.5, 'cm')) \nadult <- magick::image_ggplot(img_adult) +\nggplot2::geom_line(data = data.frame(x = 0:1, y = 1:2),\n                   linewidth=20,\n                   ggplot2::aes(x, y, \n                                color = 'Adult\\ncell\\ntypes')) +\nggplot2::scale_color_manual(NULL, values = legend_colors[2]) +\nggplot2::theme(legend.position = 'top',\n               legend.key.width = ggplot2::unit(2.5, 'cm')) \n  \n \n\nplot_congenital_annotations_out$plot$labels$caption <- NULL\nplot_congenital_annotations_out$plot$labels$group <- NULL\n\n((\n  plot_congenital_annotations_out$plot +\n  ggplot2::labs(x=\"Frequency of congenital onset in phenotype\",\n                y=\"% phenotype-cell type associations\",\n                fill=NULL, group=NULL) +\n  ggplot2::theme(axis.text.x = ggplot2::element_text(size=12), \n                 legend.position = \"none\") \n) |\n  (\n    fetus /adult\n  )) +\n  patchwork::plot_layout(widths  = c(1, .25))\n```\n\n::: {.cell-output-display}\n![Congenital phenotypes are more often associated with foetal cell types. As a phenotype is more often congenital in nature, the greater proportion of foetal cell types are significantly associated with it. The summary statistics in the plot title are the results of a $\\chi^2$ tests of independence between the ordinal scale of congenital onset and the proportion of foetal cell types associated with each phenotype. The p-values above each bar are the results of an additional series of $\\chi^2$ tests to determine whether the proportion of foetal vs. non-foetal cell types significantly different differs from the proprortions expected by chance. The feotal silhouette was generated with DALL-E. The adult silhouette is from phylopic.org and is freely available via CC0 1.0 Universal Public Domain Dedication.](index_files/figure-pdf/fig-congenital-1.pdf){#fig-congenital fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#  Which branches of the HPO are most enriched for phenotypes with fetal cell type associations? \nplot_congenital_annotations_branch_out <- MSTExplorer::plot_congenital_annotations(\n  results = results,\n  by_branch=TRUE,\n  keep_descendants=\"Phenotypic abnormality\",\n  hpo=hpo)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n255 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading in GPT annotations for 16,880 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n17,958 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n46,090 associations remain after filtering.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nif(plot_congenital_annotations_branch_out$data_stats$summary_data$p.value==0){\n  plot_congenital_annotations_branch_out$data_stats$summary_data$p.value <- .Machine$double.xmin\n}\ntop_congenital <- unique(plot_congenital_annotations_branch_out$data[,c(\"ancestor_name\",\"perc\")])\n```\n:::\n\n\nWe also found that some branches of the HPO were more commonly enriched in foetal cell types compared to others ($\\hat{V}_{Cramer}$=0.22, $p$\\<2.2e-308). See The branch with the greatest proportion of fetal cell type enrichments was 'Abnormality of limbs' (35.46%), followed by 'Growth abnormality' (31.609%) and 'Abnormality of the musculoskeletal system' (28.63%). These results align well with the fact that physical malformations tend to be developmental in origin.\n\n### Therapeutic target identification\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nprioritise_targets_out <- MSTExplorer::prioritise_targets(\n  results = results, \n  ctd_list = ctd_list,\n  phenotype_to_genes = p2g,\n  hpo = hpo,\n  \n  keep_deaths=NULL,\n  keep_onsets=NULL,\n  keep_specificity_quantiles = seq(30,40), ## NULL:70, 30-40:64 \n  keep_mean_exp_quantiles = seq(30,40), ## NULL:65, 10:55\n  info_content_threshold=8, ## 8:55, 5:64 \n  effect_threshold=NULL, ## 1:39\n  severity_score_gpt_threshold=NULL, ## 10:78, NULL:82\n  symptom_intersection_threshold=.25, ## .25:57\n  evidence_score_threshold=3,  ## 5:47, 4:47, 3:64\n  top_n = 10, ## 5:38, 20:42, 30:45, 40:52, 50:55\n  group_vars = \"hpo_id\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritising gene targets.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding term definitions.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding information_content scores.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with Disease\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='start' \n - Rows: 51,845,437 \n - Phenotypes: 11,015 \n - Diseases: 12,467 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering @ q-value <= 0.05\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='q_threshold' \n - Rows: 2,114,658 \n - Phenotypes: 9,563 \n - Diseases: 12,467 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='effect_threshold' \n - Rows: 2,114,658 \n - Phenotypes: 9,563 \n - Diseases: 12,467 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with AgeOfDeath.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_deaths' \n - Rows: 2,114,658 \n - Phenotypes: 9,563 \n - Diseases: 12,467 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n17,958 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1,888,030 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_descendants' \n - Rows: 1,888,030 \n - Phenotypes: 9,487 \n - Diseases: 12,364 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_ont_levels' \n - Rows: 1,888,030 \n - Phenotypes: 9,487 \n - Diseases: 12,364 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n255 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading in GPT annotations for 16,880 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='gpt_filters' \n - Rows: 1,888,030 \n - Phenotypes: 9,487 \n - Diseases: 12,364 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='severity_score_gpt_threshold' \n - Rows: 1,888,030 \n - Phenotypes: 9,487 \n - Diseases: 12,364 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='info_content_threshold' \n - Rows: 978,259 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with onset.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_onsets' \n - Rows: 978,259 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with Tiers.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_tiers' \n - Rows: 978,259 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with modifiers\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='severity_threshold' \n - Rows: 978,334 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='severity_threshold_max' \n - Rows: 978,334 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with n_diseases\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: genes_to_phenotype.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='pheno_ndiseases_threshold' \n - Rows: 978,334 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenotype frequencies.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='pheno_frequency_threshold' \n - Rows: 980,548 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_celltypes' \n - Rows: 980,548 \n - Phenotypes: 7,672 \n - Diseases: 11,914 \n - Cell types: 201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting phenos to GRanges.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: ensembldb\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering metadata for 4924 unique genes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: EnsDb.Hsapiens.v75\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='symptom_gene_overlap' \n - Rows: 1,113,939 \n - Phenotypes: 7,019 \n - Diseases: 8,107 \n - Cell types: 201 \n - Genes: 4,648\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering by keep_chr.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_chr' \n - Rows: 1,113,939 \n - Phenotypes: 7,019 \n - Diseases: 8,107 \n - Cell types: 201 \n - Genes: 4,648\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering by gene-disease association evidence.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating gene-disease associations with Evidence Score\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='evidence_score_threshold' \n - Rows: 842,451 \n - Phenotypes: 6,614 \n - Diseases: 6,626 \n - Cell types: 201 \n - Genes: 3,935\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering by gene size.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n3,935 / 3,935 genes kept.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='gene_size' \n - Rows: 842,451 \n - Phenotypes: 6,614 \n - Diseases: 6,626 \n - Cell types: 201 \n - Genes: 3,935\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='keep_biotypes' \n - Rows: 842,451 \n - Phenotypes: 6,614 \n - Diseases: 6,626 \n - Cell types: 201 \n - Genes: 3,935\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='add_driver_genes' \n - Rows: 260,760 \n - Phenotypes: 6,455 \n - Diseases: 6,452 \n - Cell types: 201 \n - Genes: 3,870\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding symptom-level results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSubsetting results by q_threshold and effect.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n260,760 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nDropping subthreshold symptoms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='symptom_intersection_threshold' \n - Rows: 246,069 \n - Phenotypes: 6,410 \n - Diseases: 6,405 \n - Cell types: 201 \n - Genes: 3,840\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating gene frequencies.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: genes_to_phenotype.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='gene_frequency_threshold' \n - Rows: 340,475 \n - Phenotypes: 6,410 \n - Diseases: 6,405 \n - Cell types: 201 \n - Genes: 3,840\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n5243 / 6410 terms were kept after pruning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='prune_ancestors' \n - Rows: 187,076 \n - Phenotypes: 5,243 \n - Diseases: 6,096 \n - Cell types: 201 \n - Genes: 3,732\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSorting rows.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFinding top 10 gene targets per: hpo_id\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='top_n' \n - Rows: 32,301 \n - Phenotypes: 5,243 \n - Diseases: 4,802 \n - Cell types: 201 \n - Genes: 3,137\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPrioritised targets: step='end' \n - Rows: 32,301 \n - Phenotypes: 5,243 \n - Diseases: 4,802 \n - Cell types: 201 \n - Genes: 3,137\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngenes_per_pheno <- prioritise_targets_out$top_targets[,list(n=data.table::uniqueN(gene_symbol)),\n                                                      by=\"hpo_id\"]\np2g <- HPOExplorer::add_ont_lvl(p2g)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGetting absolute ontology level for 18,536 IDs.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmin_ont_lvl <- 3\ngenes_per_pheno_all <- p2g[ontLvl>min_ont_lvl,\n                           list(n=data.table::uniqueN(gene_symbol)),by=\"hpo_id\"]\n\n\ntop_celltypes <- prioritise_targets_out$top_targets[,list(\n  np=data.table::uniqueN(hpo_id)),\n  by=\"cl_name\"]|>data.table::setorderv(\"np\",-1)\ntop_ancestors <- prioritise_targets_out$top_targets[,list(\n  np=data.table::uniqueN(hpo_id),\n  nc=data.table::uniqueN(CellType),\n  ng=data.table::uniqueN(gene_symbol)\n  ),\n  by=\"ancestor_name\"]|>\n  data.table::setorderv(\"np\",-1)\n```\n:::\n\n\nNext, we identified putative cell type-specific gene targets for several severe disease phenotypes. This yielded putative therapeutic targets for 5243 phenotypes across 4802 diseases in 201 cell types and 3137 genes ([Fig. @fig-therapy-filter]). While this constitutes a large number of genes in total, each phenotype was assigned a median of 2 gene targets (mean=3.25, min=1, max=10). Relative to the number of genes annotations per phenotype in the HPO overall (median=7, mean=61.91, min=1, max=5069) this represents a substantial decrease in the number of candidate target genes, even when excluding high-level phenotypes (HPO level\\>3). It is also important to note that the phenotypes in the prioritised targets list are ranked by their severity, allowing us to distinguish between phenotypes with a high medical urgency (e.g. 'Hydranencephaly') from those with lower medical urgency (e.g. 'Hyperplastic labia majora'). This can be useful for both clinicians, biomedical scientists, and pharmaceutical manufacturers who wish to focus their research efforts on phenotypes with the greatest need for intervention.\n\nAcross all phenotypes, epithelial cell were most commonly implicated (837 phenotypes), followed by stromal cell (628 phenotypes), stromal cell (628 phenotypes), neuron (474 phenotypes), chondrocyte (382 phenotypes), and endothelial cell (361 phenotypes). Grouped by higher-order ontology category, 'Abnormality of the musculoskeletal system' had the greatest number of enriched phenotypes (957 phenotypes, 849 genes), followed by 'Abnormality of the nervous system' (731 phenotypes, 1133 genes), 'Abnormality of head or neck' (544 phenotypes, 982 genes), 'Abnormality of the genitourinary system' (442 phenotypes, 692 genes), and 'Abnormality of the eye' (376 phenotypes, 549 genes).\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_report_out <- MSTExplorer::plot_report(\n  results = results,\n  rep_dt =prioritise_targets_out$report[(Rows_diff!=0) | step %in% c(\"start\",\"end\")],\n  label.size = .1,\n  add_tiers = FALSE,\n  show_plot = FALSE, \n  save_path = NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nplot_report:: Preparing data.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nplot_report:: Preparing plot.\n```\n\n\n:::\n:::\n\n::: {#cell-fig-therapy-filter .cell}\n\n```{.r .cell-code .hidden}\nplot_report_out$plot\n```\n\n::: {.cell-output-display}\n![Therapeutics - Prioritised target filtering steps. This plot visualises the number of unique phenotype-cell type associations, cell types, genes, and phenotypes (*y-axis*) at each filtering step (*x-axis*) within the multi-scale therapeutic target prioritisation pipeline. Each step in the pipeline can be easily adjusted according to user preference and use case. See @tbl-filters for descriptions and criterion of each filtering step.](index_files/figure-pdf/fig-therapy-filter-1.pdf){#fig-therapy-filter fig-pos='H'}\n:::\n:::\n\n\n### Therapeutic target validation\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Gene therapy only\nttd_check_out <- MSTExplorer::ttd_check(\n  top_targets=prioritise_targets_out$top_targets, \n  drug_types = \"Gene therapy\",\n  allow.cartesian = TRUE,\n  show_plot = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: readxl\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in gprofiler.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing stored `gprofiler_orgs`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: hsapiens\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: hsapiens\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n13,815 / 27,118 (50.94%) genes mapped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNon-failed gene targets enrichment p-value: 0.00434349621845955\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFailed gene targets depletion p-value: 0.381262327416174\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggplot2::geom_text(data = unique(dat_sub[, c(\"HIGHEST_STATUS\", : Ignoring unknown aesthetics: fill\nIgnoring unknown aesthetics: fill\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## All therapy types\nttd_check_all_out <- MSTExplorer::ttd_check(\n  top_targets=prioritise_targets_out$top_targets,   \n  allow.cartesian = TRUE,\n  show_plot = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in gprofiler.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing stored `gprofiler_orgs`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: hsapiens\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: hsapiens\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n13,815 / 27,118 (50.94%) genes mapped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNon-failed gene targets enrichment p-value: 0.999999999254431\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFailed gene targets depletion p-value: 9.25199973630176e-191\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in ggplot2::geom_text(data = unique(dat_sub[, c(\"HIGHEST_STATUS\", : Ignoring unknown aesthetics: fill\nIgnoring unknown aesthetics: fill\n```\n\n\n:::\n:::\n\n\nTo determine whether the genes prioritised by our therapeutic targets pipeline were plausible, we checked what percentage of gene therapy targets we recapitulated. Data on therapeutic approval status was gathered from the Therapeutic Target Database (TTD; release 2024-06-11) [@Liu2011-qd]. Overall, we prioritised 79% of all non-failed existing gene therapy targets. A hypergeometric test confirmed that our prioritised targets were significantly enriched for non-failed gene therapy targets ($p=0.00434$). Importantly, we did not prioritise any of the failed therapeutics (0%), defined as having been terminated or withdrawn from the market. The hypergeometric test for depletion of failed targets did not reach significance ($p=0.381$), but this is to be expected as there was only one failed gene therapy target in the TTD database.\n\nEven when considering therapeutics of any kind ([Fig. @fig-therapy-validate-all]), not just gene therapies, we recapitulated 39% of the non-failed therapeutic targets and 0% of the terminated/withdrawn therapeutic targets (n=1255). Here we found that our prioritised targets were significantly enriched for non-failed therapeutics ($p=1$), and highly significantly depleted for failed therapeutics ($p=9e-191$). This suggests that our multi-scale evidence-based prioritisation pipeline is capable of selectively identifying genes that are likely to be effective therapeutic targets.\n\n\n::: {#cell-fig-therapy-validate .cell}\n\n```{.r .cell-code .hidden}\nttd_check_out$plot\n```\n\n::: {.cell-output-display}\n![Validation of prioritised therapeutic targets. The proportion of existing gene therapy targets (documented in the Therapeutic Target Database) recapitulated by our prioritisation pipeline. Therapetics are stratified by the stage of clinical development they were at during the time of writing.](index_files/figure-pdf/fig-therapy-validate-1.pdf){#fig-therapy-validate fig-pos='H'}\n:::\n:::\n\n\n### Selected example targets\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nres_class <- HPOExplorer::gpt_annot_class()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-04-26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n255 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading in GPT annotations for 16,880 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAssigning severity classes.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nprioritise_targets_grid_out <- MSTExplorer::prioritise_targets_grid(\n  top_targets = prioritise_targets_out$top_targets, \n  res_class = res_class,\n  keep_severity_class = c(\"profound\",\"severe\"),\n  keep_physical_malformations = c(0,1), \n  show_plot=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding level-2 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n17,958 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n5,668 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGetting absolute ontology level for 18,536 IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Macaca mulatta orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Macaca mulatta\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9544\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Macaca mulatta.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n16 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n16 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   4 / 20 (20%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   16 / 20 (80%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Mus musculus orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Mus musculus\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 10090\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Mus musculus.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n19 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n19 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   1 / 20 (5%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   19 / 20 (95%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Danio rerio orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Danio rerio\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 7955\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Danio rerio.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n19 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n19 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nDropping 2 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   5 / 20 (25%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   15 / 20 (75%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Drosophila melanogaster orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Drosophila melanogaster\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 7227\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Drosophila melanogaster.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n8 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n8 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   12 / 20 (60%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   8 / 20 (40%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Caenorhabditis elegans orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Caenorhabditis elegans\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 6239\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Caenorhabditis elegans.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n6 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n6 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   14 / 20 (70%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   6 / 20 (30%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Macaca mulatta orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Macaca mulatta\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9544\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Macaca mulatta.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   1 / 20 (5%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   19 / 20 (95%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Mus musculus orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Mus musculus\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 10090\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Mus musculus.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nDropping 1 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   0 / 20 (0%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   20 / 20 (100%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Danio rerio orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Danio rerio\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 7955\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Danio rerio.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n28 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n28 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nDropping 13 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   6 / 20 (30%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   14 / 20 (70%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Drosophila melanogaster orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Drosophila melanogaster\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 7227\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Drosophila melanogaster.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n5 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n5 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   14 / 20 (70%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   6 / 20 (30%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConverting human ==> Caenorhabditis elegans orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMapping species name: Caenorhabditis elegans\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n1 organism identified from search: 6239\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without orthologs in Caenorhabditis elegans.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n9 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n9 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nDropping 1 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes dropped after convert_orthologs :\n   13 / 20 (65%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTotal genes remaining after convert_orthologs :\n   7 / 20 (35%)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nseverity_score_gpt_threshold <- 15\ntop_targets <- prioritise_targets_out$top_targets[severity_score_gpt>severity_score_gpt_threshold,]\ntop_phenotypes <- unique(top_targets$hpo_name)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nheight <- \"100vh\"\nwidth <- \"100vw\"\nphenotypes_network <- c(\n\"GM2-ganglioside accumulation\",\n\"Spinocerebellar atrophy\",\n\"Neuronal loss in central nervous system\")\nvn_therapy <- lapply(stats::setNames(phenotypes_network, phenotypes_network), function(phenotype){\n  MSTExplorer::prioritise_targets_network(\n    top_targets = top_targets[hpo_name==phenotype], \n    main = NULL,\n    height = height,\n    width = width,\n    submain = NULL)$plot\n}) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file1597226985b4e_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file1597212654456_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file1597245204347_prioritise_targets_network.html\n```\n\n\n:::\n:::\n\n\n::: {#fig-therapy-examples .content-visible unless-format=\"html\"}\n\n::: {#cell-fig-therapy-examples .cell}\n\n```{.r .cell-code .hidden}\nimg_paths <- stats::setNames(\n  file.path(\"img/fig-therapy-examples\",c(\"tay-sachs.png\",\"spinocerebellar-atrophy.png\",\"neuronal-loss.png\")),\n  c(\"GM2-ganglioside accumulation\",\n    \"Spinocerebellar atrophy\",\n    \"Neuronal loss in central nervous system\")\n)\nfig_networks <- lapply(img_paths, function(x){\n  i = which(x==img_paths)\n  magick::image_read(x, density=300)|>magick::image_ggplot(interpolate=TRUE) +\n  ggplot2::theme_void() +\n  ggplot2::labs(subtitle=names(img_paths)[i]) +\n  ggplot2::theme(plot.margin = ggplot2::unit(c(0,0,0,0),\"pt\"), \n                 panel.background = ggplot2::element_rect(fill = \"grey50\"))\n}) |> patchwork::wrap_plots(nrow=1, widths=c(.5,.5,1))\n\n\nfig_therapy_examples <- ( (\n(patchwork::plot_spacer()|prioritise_targets_grid_out$plot) +patchwork::plot_layout(widths=c(0,1))\n) /\nfig_networks )+ \n patchwork::plot_annotation(tag_levels=\"a\")\nfig_therapy_examples\n\n# ggplot2::ggsave(fig_therapy_examples, filename=\"~/Downloads/fig_therapy_examples.png\", height=15, width=20, dpi=300)\n```\n\n::: {.cell-output-display}\n![Top 40 prioritised gene therapy targets at multiple biological scales, stratified by congenital (top row) vs. non-congential phenotypes (bottom row) as well as severity class (\"profound\" or \"severe\"). In this plot, only the top 10 most severe phenotypes within a given strata/substrata are shown **a,c**, Severity annotation generated by GPT-4. **b,d**, Composite severity scores computed across all severity metrics. **e,g**, Top mediator disease and cell type-specific target for each phenotype. **f,h** top target gene for each phenotype within humans (*Homo sapiens*). We also include the 1:1 ortholog of each human gene in several commonly used animal models, including monkey (*Macaca mulatta*), mouse (*Mus musculus*), zebrafish (*Danio rerio*), fly (*Drosophila melanogaster*) and nematode (*Caenorhabditis elegans*). Boxes are empty where no 1:1 ortholog is known. **i-k** Example cell type-specific gene therapy targets for several severe phenotypes and their associated diseases. Each disease (blue cylinders) is connected to its phenotype (purple cylinders) based on well-established clinical observations recorded within the HPO [@Gargano2024-fc]. Phenotypes are connected to cell types (red circles) via association testing between weighted gene sets ($FDR_{pc}<0.05$). Each cell type is connected to the prioritised gene targets (yellow boxes) based on the driver gene analysis.The thickness of the edges connecting the nodes represent the (mean) fold-change from the bootstrapped enrichment tests. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].](index_files/figure-pdf/fig-therapy-examples-1.pdf){#fig-therapy-examples fig-pos='H'}\n:::\n:::\n\n:::\n\n::: {.content-hidden unless-format=\"html\"}\n\n::: {#fig-therapy-examples2 .cell layout=\"[[1],[1,1,1]]\"}\n\n```{.r .cell-code .hidden}\nprioritise_targets_grid_out$plot\nvn_therapy\n```\n\n$`GM2-ganglioside accumulation`\n\n$`Spinocerebellar atrophy`\n\n$`Neuronal loss in central nervous system`\n\n![Top targets](index_files/figure-pdf/fig-therapy-examples2-1.pdf){#fig-therapy-examples2}\n\nTop 40 prioritised gene therapy targets at multiple biological scales, stratified by congenital (top row) vs. non-congential phenotypes (bottom row) as well as severity class (\"profound\" or \"severe\"). In this plot, only the top 10 most severe phenotypes within a given strata/substrata are shown **a,c**, Severity annotation generated by GPT-4. **b,d**, Composite severity scores computed across all severity metrics. **e,g**, Top mediator disease and cell type-specific target for each phenotype. **f,h** top target gene for each phenotype within humans (*Homo sapiens*). We also include the 1:1 ortholog of each human gene in several commonly used animal models, including monkey (*Macaca mulatta*), mouse (*Mus musculus*), zebrafish (*Danio rerio*), fly (*Drosophila melanogaster*) and nematode (*Caenorhabditis elegans*). Boxes are empty where no 1:1 ortholog is known. **i-k** Example cell type-specific gene therapy targets for several severe phenotypes and their associated diseases. Each disease (blue cylinders) is connected to its phenotype (purple cylinders) based on well-established clinical observations recorded within the HPO [@Gargano2024-fc]. Phenotypes are connected to cell types (red circles) via association testing between weighted gene sets ($FDR_{pc}<0.05$). Each cell type is connected to the prioritised gene targets (yellow boxes) based on the driver gene analysis.The thickness of the edges connecting the nodes represent the (mean) fold-change from the bootstrapped enrichment tests. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].\n:::\n\n:::\n\nFrom our prioritised targets, we selected the following four sets of phenotypes or diseases as examples: 'GM2-ganglioside accumulation', 'Spinocerebellar atrophy', 'Neuronal loss in central nervous system'. Only phenotypes with a GPT severity score greater than 15 were considered to avoid overplotting and to focus on the more clinically relevant phenotypes.\n\nTay-Sachs disease (TSD) is a devastating hereditary condition in which children are born appearing healthy, which gradually degrades leading to death after 3-5 years. The underlying cause is the toxic accumulation of gangliosides in the nervous system due to a loss of the enzyme produced by *HEXA*. While this could in theory be corrected with gene editing technologies, there remain some outstanding challenges. One of which is identifying which cell types should be targeted to ensure the most effective treatments. Here we identified alternatively activated macrophages as the cell type most strongly associated with 'GM2-ganglioside accumulation'. The role of aberrant macrophage activity in the regulation of ganglioside levels is supported by observation that gangliosides accumulate within macrophages in TSD [@fendersonChapterDevelopmentalGenetic2009], as well as experimental evidence in rodent models [@vilcaesGangliosideSynthesisPlasma2020.; @yoheGangliosideAlterationsStimulated1985; @demirGM2GangliosideAccumulation2020]. Our results not only corroborate these findings, but propose macrophages as the primary causal cell type in TSD, making it the most promising cell type to target in therapies.\n\nAnother challenge in TSD is early detection and diagnosis, before irreversible damage has occurred. Our pipeline implicated extravillous trophoblasts of the placenta in 'GM2-ganglioside accumulation'. While not necessarily a target for gene therapy, checking these cells *in utero* for an absence of *HEXA* may serve as a viable biomarker as these cells normally express the gene at high levels. Early detection of TSD may lengthen the window of opportunity for therapeutic intervention [@solovyevaNewApproachesTaySachs2018], especially when genetic sequencing is not available or variants of unknown significance are found within *HEXA* [@hoffmanNextgenerationDNASequencing2013].\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsca <- results[q<0.05 & hpo_name=='Spinocerebellar atrophy']\n```\n:::\n\n\nSpinocerebellar atrophy is a debilitating and lethal phenotype that occurs in diseases such as Spinocerebellar ataxia and Boucher-Nenhauser syndrome. These diseases are characterised by progressive degeneration of the cerebellum and spinal cord, leading to severe motor and cognitive impairments. Our pipeline identified M2 macrophages as the only causal cell type associated with 'Spinocerebellar atrophy'. This strongly suggests that degeneration of cerebellar Purkinje cells are in fact downstream consequences of macrophage dysfunction, rather than being the primary cause themselves. This is consistent with the known role of macrophages, especially microglia, in neuroinflammation and other neurodegenerative conditions such as Alzheimer's and Parkinsons' disease [@ferroRoleMicrogliaAtaxias2019; @holMicroglialTranscriptomicsMeets2022; @lopesAtlasGeneticEffects2020a]. While experimental and postmortem observational studies have implicated microglia in spinocerebellar atrophy previously [@ferroRoleMicrogliaAtaxias2019;], our results provide a statistically-supported and unbiased genetic link between known risk genes and this cell type. Therefore, targeting M2 microglia in the treatment of spinocerebellar atrophy may therefore represent a promising therapeutic strategy. This is aided by the fact that there are mouse models that perturb the ortholog of human spinocerebellar atrophy risk genes (e.g. [*Atxn1*](https://www.informatics.jax.org/marker/MGI:104783), [*Pnpla6*](https://www.informatics.jax.org/marker/MGI:1354723)) and reliably recapitulate the effects of this diseases at the cellular (e.g. loss of Purkinje cells), morphological (e.g. atrophy of the cerebellum, spinal cord, and muscles), and functional (e.g. ataxia) levels.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nneuronal_loss <- results[q<0.05 & hpo_name=='Neuronal loss in central nervous system']\n```\n:::\n\n\nNext, we investigated the phenotype 'Neuronal loss in the central nervous system'. Despite the fact that this is a fairly broad phenotype, we found that it was only significantly associated with 3 cell types (alternatively activated macrophage, macrophage, epithelial cell), specifically M2 macrophages and sinusoidal endothelial cells.\n\nSkeletal dysplasia is a heterogeneous group of over 450 disorders that affect the growth and development of bone and cartilage. This phenotype can be lethal when deficient bone growth leads to the constriction of vital organs such as the lungs. Even after surgical interventions, these complications continue to arise as the child develops. Pharmacological interventions to treat this condition have largely been ineffective. While there are various cell types involved in skeletal system development, our pipeline nominated chondrocytes as the causal cell type underlying the lethal form of this condition ([Fig. @fig-therapy-examples-supp]). Assuringly, we found that the disease 'Achondrogenesis Type 1B' is caused by the genes *SLC26A2* and *COL2A1* via chondrocytes. We also found that 'Platyspondylic lethal skeletal dysplasia, Torrance type'. Thus, in cases where surgical intervention is insufficient, targeting these genes within chondrocytes may prove a viable long-term solution for children suffering from lethal skeletal dysplasia.\n\nAlzheimer's disease (AD) is the most common neurodegenerative condition. It is characterised by a set of variably penetrant phenotypes including memory loss, cognitive decline, and cerebral proteinopathy. Interestingly, we found that different forms of early onset AD (which are defined by the presence of a specific disease gene) are each associated with different cell types via different phenotypes ([Fig. @fig-therapy-examples-supp]). For example, AD 3 and AD 4 are primarily associated with cells of the digestive system ('enterocyte', 'gastric goblet cell') and are implied to be responsible for the phenotypes 'Senile plaques', 'Alzheimer disease', 'Parietal hypometabolism in FDG PET'. Meanwhile, AD 2 is primarily associated with immune cells ('alternatively activated macrophage') and is implied to be responsible for the phenotypes 'Neurofibrillary tangles', 'Long-tract signs'. This suggests that different forms of AD may be driven by different cell types and phenotypes, which may help to explain its variability in onset and clinical presentation.\n\nFinally, Parkinson's disease (PD) is characterised by motor symptoms such as tremor, rigidity, and bradykinesia. However there are a number of additional phenotypes associated with the disease that span multiple physiological systems. PD 19a and PD 8 seemed to align most closely with the canonical understanding of PD as a disease of the central nervous system in that they implicated oligodendrocytes and neurons ([Fig. @fig-therapy-examples-supp]). Though the reference datasets being used in this study were not annotated at sufficient resolution to distinguish between different subtypes of neurons, in particular dopaminergic neurons. PD 19a/8 also suggested that risk variants in *LRRK2* mediate their effects on PD through both myeloid cells and oligodendrocytes by causing gliosis of the substantia nigra. The remaining clusters of PD mechanisms revolved around chondrocytes (PD 20), amacrine cells of the eye (hereditary late-onset PD), and the respiratory/immune system (PD 14). While the diversity in cell type-specific mechanisms is somewhat surprising, it may help to explain the wide variety of cross-system phenotypes frequently observed in PD.\n\nIt should be noted that the HPO only includes gene annotations for the monogenic forms of AD and PD. However it has previously been shown that there is at least partial overlap in their phenotypic and genetic aetiology with respect to their common forms. Thus understanding the monogenic forms of these diseases may shed light onto their more common counterparts.\n\n### Experimental model translatability\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npheno_map_genes_match <- KGExplorer::map_upheno_data(pheno_map_method = \"upheno\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached data: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/pheno_map_genes_match.rds\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npheno_map_targets <- pheno_map_genes_match[\n  id1 %in% unique(prioritise_targets_out$top_targets$hpo_id)\n  ]|>\n  data.table::setorderv(\"phenotype_genotype_score\",-1)\ntaxa_count <- sort(table(pheno_map_targets$gene_taxon_label2), decreasing = TRUE)\n\npheno_map_targets_severe <- pheno_map_targets[\n  id1 %in% unique(prioritise_targets_out$top_targets[severity_score_gpt>10,]$hpo_id)\n  ]\n\npheno_map_targets_severe[,summary:=paste0(\n  shQuote(object_label1), \n  \" ($SIM_{o,g}=\",round(phenotype_genotype_score,3),\"$)\"\n  )]\n```\n:::\n\n\nWe computed interspecies translatability scores using a combination of both ontological ($SIM_{o}$) and genotypic ($SIM_{g}$) similarity relative to each homologous human phenotype and its associated genes [Fig. @fig-animal-models]. In total, we mapped 278 non-human phenotypes (in *Caenorhabditis elegans*, *Danio rerio*, *Mus musculus*, *Rattus norvegicus*) to 849 homologous human phenotypes. Amongst the 5243 phenotype within our prioritised therapy targets, 353 had viable animal models in at least on non-human species. Per species, the number of homologous phenotypes was: *Danio rerio* (n=213), *Mus musculus* (n=150), *Caenorhabditis elegans* (n=35), *Rattus norvegicus* (n=3). Amongst our prioritised targets with a GPT-4 severity score of \\>10, the phenotypes with the greatest animal model similarity were 'Anterior vertebral fusion' ($SIM_{o,g}=0.967$), 'Disc-like vertebral bodies' ($SIM_{o,g}=0.964$), 'Metaphyseal enchondromatosis' ($SIM_{o,g}=0.946$), 'Peripheral retinal avascularization' ($SIM_{o,g}=0.943$), 'Retinal vascular malformation' ($SIM_{o,g}=0.943$).\n\n## Discussion {#sec-discussion}\n\nAcross the 201 cell types and 11,275 RD-associated phenotypes investigated, more than 46,437 significant phenotype-cell type relationships were discovered. This presents a wealth of opportunities to trace the mechanisms of rare diseases through multiple biological scales. This in turn enhances our ability to study and treat causal factors in disease with deeper understanding and greater precision. These results recapitulate well-known relationships, while providing additional cellular context to many of these known relationships, and discovering novel relationships.\n\nFrom our target prioritisation pipeline results, we highlight cell type-specific mechanisms for 'GM2-ganglioside accumulation' in Tay-Sachs disease, spinocerebellar atrophy in spinocerebellar ataxia, and 'Neuronal loss in central nervous system' in a variety of diseases ([Fig. @fig-therapy-examples]). Of interest, all three of these neurodegenerative phenotypes involved alternatively activated (M2) macrophages. The role of macrophages in neurodegeneration is complex, with both neuroprotective and neurotoxic functions, including the clearance of misfolded proteins, the regulation of the blood-brain barrier, and the modulation of the immune response [@gaoMicrogliaNeurodegenerativeDiseases2023]. We also recapitulated prior evidence that microglia, the resident macrophages of the nervous system, are causally implicated in Alzheimer's disease (AD) ([Fig. @fig-therapy-examples-supp]) [@mcquadeMicrogliaAlzheimerDisease2019]. An important contribution of our current study is that we were able to pinpoint the specific phenotypes of AD caused by macrophages to neurofibrillary tangles and long-tract signs (reflexes that indicate the functioning of spinal long fiber tracts). Other AD-associated phenotypes were caused by other cell types (e.g. gastric goblet cells, enterocytes).\n\nInvestigating RDs at the level of phenotypes offers several key advantages. First, the vast majority of RDs only have one associated gene (7788/8746 diseases = 89%). Aggregating gene sets across diseases into phenotype-centric \"buckets\" permits sufficiently well-powered analyses, with an average of \\~75 genes per phenotype (median=7) [see Fig. @fig-diagram]. Second, we hypothesise that these phenotype-level gene sets converge on a limited number of molecular and cellular pathways. Perturbations to these pathways manifest as one or more phenotypes which, when considered together, tend to be clinically diagnosed as a certain disease. Third, RDs are often highly heterogeneous in their clinical presentation across individuals, leading to the creation of an ever increasing number of disease subtypes (some of which only have a single documented case). In contrast, a phenotype-centric approach enables us to more accurately describe a particular individual’s version of a disease without relying on the generation of additional disease subcategories. By characterising an individual’s precise phenotypes over time, we may better understand the underlying biological mechanisms that have caused their condition. However, in order to achieve a truly precision-based approach to clinical care, we must first characterise the molecular and cellular mechanisms that cause the emergence of each phenotype. Here, we provide a highly reproducible framework that enables this at the scale of the entire phenome. This presents an opportunity to design basket trials of patients with different diseases but overlapping phenotypes and cellular mechanisms [@Zanello2023-zd]. It may be especially helpful for complex patients with diagnostically ambiguous sets of phenotypes who would otherwise be excluded from traditional clinical trials [@Diaz-Santiago2020-ep].\n\nIt was paramount to the success of this study to ensure our results were anchored in ground-truth benchmarks, generated falsifiable hypotheses, and rigorously guarded against false-positive associations. Extensive validation using multiple approaches demonstrated that our methodology consistently recapitulates expected phenotype-cell type associations ([Fig. @fig-summary]-[Fig. @fig-congenital]). This was made possible by the existence of comprehensive, structured ontologies for all phenotypes (HPO) and cell types (CL), which provide an abundance of clear and falsifiable hypotheses for which to test our predictions against. Several key examples include 1) strong enrichment of associations between cell types and phenotypes within the same anatomical systems ([Fig. @fig-summary]b-d), 2) a strong relationship between phenotype-specificity and the strength and number of cell type associations ([Fig. @fig-ontology-lvl]), 3) identification of the precise cell subtypes involved in susceptibility to various subtypes of recurrent bacterial infections ([Fig. @fig-rni]), 4) a strong positive correlation between the frequency of congenital onset of a phenotype and the proportion of developmental cell types associated with it ([Fig. @fig-congenital])), and 5) consistent phenotype-cell type associations across multiple independent single-cell datasets ([Fig. @fig-ctd-correlation]). Having validated our phenotype-cell type associations, we then went on to demonstrate how these results may be used in therapeutics development ([Fig. @fig-therapy-examples]).\n\nDiagnosis is an essential but challenging step in RD patient care. Additional phenotypes that emerge over time may assist a clinician to reach a more confident disease diagnosis. However many of these phenotypes can have a serious impact on patient quality of life or survival and avoiding them would be far better for patient outcomes. Often times phenotypes alone cannot clearly pinpoint the disease and thus a diagnosis is never reached. Having a more complete understanding of the mechanisms underlying observed phenotypes allows clinicians to far more effectively make predictions about what additional, less obvious phenotypes they should search for to confirm or reject their hypothesis of disease diagnosis (e.g. with imaging or biomarker tests).\n\nUnfortunately, there are currently only treatments available for less than 5% of RDs [@Halley2022-pd]. Novel technologies including CRISPR, prime editing, antisense oligonucleotides, viral vectors, and/or lipid nanoparticles, have been undergone significant advances in the last several years [@Bueren2023-ma; @Bulaklak2020-ta; @Godbout2023-uo; @Kohn2023-vh; @Zhao2023-qy] and proven remarkable clinical success in an increasing number of clinical applications [@Darrow2019-om; @Mendell2017-kg; @Mueller2017-fz; @Russell2017-dh]. The U.S. Food and Drug Administration (FDA) recently announced an landmark program aimed towards improving the international regulatory framework to take advantage of the evolving gene/cell therapy technologies [@Lu2024-kl] with the aim of bringing dozens more therapies to patients in a substantially shorter timeframe than traditional pharmaceutical product development (typically 5-20 years with a median of 8.3 years) [@Brown2022-ye]. While these technologies have the potential to revolutionise RD medicine, their successful application is dependent on first understanding the mechanisms causing each disease.\n\nTo address this critical gap in knowledge, we used our results to create a reproducible and customisable pipeline to nominate cell type-resolved therapeutic targets ([Fig. @fig-therapy-filter]-[Fig. @fig-therapy-examples]). Targeting cell type-specific mechanisms underlying granular RD phenotypes can improve therapeutic effectiveness by treating the causal root of an individual's conditions [@Bulaklak2020-ta; @Moffat2017-al]. A cell type-specific approach also helps to reduce the number of harmful side effects caused by unintentionally delivering the therapeutic to off-target tissues/cell types (which may induce aberrant gene activity), especially when combined with technologies that can target cell surface antigens (e.g viral vectors) [@Zhou2013-wx]. This has the additional benefit of reducing the minimal effective dose of a therapeutic, which can be both immunogenic and extremely financially costly [@Bueren2023-ma; @Kohn2023-vh; @Nuijten2022-yc; @Thielen2022-ud]. Here, we demonstrate the utility of a high-throughput evidence-based approach to RD therapeutics discovery by highlighting several of the most promising therapeutic candidates. Our pipeline takes into account a myriad of factors, including the strength of the phenotype-cell type associations, symptom-cell type associations, cell type-specificity of causal genes, the severity and frequency of the phenotypes, suitability for gene therapy delivery systems (e.g. recombinant adeno-associated viral vectors (rAAV)), as well as a quantitative analysis of phenotypic and genetic animal model translatability ([Fig. @fig-animal-models]). We validated these candidates by comparing the proportional overlap with gene therapies that are presently in the market or undergoing clinical trials, in which we recovered 79% of all active gene therapies and 0% of failed gene therapies ([Fig. @fig-therapy-validate], [Fig. @fig-therapy-validate-all]). Despite nominating a large number of putative targets, hypergeometric tests confirmed that our targets were strongly enriched for targets of existing therapies that are either approved or currently undergoing clinical trials.\n\nIt should be noted that our study has several key limitations. First, while our cell type datasets are amongst the most comprehensive human scRNA-seq references currently available, they are nevertheless missing certain tissues, cell types (e.g. spermatocytes, oocytes), and life stages (post-natal childhood, senility). It is also possible that we have not captured certain cell state signatures that only occur in disease (e.g. disease-associated microglia [@keren-shaulUniqueMicrogliaType2017; @deczkowskaDiseaseAssociatedMicrogliaUniversal2018]). Though we reasoned that using only control cell type signatures would mitigate bias towards any particular disease, and avoid degradation of gene signatures due to loss of function mutations. Second, the collective knowledge of gene-phenotype and gene-disease associations is far from complete and we fully anticipate that these annotations will continue to expand and change well into the future. It is for this reason we designed this study to be easily reproduced within a single containerised script so that we (or others) may rerun it with updated datasets at any point. Finally, causality is notoriously difficult to prove definitively from associative testing alone, and our study is not exempt from this rule. Despite this, there are several reasons to believe that our approach is able to better approximate causal relationships than traditional approaches. First, we did not intentionally preselect any subset of phenotypes or cell types to investigate here. Along with a scaling prestep during linear modelling, this means that all the results are internally consistent and can be directly compared to one another (in stark contrast to literature meta-analyses). Furthermore, for the phenotype gene signatures we used expert-curated GenCC annotations [@DiStefano2022-ao; @DiStefano2023-np] to weight the current strength of evidence supporting a causal relationship between each gene and phenotype. This is especially important for phenotypes with large genes lists (thousands of annotations) for which some of the relationships may be tenuous. Within the cell type references, we deliberately chose to use specificity scores (rather than raw gene expression) as this normalisation procedure has previously been demonstrated to better distinguish between signatures of highly similar cell types/subtypes [@Skene2016-rb].\n\nMoving forward, we are now actively seeking industry and academic partnerships to begin experimentally validating our multi-scale target predictions and exploring their potential for therapeutic translation. Nevertheless, there are more promising therapeutic targets here than our research group could ever hope to pursue by ourselves. In the interest of accelerating research and ensuring RD patients are able to benefit from this work as quickly as possible, we have decided to publicly release all of the results described in this study. These can be accessed in multiple ways, including through a suite of R packages as well as a web app, the [Rare Disease Celltyping Portal](https://neurogenomics.github.io/rare_disease_celltyping_apps/home/). The latter allows our results to be easily queried, filtered, visualised, and downloaded without any knowledge of programming. Through these resources we aim to make our findings useful to a wide variety of RD stakeholders including subdomain experts, clinicians, advocacy groups, and patients.\n\n## Conclusions {#sec-conclusions}\n\nUltimately, our primary objective was to develop a methodology capable of generating high-throughput phenome-wide predictions while preserving the accuracy and clinical utility typically associated with more narrowly focused studies. With the rapid advancement of gene therapy technologies, and a regulatory landscape that is evolving to better meet the needs of a large and diverse patient population, there is finally momentum to begin to realise the promise of personalised medicine. This has especially important implications for the global RD community which has remained relatively neglected. Here, we lay out the groundwork necessary for this watershed moment by providing a scalable, cost-effective, and fully reproducible means of resolving the multi-scale, cell-type specific mechanisms of virtually all rare diseases.\n\n## Methods {#sec-methods}\n\n### Human Phenotype Ontology\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngencc <- KGExplorer::get_gencc(agg_by = NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngencc_version <- KGExplorer::get_version(gencc, return_version = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n:::\n\n\nThe latest version of the HPO (release releases) was downloaded from the EMBL-EBI Ontology Lookup Service [@Cote2010-gp] and imported into R using the `HPOExplorer` package. This R object was used to extract ontological relationships between phenotypes as well as to assign absolute and relative ontological levels to each phenotype. The latest version of the HPO phenotype-to-gene mappings and phenotype annotations were downloaded from the official HPO GitHub repository and imported into R using `HPOExplorer`. This contains lists of genes associated with phenotypes via particular diseases, formatted as three columns in a table (gene, phenotype, disease).\n\nHowever, not all genes have equally strong evidence of causality with a disease or phenotype, especially when considering that the variety of resources used to generate these annotations (OMIM, Orphanet, DECIPHER) use variable methodologies (e.g. expert-curated review of the medical literature vs. automated text mining of the literature). Therefore we imported data from the Gene Curation Coalition (GenCC) [@DiStefano2022-ao; @DiStefano2023-np], which (as of 2024-05-17) 22060 evidence scores across 7259 diseases and 5165 genes. Evidence scores are defined by GenCC using a standardised ordinal rubric which we then encoded as a semi-quantitative score ranging from 0 (no evidence of disease-gene relationship) to 6 (strongest evidence of disease-gene relationship) (see @tbl-gencc). As each Disease-Gene pair can have multiple entries (from different studies) with different levels of evidence, we then summed evidence scores per Disease-Gene pair to generate aggregated Disease-by-Gene evidence scores. This procedure can be described as follows.\n\nLet us denote:\n\n-   $D$ as diseases.\n\n-   $P$ as phenotypes in the HPO.\n\n-   $G$ as genes\n\n-   $S$ as the evidence scores describing the strength of the relationship between each Disease-Gene pair.\n\n-   $M_{ij}$ as the aggregated Disease-by-Gene evidence score matrix.\n\n$$\nM_{ij} = \\sum_{k=1}^{\\text{f}} D_i G_j S_k\n$$\n\nNext, we extracted Disease-Gene-Phenotype relationships from the annotations file distributed by the HPO (*phenotype_to_genes.txt*). This provides a list of genes associated with phenotypes via particular diseases, but does not include any strength of evidence scores.\n\nHere we define: - $A_{ijk}$ as the Disease-Gene-Phenotype relationships. - $D_i$ as the $i$th disease. - $G_j$ as the $j$th gene. - $P_k$ as the $k$th phenotype.\n\n$$\nA_{ijk} = D_i G_j P_k\n$$\n\nIn order to assign evidence scores to each Phenotype-Gene relationship, we combined the aforementioned datasets from GenCC ($M_{ij}$) and HPO ($A_{ijk}$) by merging on the gene and disease ID columns. For each phenotype, we then computed the mean of Disease-Gene scores across all diseases for which that phenotype is a symptom. This resulted in a final 2D tensor of Phenotype-by-Gene evidence scores ($L_{ij}$):\n\n::: {#eq-evidence-scores .content-hidden unless-format=\"html\"}\n![](equations/eq1.png){height=\"300px\"}\n\n\\\n\nConstruction of the tensor of Phenotype-by-Gene evidence scores.\n:::\n\n\\\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\n```{=tex}\n$$\n \\eqnmarkbox[NavyBlue]{n1}{ L_{ij} } = \n \\begin{cases}\n  \\frac{\\sum_{k=1}^{\\text{f}} \n    \\eqnmarkbox[Cerulean]{n3a}{D_i G_j} \n    \\eqnmarkbox[BlueViolet]{n5}{P_k} \n    }{\\text{f}}, \n  \\text{if } \\eqnmarkbox[Cerulean]{n3b}{D_i G_j} \n    \\in \\eqnmarkbox[blue]{n4a}{A},\n  \\\\\n  1, \\hspace{2.2cm}\n  \\text{if } \\eqnmarkbox[Cerulean]{n3c}{D_i G_j} \n    \\notin\\eqnmarkbox[blue]{n4b}{A}\n \\end{cases}\n$$\n\\annotate[yshift=1em]{left}{n1}{Tensor of Phenotype-by-Gene \\\\evidence scores}\n\\annotate[yshift=2.5em]{right}{n3a,n3b,n3c}{Tensor of Disease-by-Gene \\\\evidence scores}\n\\annotate[yshift=-2.5em]{below,left}{n4a,n4b}{Disease-by-Gene-by-Phenotype \\\\relationships}\n\\annotate[yshift=1em, xshift=-1em]{right}{n5}{Phenotype}\n```\n\n\\\n\nConstruction of the tensor of Phenotype-by-Gene evidence scores.\n:::\n\n\\\n\nHistograms of evidence score distributions at each step in processing can be found in [Fig. @fig-evidence-histograms].\n\n### Single-cell transcriptomic atlases\n\nIn this study, the gene by cell type specificity matrix was constructed using the Descartes Human transcriptome atlas of foetal gene expression, which contains a mixture of single-nucleus and single-cell RNA-seq data (collected with sci-RNA-seq3) [@Cao2020-qz]. This dataset contains 377,456 cells representing 77 distinct cell types across 15 tissues. All 121 human foetal samples ranged from 72 to 129 days in estimated postconceptual age. To independently replicate our findings, we also used the Human Cell Landscape which contains single-cell transcriptomic data (collected with microwell-seq) from embryonic, foetal, and adult human samples across 49 tissues [@Han2020-iq].\n\nSpecificity matrices were generated separately for each transcriptomic atlas using the R package `EWCE` (v1.11.3) [@Skene2016-rb]. Within each atlas, cell types were defined using the authors’ original freeform annotations in order to preserve the granularity of cell subtypes as well as incorporate expert-identified rare cell types. Cell types were only aligned and aggregated to the level of corresponding Cell Ontology (CL) [@Diehl2016-gt] annotations afterwards when generating summary figures and performing cross-atlas analyses. Using the original gene-by-cell count matrices from each single-cell atlas, we computed gene-by-cell type expression specificity matrices as follows. Genes with very no expression across any cell types were considered to be uninformative and were therefore removed from the input gene-by-cell matrix $F(g,i,c)$.\n\nNext, we calculated the mean expression per cell type and normalised the resulting matrix to transform it into a gene-by-cell type expression specificity matrix ($S_{g,c}$). In other words, each gene in each cell type had a 0-1 score where 1 indicated the gene was mostly specifically expressed in that particular cell type relative to all other cell types. This procedure was repeated separately for each of the single-cell atlases and can be summarised as:\n\n::: {#eq-ctd-specificity .content-hidden unless-format=\"html\"}\n![](equations/eq3.png){height=\"300px\"}\n\nConstruction of the gene-by-cell type specificity matrix.\n:::\n\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\n```{=tex}\n\\begin{equation*}\n  \\eqnmarkbox[orange]{s1}{S_{gc}}\n  =\n  \\frac{\n    \\eqnmarkbox[purple]{s3a}{\n      \\frac{\n        \\sum_{i=1}^{|L|} F_{gic}\n      }{\n        N_c  \n      }\n    } \n  }{\n   \\eqnmarkbox[OrangeRed]{s6}{\\sum_{r=1}^{k}}(\n     \\eqnmarkbox[purple]{s3b}{\n      \\frac{\n        \\sum_{i=1}^{|L|} F_{gic}\n      }{\n        N_c  \n      }\n    } \n   ) \n  }\n\\end{equation*}\n\\annotate[yshift=1em]{left}{s1}{Gene-by-cell type specificity matrix} \n\\annotate[yshift=2em]{left}{s3a,s3b}{Compute mean expression of each gene per cell type} \n\\annotate{below,left}{s6}{Compute row sums of \\\\mean gene-by-cell type matrix}\n```\n\n:::\n\n\\\n\n### Phenotype-cell type associations\n\nTo test for relationships between each pairwise combination of phenotype (n=11,275) and cell type (n=201) we ran a series of univariate generalised linear models implemented via the `stats::glm` function in R. First, we filtered the gene-by-phenotype evidence score matrix ($L_{ij}$) and the gene-by-cell type expression specificity matrix ($S_{gc}$) to only include genes present in both matrices (n=4,949 genes in the Descartes Human analyses; n=4,653 genes in the Human Cell Landscape analyses). Then, within each matrix any rows or columns with a sum of 0 were removed as these were uninformative data points that did not vary. To improve interpretability of the results $\\beta$ coefficient estimates across models (i.e. effect size), we performed a scaling prestep on all dependent and independent variables. Initial tests showed that this had virtually no impact on the total number of significant results or any of the benchmarking metrics based on p-value thresholds [Fig. @fig-summary]. This scaling prestep improved our ability to rank cell types by the strength of their association with a given phenotype as determined by separate linear models.\n\nWe repeated the aforementioned procedure separately for each of the single-cell references. Once all results were generated using both cell type references (2,204,381 association tests total), we applied Benjamini-Hochberg false discovery rate [@Benjamini1995-vo] (denoted as $FDR_{pc}$) to account for multiple testing. Of note, we applied this correction across all results at once (as opposed to each single-cell reference separately) to ensure the $FDR_{pc}$ was stringently controlled for across all tests performed in this study.\n\n### Symptom-cell type associations\n\nHere we define a symptom as a phenotype as it presents within the context of the specific disease. The features of a given symptom can be described as the subset of genes annotated to phenotype $p$ via a particular disease $d$, denoted as $G_{dp}$ ([see Fig. @fig-diagram]). To attribute our phenotype-level cell type enrichment signatures to specific diseases, we first identified the gene subset that was most strongly driving the phenotype-cell type association by computing the intersect of genes that were both in the phenotype annotation and within the top 25% specificity percentile for the associated cell type. We then computed the intersect between symptom genes ($G_{dp}$) and driver genes ($G_{pc}$), resulting in the gene subset $G_{d \\cap p \\cap c}$. Only $G_{d \\cap p \\cap c}$ gene sets with 25% or greater overlap with the symptom gene subset ($G_{dp}$) were kept. This procedure was repeated for all phenotype-cell type-disease triads, which can be summarised as follows:\n\n::: {#eq-symptoms .content-hidden unless-format=\"html\"}\n![](equations/eq4.png){height=\"300px\"}\n:::\n\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\n```{=tex}\n\\begin{equation*}\n  \\frac{\n     \\eqnmarkbox[Chartreuse3]{g1}{|G_{d \\cap p \\cap c} |}\n    }{\n       \\eqnmarkbox[Emerald]{g2}{|G_{dp}|}} \n  \\geq \\eqnmarkbox[SeaGreen]{g3}{.25} \n\\end{equation*}\n\\annotate[yshift=1em]{left}{g1}{Intersect between \\\\symptom genes ($G_{dp}$) and driver genes ($G_{pc}$)} \n\\annotate[yshift=-1em]{below,left}{g2}{Symptom genes \\\\(i.e. genes annotated to a phenotype\\\\ via a specific disease)} \n\\annotate[yshift=-1em]{below,right}{g3}{Minimum proportion of overlap \\\\between $G_{dpc}$ and $G_{dp}$}\n```\n\n:::\n\n\\\n\n### Validation of expected phenotype-cell type relationships\n\nWe first sought to confirm that our tests (across both single-cell references) were able to recover expected phenotype-cell type relationships across seven high-level branches within the HPO ([Fig. @fig-summary]), including abnormalities of the cardiovascular system, endocrine system, eye, immune system, musculoskeletal system, nervous system, and respiratory system. Within each branch the number of significant tests in a given cell type were plotted ([Fig. @fig-summary]b). Mappings between freeform annotations (the level at which we performed our phenotype- cell type association tests) provided by the original atlas authors and their closest CL term equivalents were provided by CellxGene [@CZI_Single-Cell_Biology_Program2023-fs]. CL terms along the *x-axis* of [Fig. @fig-summary]b were assigned colours corresponding to which HPO branch showed the greatest number of enrichments (after normalising within each branch to account for differences in scale). The normalised colouring allows readers to quickly assess which HPO branch was most often associated with each cell type, while accounting for differences in the number of phenotypes across branches. We then ran a series of Analysis of Variance (ANOVA) tests to determine whether (within a given branch) a given cell type was more often enriched ($FDR_{pc}<0.05$) within that branch relative to all of the other HPO branches of an equivalent level in the ontology (including all branches not shown in [Fig. @fig-summary]b). After applying Benjamini-Hochberg multiple testing correction [@Benjamini1995-vo] (denoted as $FDR _{b,c}$), we annotated each respective branch-by-cell type bar according to the significance (\\*\\*\\*\\* : $FDR _{b,c}<1e-04$, \\*\\*\\* : $FDR _{b,c}<0.001$, \\*\\* : $FDR _{b,c}<0.01$, \\* : $FDR _{b,c}<0.05$). Cell types in [Fig. @fig-summary]a-b were ordered along the *x-axis* according to a dendrogram derived from the CL ontology ([Fig. @fig-summary]c), which provides ground-truth semantic relationships between all cell types (e.g. different neuronal subtypes are grouped together).\n\nAs an additional measure of the accuracy of our phenotype-cell types test results we identified conceptually matched branches across the HPO and the CL ([Fig. @fig-summary]d and @tbl-celltypes). For example, 'Abnormality of the cardiovascular system' in the HPO was matched with 'cardiocytes' in the CL which includes all cell types specific to the heart. Analogously, 'Abnormality of the nervous system' in the HPO was matched with 'neural cell' in the CL which includes all descendant subtypes of neurons and glia. This cross-ontology matching was repeated for each HPO branch and can be referred to as on-target cell types. Within each branch, the $-log_{10}(FDR _{pc})$ values of on-target cell types were binned by rounding to the nearest integer (*x-axis*) and the percentage of tests for on-target cell types relative to all cell types were computed at each bin (*y-axis*) ([Fig. @fig-summary]d). The baseline level (dotted horizontal line) illustrates the percentage of on-target cell types relative to the total number of observed cell types. Any percentages above this baseline level represent greater than chance representation of the on-target cell types in the significant tests.\n\n### Monarch Knowledge Graph recall\n\nFinally, we gathered known phenotype-cell type relationships from the Monarch Knowledge Graph (MKG), a comprehensive database of links between many aspects of disease biology [@Putman2024-et]. This currently includes 103 links between HPO phenotypes (n=103) and CL cell types (n=79). Of these, we only considered the 82 phenotypes that we were able to test given that our ability to generate associations was dependent on the existence of gene annotations within the HPO. We considered instances where we found a significant relationship between exactly matching pairs of HPO-CL terms as a hit.\n\nHowever, as the cell types in MKG were not necessarily annotated at the same level as our single-cell references, we considered instances where the MKG cell type was an ancestor term of our cell type (e.g. 'myeloid cell' vs. 'monocyte'), or *vice versa*, as hits. We also adjusted ontological distance by computing the ratio between the observed ontological distance and the smallest possible ontological distance for that cell type given the cell type that were available in our references ($dist_{adjusted}=(\\frac{dist_{observed}+1}{dist_{minimum}+1})-1$). This provides a way of accurately measuring how dissimilar our identified cell types were for each phenotype-cell type association ([Fig. @fig-monarch-recall]).\n\n### Annotation of phenotypes using generative large language models\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngpt_codes <- formals(HPOExplorer::gpt_annot_codify)\ncode_dict <- paste0(shQuote(names(eval(gpt_codes$code_dict))),\"=\",\n                     eval(gpt_codes$code_dict), collapse = \", \")\ntiers_dict <- paste0(shQuote(names(eval(gpt_codes$tiers_dict))),\"=\",\n                     eval(gpt_codes$tiers_dict), collapse = \", \") \n```\n:::\n\n\nOnly a small fraction of the the phenotypes in HPO (\\<1%) have metadata annotations containing information on their time course, consequences, and severity. This is due to the time-consuming nature of manually annotating thousands of phenotypes. To generate such annotations at scale, we used Generative Pre-trained Transformer 4 (GPT-4), a large language model (LLM) as implemented within OpenAI’s chatGPT Application Programming Interface (API). After extensive prompt engineering and ground-truth benchmarking, we were able to acquire annotations on how often each phenotype directly causes intellectual disability, death, impaired mobility, physical malformations, blindness, sensory impairments, immunodeficiency, cancer, reduced fertility, or is associated with a congenital onset. These criteria were previously defined in surveys of medical experts as a means of systematically assessing phenotype severity [@Lazarin2014-we]. Responses for each metric were provided in a consistent one-word format which could be one of: 'never', 'rarely', 'often', 'always'. This procedure was repeated in batches (to avoid exceeding token limits) until annotations were gathered for 16880/18536 HPO phenotypes.\n\nWe then encoded these responses into a semi-quantitative scoring system ('never'=0, 'rarely'=1, 'often'=2, 'always'=3), which were then weighted by multiplying a semi-subjective scoring of the relevance of each metric to the concept of severity on a scale from \\ensuremath{\\infty{}}-\\ensuremath{-\\infty{}}, with \\ensuremath{-\\infty{}} being the most severe (=). Finally, the product of the score was normalised to a quantitative severity score ranging from 0-100, where 100 is the theoretical maximum severity score. This phenotype severity scoring procedure can be expressed as follows.\n\nLet us denote:\n\n-   $p$ : a phenotype in the HPO.\n\n-   $j$ : the identity of a given annotation metric (i.e. clinical characteristic, such as 'intellectual disability' or 'congenital onset').\n\n-   $W_j$: the assigned weight of metric $j$.\n\n-   $F_j$: the maximum possible value for metric $j$ (equivalent across all $j$).\n\n-   $F_{pj}$ : the numerically encoded value of annotation metric $j$ for phenotype $p$.\n\n-   $NSS_p$: the final composite severity score for phenotype $p$ after applying normalisation to align values to a 0-100 scale and ensure equivalent meaning regardless of which other phenotypes are being analysed in addition to $p$. This allows for direct comparability of severity scores across studies with different sets of phenotypes.\n\n::: {#eq-gpt .content-hidden unless-format=\"html\"}\n![](equations/eq5.png){height=\"300px\"}\n\nComputing normalised severity score from encoded GPT-4 annotations.\n:::\n\n\\\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\n```{=tex}\n\\begin{equation*}\n  \\eqnmarkbox[Brown4]{nss}{NSS_p}\n  =\n  \\frac{ \n    \\eqnmarkbox[Goldenrod]{nss2}{\\sum_{j=1}^{m}} \n    (\n      \\eqnmarkbox[Goldenrod4]{nss3}{F_{pj}}\n      \\times \n      \\eqnmarkbox[IndianRed4]{nss4}{W_j}\n    )\n    }{\n    \\eqnmarkbox[Tan]{nss5}{\\sum_{j=1}^{m}(\\max\\{F_j\\} \\times W_j)} \n  } \\times 100\n\\end{equation*}\n\\annotate[yshift=1em]{left}{nss}{Normalised Severity Score \\\\for each phenotype}\n\\annotate[yshift=3em]{left}{nss2}{Sum of weighted annotation values \\\\across all metrics}\n\\annotate[yshift=3em]{right}{nss3}{Numerically encoded annotation value \\\\of metric $j$ for phenotype $p$}\n\\annotate[yshift=1em]{right}{nss4}{Weight for metric $j$} \n\\annotate[yshift=-1em]{below,right}{nss5}{Theoretical maximum severity score}\n```\n\n:::\n\n\\\n\n### Congenital phenotypes are associated with foetal cell types\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nfetal_keywords <- shQuote(eval(formals(MSTExplorer::plot_congenital_annotations)$fetal_keywords) )\n```\n:::\n\n\nThe GPT-4 annotations also enabled us to assess whether foetal cell types were more often significantly associated with congenital phenotypes in our Human Cell Landscape results as this single-cell reference contained both adult and foetal versions of cell types ([Fig. @fig-congenital]). To do this, we performed a chi-squared ($\\chi^2$) test on the proportion of significantly associated cell types containing any of the substrings 'fetal', 'fetus', 'primordial', 'hESC' or 'embryonic' (within cell types annotations from the original Human Cell Landscape authors [@Han2020-iq]) vs. those associated without, stratified by how often the corresponding phenotype had a congenital onset according to the GPT phenotype annotations (including 'never', 'rarely', 'often', 'always'). In addition, a series of $\\chi^2$ tests were performed within each congenital onset frequency strata, to determine whether the observed proportion of foetal cell types vs. non-foetal cell types significantly deviated from the proportions expected by chance.\n\nWe next tested whether the proportion of tests with significant associations with foetal cell types varied across the major HPO branches using a $\\chi^2$ test. We also performed separate $\\chi^2$ test within each branch to determine whether the proportion of significant associations with foetal cell types was significantly different from chance.\n\n### Therapeutic target identification\n\nWe developed a systematic and automated strategy for identifying putative cell type-specific gene targets for each phenotype based on a series of filters at phenotype, cell type, and gene levels. The entire target prioritisation procedure can be replicated with a single function: `MSTExplorer::prioritise_targets`. This function automates all of the reference data gathering (e.g. phenotype metadata, cell type metadata, cell type signature reference, gene lengths, severity tiers) and takes a variety of arguments at each step for greater customisability. Each step is described in detail in @tbl-filters.\n\n### Therapeutic target validation\n\nTo assess whether our prioritised therapeutic targets were likely to be viable, we computed the overlap between our gene targets and those of existing gene therapies at various stages of clinical development ([Fig. @fig-therapy-validate]). Gene targets were obtained for each therapy from the Therapeutic Target Database (TTD; release 2024-06-11) and mapped onto standardised HUGO Gene Nomenclature Committee (HGNC) gene symbols using the `orthogene` R package. We stratified our overlap metrics according to whether the therapies had failed (unsuccessful clinical trials or withdrawn), or were non-failed (successful or ongoing clinical trials). We then conducted hypergeometric tests to determine whether the observed overlap between our prioritised targets and the non-failed therapy targets was significantly greater than expected by chance (i.e. enrichment). We also conducted a second hypergeometric test to determine whether the observed overlap between our prioritised targets and the failed therapy targets was significantly less than expected by chance (i.e. depletion). Finally, we repeated the analysis against all therapeutic targets, not just those of gene therapies, to determine whether our prioritised targets had relevance to other therapeutic modalities.\n\n### Experimental model translatability\n\nTo improve the likelihood of successful translation between preclinical animal models and human patients, we created an interspecies translatability prediction tool for each phenotype nominated by our gene therapy prioritised pipeline ([Fig. @fig-animal-models]). First, we extracted ontological similarity scores of homologous phenotypes across species from the MKG [@Putman2024-et]. Briefly, the ontological similarity scores ($SIM_o$) are computed for each homologous pair of phenotypes across two ontologies by calculating the overlap in homologous phenotypes that are ancestors or descendants of the target phenotype. Next, we generated genotypic similarity scores ($SIM_g$) for each homologous phenotype pair by computing the proportion of 1:1 orthologous genes using gene annotation from their respective ontologies. Interspecies orthologs were also obtained from the MKG. Finally, both scores are multiplied together to yield a unified ontological-genotypic similarity score ($SIM_{o,g}$).\n\n### Novel R packages\n\nTo facilitate all analyses described in this study and to make them more easily reproducible by others, we created several open-source R packages. [`KGExplorer`](https://github.com/neurogenomics/KGExplorer) imports and analyses large-scale biomedical knowledge graphs and ontologies. [`HPOExplorer`](https://github.com/neurogenomics/HPOExplorer) aids in managing and querying the directed acyclic ontology graph within the HPO. [`MSTExplorer`](https://github.com/neurogenomics/MSTExplorer) facilitates the efficient analysis of many thousands of phenotype-cell type association tests, and provides a suite of multi-scale therapeutic target prioritisation and visualisation functions. These R packages also include various functions for distributing the post-processed results from this study in an organised, tabular format. Of note, `MSTExplorer::load_example_results` loads all summary statistics from our phenotype-cell type tests performed here.\n\n### Rare Disease Celltyping Portal\n\nTo further increase the ease of access for stakeholders in the RD community without the need for programmatic experience, we developed a series of web apps to interactively explore, visualise, and download the results from our study. Collectively, these web apps are called the Rare Disease Celltyping Portal. The landing page for the website was made using HTML, CSS, and javascript and the web apps were created using the Shiny Web application framework for R and deployed on the [shinyapps.io](https://www.shinyapps.io) server. The website can be accessed [here](https://neurogenomics.github.io/rare_disease_celltyping_apps/home). All code used to generate the website can be found [here](https://github.com/neurogenomics/rare_disease_celltyping_apps).\n\n\n{{< pagebreak >}}\n\n\n\n## Tables\n\n\n::: {#tbl-summary .cell tbl-cap='Summary statistics of enrichment results stratified by single-cell atlas. Summary statistics at multiple levels (tests, cell types, phenotypes, diseases, cell types per phenotype, phenotypes per cell type) stratified by the single-cell atlas that was used as a cell type signature reference (Descartes Human or Human Cell Atlas).'}\n\n```{.r .cell-code .hidden}\ndata.frame(res_summ$tmerged[,-c(\"ctd\")], \n             row.names = res_summ$tmerged$ctd,\n             check.names = FALSE) |>\n  t() |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|                                  |DescartesHuman |HumanCellLandscape |all       |\n|:---------------------------------|:--------------|:------------------|:---------|\n|tests significant                 |19,894         |26,543             |46,437    |\n|tests                             |847,077        |1,357,304          |2,204,381 |\n|tests significant (%)             |2.35           |1.96               |2.11      |\n|cell types significant            |77             |124                |201       |\n|cell types                        |77             |124                |201       |\n|cell types significant (%)        |100            |100                |100       |\n|phenotypes significant            |7,330          |9,038              |9,563     |\n|phenotypes tested                 |11,001         |10,946             |11,015    |\n|phenotypes                        |11,275         |11,275             |11,275    |\n|phenotypes significant (%)        |65.0           |80.2               |84.8      |\n|diseases significant              |8,741          |8,743              |8,741     |\n|diseases                          |8,746          |8,746              |8,746     |\n|diseases significant (%)          |99.9           |100.0              |99.9      |\n|cell types per phenotype (mean)   |1.81           |2.42               |4.22      |\n|cell types per phenotype (median) |1              |2                  |3         |\n|cell types per phenotype (min)    |0              |0                  |0         |\n|cell types per phenotype (max)    |31             |28                 |59        |\n|phenotypes per cell type (mean)   |258            |214                |231       |\n|phenotypes per cell type (median) |252            |200                |209       |\n|phenotypes per cell type (min)    |71             |57                 |57        |\n|phenotypes per cell type (max)    |694            |735                |735       |\n\n\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#tbl-filters .cell tbl-cap='Description of each filtering step performed in the multi-scale therapeutic target prioritisation pipleline. \\'Level\\' indicates the biological scale at which the step is applied to.'}\n\n```{.r .cell-code .hidden}\ntbl_filters <- plot_report_out$data$filters[,.SD[1],by=c(\"step\")][,c(\"level\",\"step\",\"description\")]\ntbl_filters[,step:=gsub(\"_\",\" \",step)]\nknitr::kable(as.data.frame(tbl_filters))\n```\n\n::: {.cell-output-display}\n\n\n|level     |step                               |description                                                                                                                                                                                          |\n|:---------|:----------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|NA        |1. start                           |NA                                                                                                                                                                                                   |\n|Cell type |2. q threshold                     |Keep only cell type-phenotype association results at q<=0.05.                                                                                                                                        |\n|Phenotype |3. keep descendants                |Remove phenotypes belonging to a certain branch of the HPO,as defined by an ancestor term.                                                                                                           |\n|Phenotype |4. info content threshold          |Keep only phenotypes with a minimum information criterion score(computed from the HPO).                                                                                                              |\n|Phenotype |5. severity threshold              |Keep only phenotypes with mean Severity equal to or below the threshold.                                                                                                                             |\n|Symptom   |6. pheno frequency threshold       |Keep only phenotypes with mean frequency equal to or above the threshold(i.e. how frequently a phenotype is associated with any diseases inwhich it occurs).                                         |\n|Gene      |7. symptom gene overlap            |Ensure that genes nominated at the phenotype-level alsoappear in the genes overlapping at the cell type-specific symptom-level.                                                                      |\n|Gene      |8. evidence score threshold        |Remove genes that are below an aggregate phenotype-gene evidence score threshold.                                                                                                                    |\n|Gene      |9. add driver genes                |Keep only genes that are driving the association with a given phenotype(inferred by the intersection of phenotype-associated genes and gene withhigh-specificity quantiles in the target cell type). |\n|Symptom   |10. symptom intersection threshold |Minimum proportion of genes overlapping between a symptom gene list(phenotype-associated genes in the context of a particular disease)and the phenotype-cell type association driver genes.          |\n|Gene      |11. gene frequency threshold       |Keep only genes at or above a certain mean frequency threshold(i.e. how frequently a gene is associated with a given phenotypewhen observed within a disease).                                       |\n|Phenotype |12. prune ancestors                |Remove redundant ancestral phenotypes when at least one of theirdescendants already exist.                                                                                                           |\n|All       |13. top n                          |Sort candidate targets by a preferred order of metrics andonly return the top N targets per cell type-phenotype combination.                                                                         |\n|NA        |14. end                            |NA                                                                                                                                                                                                   |\n\n\n:::\n:::\n\n{{< pagebreak >}}\n\n\n\n## Data and Code Availability\n\nAll data and code is made freely available through preexisting databases and/or GitHub repositories / software associated with this publication.\n\n-   [Human Phenotype Ontology](https://hpo.jax.org)\n-   [GenCC](https://thegencc.org/)\n-   [Descartes Human scRNA-seq atlas](https://cellxgene.cziscience.com/collections/c114c20f-1ef4-49a5-9c2e-d965787fb90c)\n-   [Human Cell Landscape scRNA-seq atlas](https://cellxgene.cziscience.com/collections/38833785-fac5-48fd-944a-0f62a4c23ed1)\n-   [Rare Disease Celltyping Portal](https://neurogenomics.github.io/rare_disease_celltyping_apps/home)\n-   [`KGExplorer`](https://github.com/neurogenomics/KGExplorer)\n-   [`HPOExplorer`](https://github.com/neurogenomics/HPOExplorer)\n-   [`MSTExplorer`](https://github.com/neurogenomics/MSTExplorer)\n-   [Code to replicate analyses](https://github.com/neurogenomics/rare_disease_celltyping)\n-   [Cell type-specific gene target prioritisation](https://neurogenomics.github.io/RareDiseasePrioritisation/reports/prioritise_targets)\n-   [Complement system gene list](https://www.genenames.org/data/genegroup/#!/group/492)\n\n## Acknowledgements\n\nWe would like to thank the following individuals for their insightful feedback and assistance with data resources: Sarah J. Marzi, Gerton Lunter, Peter Robinson, Melissa Haendel, Ben Coleman, Nico Matentzoglu, Shawn T. O'Neil, Alan E. Murphy, Sarada Gurung.\n\n### Funding\n\nThis work was supported by a UK Dementia Research Institute (UK DRI) Future Leaders Fellowship \\[MR/T04327X/1\\] and the UK DRI which receives its funding from UK DRI Ltd, funded by the UK Medical Research Council, Alzheimer’s Society and Alzheimer's Research UK.\n\n## References {.unnumbered}\n\n::: {#refs}\n:::\n\n\\\n\n\n{{< pagebreak >}}\n\n\n\n## Supplementary Materials\n\n### Supplementary Figures\n\n\n::: {#cell-fig-evidence-histograms .cell}\n\n```{.r .cell-code .hidden}\nevidence_plot <- HPOExplorer::plot_evidence(phenotype_to_genes = p2g,\n                                            show_plot = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating gene-disease associations with Evidence Score\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with Disease\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nConstructing HPO gene x phenotype matrix.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating gene-disease associations with Evidence Score\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAnnotating phenos with Disease\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nevidence_plot$plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Distribution of evidence scores at each processing step.](index_files/figure-pdf/fig-evidence-histograms-1.pdf){#fig-evidence-histograms fig-pos='H'}\n:::\n:::\n\n\n::: {#fig-diagram}\n![](img/fig-diagram.png)\n\nDiagrammatic overview of multi-scale disease investigation strategy. Here we provide an abstract example of differential disease aetiology across multiple scales: diseases ($D$), phenotypes ($P$), cell types ($C$), genes ($G$), and clinical outcomes ($O$). In the HPO, genes are assigned to phenotypes via particular diseases ($G_{dp}$). Therefore, the final gene list for each phenotype is aggregated from across multiple diseases ($G_{p}$). We performed association tests for all pairwise combinations of cell types and phenotypes and filtered results after multiple testing corrections ($FDR_{pc}<0.05$). Each phenotype in the context of a given disease is referred to here as a symptom. Links were established between symptoms and cell types through proportional gene set overlap at a minimum threshold of 25%.\n:::\n\n\n{{< pagebreak >}}\n\n\n::: {#cell-fig-ctd-correlation .cell}\n\n```{.r .cell-code .hidden}\n(\n  (validate_associations_correlate_ctd_out$plot$p.all |\n validate_associations_correlate_ctd_out$plot$logFC.significant) /\n  (validate_associations_correlate_ctd_out_hcl$plot$p.all |\n  validate_associations_correlate_ctd_out_hcl$plot$logFC.significant)\n) +\n  patchwork::plot_annotation(tag_levels = letters)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Inter- and intra-dataset validation across the different CellTypeDataset (CTD) and developmental stages. Correlations are computed using Pearson correlation coefficient. Point density is plotted using a 2D kernel density estimate. **a** Correlation between the uncorrected p-values from all phenotype-cell type association tests using the Descartes Human vs. Human Cell Landscape CTDs. **b** Correlation between the $log_{10}(fold-change)$ from significant phenotype-cell type association tests ($FDR_{pc}<0.05$) using the Descartes Human vs. Human Cell Landscape CTDs. **c** Correlation between the uncorrected p-values from all phenotype-cell type association tests using the Human Cell Landscape fetal samples vs. Human Cell Landscape adult samples. **d** Correlation between the $log_{10}(fold-change)$ from significant phenotype-cell type association tests ($FDR_{pc}<0.05$) using the Human Cell Landscape fetal samples vs. Human Cell Landscape adult samples.](index_files/figure-pdf/fig-ctd-correlation-1.pdf){#fig-ctd-correlation fig-pos='H'}\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#cell-fig-monarch-recall .cell}\n\n```{.r .cell-code .hidden}\nvalidate_associations_mkg_out$cl_distance_results$plot\n```\n\n::: {.cell-output-display}\n![Recall of ground-truth Monarch Knowledge Graph phenotype-cell type relationships at each ontological distance between cell types according to the Cell Ontology.](index_files/figure-pdf/fig-monarch-recall-1.pdf){#fig-monarch-recall fig-pos='H'}\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#cell-fig-congenital-branches .cell}\n\n```{.r .cell-code .hidden}\nplot_congenital_annotations_branch_out$plot$labels$caption <- NULL\nplot_congenital_annotations_branch_out$plot$labels$group <- \"Foetal\\ncell\\ntype\"\nplot_congenital_annotations_branch_out$plot$labels$x <- \"HPO ancestor\"\nplot_congenital_annotations_branch_out$plot\n```\n\n::: {.cell-output-display}\n![The proportion of cell type-phenotype association tests that are enriched for foetal cell types within each HPO branch.](index_files/figure-pdf/fig-congenital-branches-1.pdf){#fig-congenital-branches fig-pos='H'}\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#cell-fig-therapy-validate-all .cell}\n\n```{.r .cell-code .hidden}\nttd_check_all_out$plot\n```\n\n::: {.cell-output-display}\n![Therapeutics - Validation of prioritised therapeutic targets. Proportion of existing all therapy targets (documented in the Therapeutic Target Database) recapitulated by our prioritisation pipeline.](index_files/figure-pdf/fig-therapy-validate-all-1.pdf){#fig-therapy-validate-all fig-pos='H'}\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#cell-fig-animal-models .cell}\n\n```{.r .cell-code .hidden}\nlibrary(ggplot2) # <-- Necessary due to bug in one of the plotting dependencies \nupheno <- KGExplorer::get_ontology(name=\"upheno\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/upheno.rds\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntop_ids <- unique(prioritise_targets_out$top_targets$hpo_id)[seq(1000)]\nplot_upheno_out <- KGExplorer::plot_upheno(\n  pheno_map_genes_match = pheno_map_genes_match, \n  filters=list(id1=top_ids)\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nFiltered 'id1' : 884 / 987 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n3 / 4 species remain after filtering by `subset_db1`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: ggdist\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required namespace: tidyquant\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/upheno.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot_upheno_out$heatmap\n```\n\n::: {.cell-output-display}\n![Identification of translatable experimental models. Interspecies translatability of human phenotypes nominated by the gene therapy prioritised pipeline. Above, the combined ontological-genotypic similarity score ($SIM_{o,g}$) is displayed as the heatmap fill colour stratified by the model organism (*x-axis*). An additional column (“n_genes_db1” on the far left) displays the total number of unique genes annotated to the phenotypic within the HPO. Phenotypes are clustered according to their ontological similarity in the HPO (*y-axis*).](index_files/figure-pdf/fig-animal-models-1.pdf){#fig-animal-models fig-pos='H'}\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nheight <- \"100vh\"\nseverity_score_gpt_threshold <- 15\ntop_targets <- prioritise_targets_out$top_targets[severity_score_gpt>severity_score_gpt_threshold]\nphenotypes <- c(\"respiratory failure\", \n                \"amyotrophic lateral sclerosis\", \n                \"dementia\",\n                \"lethal skeletal dysplasia\",\n                \"small vessel disease\",\n                \"Alzheimer disease\",\n                \"Parkinson disease\")\nvn_therapy <- lapply(stats::setNames(phenotypes,phenotypes), function(phenotype){\n  cat(\"\\nPreparing\",phenotype,\"\\n\")\n  MSTExplorer::prioritise_targets_network(\n    top_targets = top_targets[grepl(paste(phenotype,collapse = \"|\"), hpo_name,ignore.case = TRUE)|\n                              grepl(paste(phenotype,collapse = \"|\"), disease_name,ignore.case = TRUE)],\n    main = phenotype, \n    height = height,\n    submain = NULL)$plot\n}) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing respiratory failure \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file1597249603841_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing amyotrophic lateral sclerosis \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file159725084e1_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing dementia \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file159722e08a930_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing lethal skeletal dysplasia \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file1597240aa4703_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing small vessel disease \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file159729670b29_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing Alzheimer disease \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file15972180b6999_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPreparing Parkinson disease \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving plot --> /var/folders/rd/rbc_wrdj4k3djf3brk6z0_dc0000gp/T//RtmpIFbWOU/file1597211babe63_prioritise_targets_network.html\n```\n\n\n:::\n:::\n\n\n::: {#fig-therapy-examples-supp .content-visible unless-format=\"html\"}\n![Respiratory failure](img/fig-therapy-examples-supp/respiratory_failure.png)\n\n![Amyotrophic lateral sclerosis](img/fig-therapy-examples-supp/als.png)\n\n![Dementia](img/fig-therapy-examples-supp/dementia.png)\n\n![Lethal skeletal dysplasia](img/fig-therapy-examples-supp/lethal_skeletal_dysplasia.png)\n\n![Small vessel disease](img/fig-therapy-examples-supp/small_vessel_disease.png)\n\n![Parkinson's disease](img/fig-therapy-examples-supp/parkinson.png)\n\n![Alzheimer's disease](img/fig-therapy-examples-supp/alzheimer.png)\n\nExample cell type-specific gene therapy targets for several severe phenotypes and their associated diseases. Each disease (blue cylinders) is connected to its phenotype (purple cylinders) based on well-established clinical observations recorded within the HPO [@Gargano2024-fc].Phenotypes are connected to cell types (red circles) via association testing between weighted gene sets ($FDR_{pc}<0.05$). Each cell type is connected to the prioritised gene targets (yellow boxes) based on the driver gene analysis.The thickness of the edges connecting the nodes represent the (mean) fold-change from the bootstrapped enrichment tests. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].\n:::\n\n::: {.content-hidden unless-format=\"html\"}\n\n::: {#fig-therapy-examples-supp .cell}\n\n```{.r .cell-code .hidden}\nvn_therapy\n```\n\n$`respiratory failure`\n\n$`amyotrophic lateral sclerosis`\n\n$dementia\n\n$`lethal skeletal dysplasia`\n\n$`small vessel disease`\n\n$`Alzheimer disease`\n\n$`Parkinson disease`\n\nExample cell type-specific gene therapy targets for several severe phenotypes and their associated diseases. Each disease (blue cylinders) is connected to its phenotype (purple cylinders) based on well-established clinical observations recorded within the HPO [@Gargano2024-fc].Phenotypes are connected to cell types (red circles) via association testing between weighted gene sets ($FDR_{pc}<0.05$). Each cell type is connected to the prioritised gene targets (yellow boxes) based on the driver gene analysis.The thickness of the edges connecting the nodes represent the (mean) fold-change from the bootstrapped enrichment tests. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].\n:::\n\n:::\n\n### Supplementary Tables\n\n\n::: {#tbl-gencc .cell tbl-cap='Encodings for GenCC evidence scores. Assigned numeric values for the GenCC evidence levels.'}\n\n```{.r .cell-code .hidden}\ngencc <- KGExplorer::get_gencc(agg_by=NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nEvidence scores for: \n - 10509 diseases \n - 5165 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n+ Version: 2024-05-17\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndict <- eval(formals(KGExplorer::get_gencc)$dict)\ngencc_tbl <- gencc[,list(classification_title=unique(classification_title)),\n                   by=\"classification_curie\"][,encoding:=dict[classification_title]]|>\n  data.table::setorderv(\"encoding\",-1)\nknitr::kable(as.data.frame(gencc_tbl))\n```\n\n::: {.cell-output-display}\n\n\n|classification_curie |classification_title          | encoding|\n|:--------------------|:-----------------------------|--------:|\n|GENCC:100001         |Definitive                    |        6|\n|GENCC:100002         |Strong                        |        5|\n|GENCC:100003         |Moderate                      |        4|\n|GENCC:100009         |Supportive                    |        3|\n|GENCC:100004         |Limited                       |        2|\n|GENCC:100005         |Disputed Evidence             |        1|\n|GENCC:100008         |No Known Disease Relationship |        0|\n|GENCC:100006         |Refuted Evidence              |        0|\n\n\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#tbl-celltypes .cell tbl-cap='On-target cell types for each HPO ancestral branch.'}\n\n```{.r .cell-code .hidden}\ntarget_branches <- MSTExplorer:::get_target_branches()\ntarget_celltypes <- MSTExplorer:::get_target_celltypes(target_branches=target_branches)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading cached ontology: /Users/bms20/Library/Caches/org.R-project.R/R/KGExplorer/cl.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nhpo <- HPOExplorer::get_hpo()\ncelltype_maps <- MSTExplorer::celltype_maps|> data.table::setkeyv(\"cl_id\")\n\nct_dt <- lapply(names(target_celltypes), function(b){\n  cl_ids <- intersect(target_celltypes[[b]],\n                      celltype_maps$cl_id) \n  data.table::data.table(hpo_branch=b, \n                         # hpo_branch_id=HPOExplorer::map_phenotypes(b,\n                         #                                           hpo = hpo,\n                         #                                           to=\"id\"),\n                         cl_branch=paste0(target_branches[[b]],collapse=\" / \"),\n                         celltype_maps[cl_ids,c(\"cl_name\",\"cl_id\")])\n}) |> data.table::rbindlist(fill=TRUE) |> unique()\nknitr::kable(as.data.frame(ct_dt))\n```\n\n::: {.cell-output-display}\n\n\n|hpo_branch                                |cl_branch                                             |cl_name                                    |cl_id      |\n|:-----------------------------------------|:-----------------------------------------------------|:------------------------------------------|:----------|\n|Abnormality of the cardiovascular system  |cardiocyte                                            |cardiac muscle cell                        |CL:0000746 |\n|Abnormality of the cardiovascular system  |cardiocyte                                            |regular atrial cardiac myocyte             |CL:0002129 |\n|Abnormality of the cardiovascular system  |cardiocyte                                            |endocardial cell                           |CL:0002350 |\n|Abnormality of the cardiovascular system  |cardiocyte                                            |epicardial adipocyte                       |CL:1000309 |\n|Abnormality of the cardiovascular system  |cardiocyte                                            |ventricular cardiac muscle cell            |CL:2000046 |\n|Abnormality of the endocrine system       |endocrine cell                                        |endocrine cell                             |CL:0000163 |\n|Abnormality of the endocrine system       |endocrine cell                                        |neuroendocrine cell                        |CL:0000165 |\n|Abnormality of the endocrine system       |endocrine cell                                        |chromaffin cell                            |CL:0000166 |\n|Abnormality of the eye                    |photoreceptor cell / retinal cell                     |photoreceptor cell                         |CL:0000210 |\n|Abnormality of the eye                    |photoreceptor cell / retinal cell                     |amacrine cell                              |CL:0000561 |\n|Abnormality of the eye                    |photoreceptor cell / retinal cell                     |Mueller cell                               |CL:0000636 |\n|Abnormality of the eye                    |photoreceptor cell / retinal cell                     |retinal pigment epithelial cell            |CL:0002586 |\n|Abnormality of the immune system          |leukocyte                                             |T cell                                     |CL:0000084 |\n|Abnormality of the immune system          |leukocyte                                             |mature neutrophil                          |CL:0000096 |\n|Abnormality of the immune system          |leukocyte                                             |mast cell                                  |CL:0000097 |\n|Abnormality of the immune system          |leukocyte                                             |microglial cell                            |CL:0000129 |\n|Abnormality of the immune system          |leukocyte                                             |professional antigen presenting cell       |CL:0000145 |\n|Abnormality of the immune system          |leukocyte                                             |macrophage                                 |CL:0000235 |\n|Abnormality of the immune system          |leukocyte                                             |B cell                                     |CL:0000236 |\n|Abnormality of the immune system          |leukocyte                                             |dendritic cell                             |CL:0000451 |\n|Abnormality of the immune system          |leukocyte                                             |monocyte                                   |CL:0000576 |\n|Abnormality of the immune system          |leukocyte                                             |plasma cell                                |CL:0000786 |\n|Abnormality of the immune system          |leukocyte                                             |alternatively activated macrophage         |CL:0000890 |\n|Abnormality of the immune system          |leukocyte                                             |thymocyte                                  |CL:0000893 |\n|Abnormality of the immune system          |leukocyte                                             |innate lymphoid cell                       |CL:0001065 |\n|Abnormality of the musculoskeletal system |cell of skeletal muscle / chondrocyte                 |chondrocyte                                |CL:0000138 |\n|Abnormality of the musculoskeletal system |cell of skeletal muscle / chondrocyte                 |cell of skeletal muscle                    |CL:0000188 |\n|Abnormality of the musculoskeletal system |cell of skeletal muscle / chondrocyte                 |skeletal muscle satellite cell             |CL:0000594 |\n|Abnormality of the nervous system         |neural cell                                           |bipolar neuron                             |CL:0000103 |\n|Abnormality of the nervous system         |neural cell                                           |granule cell                               |CL:0000120 |\n|Abnormality of the nervous system         |neural cell                                           |Purkinje cell                              |CL:0000121 |\n|Abnormality of the nervous system         |neural cell                                           |glial cell                                 |CL:0000125 |\n|Abnormality of the nervous system         |neural cell                                           |astrocyte                                  |CL:0000127 |\n|Abnormality of the nervous system         |neural cell                                           |oligodendrocyte                            |CL:0000128 |\n|Abnormality of the nervous system         |neural cell                                           |microglial cell                            |CL:0000129 |\n|Abnormality of the nervous system         |neural cell                                           |neuroendocrine cell                        |CL:0000165 |\n|Abnormality of the nervous system         |neural cell                                           |chromaffin cell                            |CL:0000166 |\n|Abnormality of the nervous system         |neural cell                                           |photoreceptor cell                         |CL:0000210 |\n|Abnormality of the nervous system         |neural cell                                           |inhibitory interneuron                     |CL:0000498 |\n|Abnormality of the nervous system         |neural cell                                           |neuron                                     |CL:0000540 |\n|Abnormality of the nervous system         |neural cell                                           |neuronal brush cell                        |CL:0000555 |\n|Abnormality of the nervous system         |neural cell                                           |amacrine cell                              |CL:0000561 |\n|Abnormality of the nervous system         |neural cell                                           |GABAergic neuron                           |CL:0000617 |\n|Abnormality of the nervous system         |neural cell                                           |Mueller cell                               |CL:0000636 |\n|Abnormality of the nervous system         |neural cell                                           |glutamatergic neuron                       |CL:0000679 |\n|Abnormality of the nervous system         |neural cell                                           |retinal ganglion cell                      |CL:0000740 |\n|Abnormality of the nervous system         |neural cell                                           |retina horizontal cell                     |CL:0000745 |\n|Abnormality of the nervous system         |neural cell                                           |Schwann cell                               |CL:0002573 |\n|Abnormality of the nervous system         |neural cell                                           |retinal pigment epithelial cell            |CL:0002586 |\n|Abnormality of the nervous system         |neural cell                                           |visceromotor neuron                        |CL:0005025 |\n|Abnormality of the nervous system         |neural cell                                           |sympathetic neuron                         |CL:0011103 |\n|Abnormality of the respiratory system     |respiratory epithelial cell / epithelial cell of lung |type II pneumocyte                         |CL:0002063 |\n|Abnormality of the respiratory system     |respiratory epithelial cell / epithelial cell of lung |epithelial cell of lower respiratory tract |CL:0002632 |\n\n\n:::\n:::\n\n{{< pagebreak >}}\n\n\n::: {#tbl-death .cell tbl-cap='Encodings for Age of Death scores. Assigned numeric values for the Age of Death scores within the HPO annotations.'}\n\n```{.r .cell-code .hidden}\nhpo_deaths <- KGExplorer::get_ontology_descendants(ont = hpo,\n                                                   include_self = FALSE,\n                                                   terms = \"Age of death\")[[1]]\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndeaths_dt <- data.table::data.table(hpo_id=hpo_deaths)\ndeaths_dt <- HPOExplorer::add_hpo_name(deaths_dt)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nAdding HPO names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndict <- HPOExplorer:::hpo_dict(type=\"AgeOfDeath\")\ndeaths_dt[,encoding:=dict[hpo_name]] |>\n  data.table::setorderv(\"encoding\")\nknitr::kable(as.data.frame(deaths_dt))\n```\n\n::: {.cell-output-display}\n\n\n|hpo_id     |hpo_name                 | encoding|\n|:----------|:------------------------|--------:|\n|HP:0003826 |Stillbirth               |        1|\n|HP:0005268 |Miscarriage              |        1|\n|HP:0034241 |Prenatal death           |        1|\n|HP:0003811 |Neonatal death           |        2|\n|HP:0001522 |Death in infancy         |        3|\n|HP:0003819 |Death in childhood       |        4|\n|HP:0011421 |Death in adolescence     |        5|\n|HP:0100613 |Death in early adulthood |        6|\n|HP:0033763 |Death in adulthood       |        7|\n|HP:0033764 |Death in middle age      |        7|\n|HP:0033765 |Death in late adulthood  |        8|\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}