{
  "hash": "638b5cc9632655aaf9840ba669453a9b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cell type-specific contextualisation of the human phenome: towards the systematic treatment of all rare diseases\"\nauthor:\n  - name: Brian M. Schilder\n    orcid: 0000-0001-5949-2191\n    corresponding: true\n    email: brian_schilder@alumni.brown.edu\n    roles:\n      - Investigation\n      - Project administration\n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Kitty B. Murphy\n    orcid: 0000-0002-8669-3076\n    corresponding: false\n    roles:\n      - Investigation \n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Hiranyamaya Dash\n    orcid: 0009-0005-5514-505X\n    corresponding: false\n    roles:\n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Yichun Zhang\n    corresponding: false\n    roles:\n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Robert Gordon-Smith\n    orcid: 0000-0001-6698-7387\n    corresponding: false\n    roles:\n      - Investigation \n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Jai Chapman\n    corresponding: false\n    roles:\n      - Investigation \n      - Software\n      - Visualization\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\n  - name: Momoko Otani\n    corresponding: false\n    roles:\n      - Investigation\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: National Heart and Lung Institute\n  - name: Nathan G. Skene\n    orcid: 0000-0002-6807-3180\n    corresponding: true\n    email: n.skene@imperial.ac.uk\n    roles:\n      - Project administration\n    affiliations:\n      - name: Imperial College London\n        city: London\n        country: United Kingdom\n        department: Department of Brain Sciences\n      - name: UK Dementia Research Institute\n        city: London\n        country: United Kingdom\nkeywords:\n  - rare disease\n  - phenotype\n  - single-cell\n  - gene therapy\nkey-points:\n  - We used the Human Phenotype Ontology and single-cell RNA-seq references to characterise the phenome.\n  - We then demonstrated how these results can be applied to clinical diagnosis, prognosis and therapeutics development.\ndate: last-modified\ncitation:\n  container-title: medRxiv\nbibliography: references.bib\neditor:\n  markdown:\n    wrap: sentence\nformat:\n  pdf: \n    include-in-header: \n      text: |\n        \\usepackage{annotate-equations}\n---\n\n\n\n```{.r .cell-code .hidden}\nlibrary(data.table)\n# ?formatdown::formatdown_options()\n\noptions(digits=2)\nformatter <- function(x, ...) {\n  # prettyNum(x, digits=2)\n  # paste0(\"$\",knitr:::format_sci(x),\"$\")\n  if(is.numeric(x)){\n    if(!is.integer(x)){\n      formatdown::format_sci(x = x, digits = 2)    \n    } else {\n      formatC(x, big.mark = \",\", mode = \"integer\")\n    }\n  } else {\n    x\n  }\n}\nknitr::knit_hooks$set(document = formatter, \n                      chunk = formatter,\n                      inline = formatter)\n```\n\n\n\n\n\n```{.r .cell-code .hidden}\ntag <- \"v2024-02-08\" ## For version control\ncl_tag <- \"v2023-09-21\"\np2g <- HPOExplorer::load_phenotype_to_genes(tag=tag)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nannot <- HPOExplorer::load_phenotype_to_genes(3, tag=tag)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype.hpoa\n+ Version: v2024-02-08\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nper_disease <- p2g[,list(ng=data.table::uniqueN(gene_symbol),\n                         np=data.table::uniqueN(hpo_id)),by=\"disease_id\"]\nper_phenotype <- p2g[,list(ng=data.table::uniqueN(gene_symbol),\n                           nd=data.table::uniqueN(disease_id)),by=\"hpo_id\"]\n```\n\n\n\n\n\n```{.r .cell-code .hidden}\nhpo <- HPOExplorer::get_hpo(tag=tag)\ncl <- KGExplorer::get_ontology(name = \"cl\", tag = cl_tag, remove_rings=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n## Import precomputed results for reporting summaries\nresults <- MSTExplorer::load_example_results()\nresults <- HPOExplorer::add_hpo_name(results, hpo = hpo)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding HPO names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults <- HPOExplorer::add_ont_lvl(results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGetting absolute ontology level for 18,082 IDs.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults <- HPOExplorer::add_ancestor(results, hpo = hpo)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-2 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,206,994 associations remain after filtering.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults <- MSTExplorer::map_celltype(results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping cell types to cell ontology terms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding stage information.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults <- MSTExplorer::add_logfc(results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding logFC column.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults[,effect:=estimate]\n```\n\n\n\n\n\n```{.r .cell-code .hidden}\nres_summ <- MSTExplorer::summarise_results(results = results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving results --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/summarise_results.csv181d9150b7c2b\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nres_summ_all <- res_summ$tmerged[ctd==\"all\"]  \n```\n\n\n\n\n\n```{.r .cell-code .hidden}\n## Must use `cache.lazy=FALSE` because sparse matrices not yet supported for caching\nctd_list <- MSTExplorer::load_example_ctd(c(\"ctd_DescartesHuman.rds\",\n                                            \"ctd_HumanCellLandscape.rds\"),\n                                          multi_dataset=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading ctd_DescartesHuman.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading ctd_HumanCellLandscape.rds\n```\n\n\n:::\n\n\n\n\n\n```{.r .cell-code .hidden}\nvalidate_associations_mkg_out <- MSTExplorer::validate_associations_mkg(results = results)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ni All local files already up-to-date!\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRemaining: 82 phenotypes across 65 celltypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n90.24% phenotypes recovered.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=1] cl_id: CL:0000000 & hpo_id: HP:0025354\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 2 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,711 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=2] cl_id: CL:0000000 & hpo_id: HP:0005374\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=3] cl_id: CL:0000015 & hpo_id: HP:0012863\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=4] cl_id: CL:0000019 & hpo_id: HP:0000027\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=5] cl_id: CL:0000019 & hpo_id: HP:0012864\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=6] cl_id: CL:0000038 & hpo_id: HP:0012131\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=7] cl_id: CL:0000066 & hpo_id: HP:0032599\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=8] cl_id: CL:0000084 & hpo_id: HP:0002843\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=9] cl_id: CL:0000084 & hpo_id: HP:0011840\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=10] cl_id: CL:0000094 & hpo_id: HP:0001911\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=11] cl_id: CL:0000097 & hpo_id: HP:0100494\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=12] cl_id: CL:0000100 & hpo_id: HP:0002450\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=13] cl_id: CL:2000032 & hpo_id: HP:0003134\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=14] cl_id: CL:0000125 & hpo_id: HP:0100705\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=15] cl_id: CL:0000127 & hpo_id: HP:0100707\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=16] cl_id: CL:0000128 & hpo_id: HP:0100706\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=17] cl_id: CL:0000169 & hpo_id: HP:0006279\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=18] cl_id: CL:0000169 & hpo_id: HP:0006274\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=19] cl_id: CL:0000178 & hpo_id: HP:0010789\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=20] cl_id: CL:0000182 & hpo_id: HP:0031137\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=21] cl_id: CL:0000187 & hpo_id: HP:0100299\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=22] cl_id: CL:0000188 & hpo_id: HP:0004303\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=23] cl_id: CL:0000232 & hpo_id: HP:0001876\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=24] cl_id: CL:0000232 & hpo_id: HP:0001877\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=25] cl_id: CL:0000232 & hpo_id: HP:0410064\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=26] cl_id: CL:0000232 & hpo_id: HP:0410063\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=27] cl_id: CL:0000232 & hpo_id: HP:0020054\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=28] cl_id: CL:0000232 & hpo_id: HP:0012187\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=29] cl_id: CL:0000233 & hpo_id: HP:0001872\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=30] cl_id: CL:0000235 & hpo_id: HP:0004311\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=31] cl_id: CL:0000236 & hpo_id: HP:0005372\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=32] cl_id: CL:0000236 & hpo_id: HP:0002846\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=33] cl_id: CL:0000492 & hpo_id: HP:0500267\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=34] cl_id: CL:0000540 & hpo_id: HP:0002493\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=35] cl_id: CL:0000540 & hpo_id: HP:0002529\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=36] cl_id: CL:0000540 & hpo_id: HP:0012757\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=37] cl_id: CL:0000542 & hpo_id: HP:0004332\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=38] cl_id: CL:0000547 & hpo_id: HP:0025035\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=39] cl_id: CL:0000556 & hpo_id: HP:0012143\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=40] cl_id: CL:0000576 & hpo_id: HP:0012144\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=41] cl_id: CL:0000586 & hpo_id: HP:0012862\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=42] cl_id: CL:0000623 & hpo_id: HP:0012177\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=43] cl_id: CL:0000623 & hpo_id: HP:0012176\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=44] cl_id: CL:0000624 & hpo_id: HP:0031392\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=45] cl_id: CL:0000625 & hpo_id: HP:0031393\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=46] cl_id: CL:0000738 & hpo_id: HP:0008318\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=47] cl_id: CL:0000738 & hpo_id: HP:0004852\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=48] cl_id: CL:0000738 & hpo_id: HP:0001881\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=49] cl_id: CL:0000763 & hpo_id: HP:0020047\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=50] cl_id: CL:0000764 & hpo_id: HP:0012130\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=51] cl_id: CL:0000765 & hpo_id: HP:0034278\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=52] cl_id: CL:0000766 & hpo_id: HP:0010974\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=53] cl_id: CL:0000767 & hpo_id: HP:0001912\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=54] cl_id: CL:0000771 & hpo_id: HP:0001879\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=55] cl_id: CL:0000775 & hpo_id: HP:0001874\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=56] cl_id: CL:0000787 & hpo_id: HP:0030373\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=57] cl_id: CL:0000792 & hpo_id: HP:0020111\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=58] cl_id: CL:0000798 & hpo_id: HP:0500270\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=59] cl_id: CL:0000813 & hpo_id: HP:0032182\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=60] cl_id: CL:0000818 & hpo_id: HP:0030379\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=61] cl_id: CL:0000835 & hpo_id: HP:0004808\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=62] cl_id: CL:0000845 & hpo_id: HP:0030383\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=63] cl_id: CL:0000891 & hpo_id: HP:0003651\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=64] cl_id: CL:0000895 & hpo_id: HP:0410373\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=65] cl_id: CL:0000898 & hpo_id: HP:0031396\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=66] cl_id: CL:0000909 & hpo_id: HP:0410380\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=67] cl_id: CL:0000912 & hpo_id: HP:0500263\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=68] cl_id: CL:0000972 & hpo_id: HP:0030386\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=69] cl_id: CL:0001050 & hpo_id: HP:0410395\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=70] cl_id: CL:0001062 & hpo_id: HP:0020177\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=71] cl_id: CL:0002092 & hpo_id: HP:0005561\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=72] cl_id: CL:0002191 & hpo_id: HP:0012135\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=73] cl_id: CL:0002198 & hpo_id: HP:0005152\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=74] cl_id: CL:0002319 & hpo_id: HP:0002282\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=75] cl_id: CL:0002368 & hpo_id: HP:0012261\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=76] cl_id: CL:0002422 & hpo_id: HP:0004312\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=77] cl_id: CL:0002559 & hpo_id: HP:0500262\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=78] cl_id: CL:0008002 & hpo_id: HP:0030089\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=79] cl_id: CL:0008002 & hpo_id: HP:0003713\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=80] cl_id: CL:0008002 & hpo_id: HP:0012084\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=81] cl_id: CL:0011001 & hpo_id: HP:0006802\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n[i=82] cl_id: CL:0011025 & hpo_id: HP:0041080\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nkg_hp <- validate_associations_mkg_out$kg[grepl(\"^HP:\",from)] \n```\n\n\n\n\n\n\\newpage\n\n## Abstract \n\nRare diseases (RDs) are a highly heterogeneous and underserved group of conditions. Most RDs have a strong genetic basis but their  causal pathophysiological mechanisms remain poorly understood. \nWe therefore systematically characterised the cell type–specific mechanisms for all genetically defined RD phenotypes by integrating the Human Phenotype Ontology with whole-body single-cell transcriptomic atlases from embryonic, foetal, and adult samples.\nThis revealed significant associations between 201 cell types and 9,575/11,028 (86.7%) phenotypes across 8,628 RDs, substantially expanding knowledge of phenotype–cell type links.\nWe then prioritised phenotypes for clinical impact based on severity (e.g. lethality, motor/mental impairment) and gene therapy compatibility (e.g. cell type specificity, postnatal treatability).\nAll results are reproducible and freely available, including via an interactive web portal (<https://neurogenomics-ukdri.dsi.ic.ac.uk/>), representing a major advance toward treating patients across a broad spectrum of serious RDs.\n\n## Introduction {#sec-introduction}\n\n\n\n\n\n```{.r .cell-code .hidden}\nafb_cells <- KGExplorer::prune_ancestors(\n  dat = results[ctd==\"DescartesHuman\" & q<.05 & CellType==\"AFP_ALB_positive_cells\"],\n  id_col = \"hpo_id\",\n  ont=hpo) |>\n  data.table::setorderv(\"p\") \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n433 / 433 terms were kept after pruning.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nafb_cell_hepato <- rbind(\n  HPOExplorer::filter_descendants(\n  afb_cells, \n  keep_descendants = \"Abnormality of hepatobiliary system physiology\", \n  hpo = hpo),\n  afb_cells[grepl(\"hepat|liver\",hpo_name, ignore.case = TRUE)] \n) |> unique() \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n10 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n0 associations remain after filtering.\n```\n\n\n:::\n\n\n\n\n\nRare diseases (RDs) are individually uncommon but collectively this class of over 10,000 conditions affects 300–400 million people worldwide (1 in 10–20 individuals) [@Ferreira2019-jp; @Zhu2020-vo], 75% of RD patients are children, with a 30% rate mortality by age five [@noauthor_undated-kp]. Diagnosis is challenging due to highly variable presentations, averaging five years [@Marwaha2022-uy], with ~46% misdiagnosed and >75% never diagnosed [@Molster2016-da]. Prognosis is similarly difficult. Treatments exist for <5% of RDs [@Halley2022-pd] and high development costs for small patient populations deter investment [@Institute_of_Medicine_US_Committee_on_Accelerating_Rare_Diseases_Research_and_Orphan_Product_Development2010-vj; @Yates2022-ra], making these therapies among the world’s most expensive [@Nuijten2022-yc; @Thielen2022-ud]. High-throughput therapeutic discovery could lower costs and speed delivery.\n\nA major barrier in research and clinical care of diseases is inconsistent medical terminology. The Human Phenotype Ontology (HPO) provides a unified, hierarchical framework of 18,082 phenotypes spanning 10,300 RDs [@Gargano2024-fc; @Kohler2019-pc; @Robinson2008-ys], integrated into diagnostics and linked to other ontologies (e.g. SNOMED CT, UMLS, ICD). Over 80% of RDs have known genetic causes [@Nguengang_Wakap2020-cz], with HPO gene annotations curated from OMIM, Orphanet, DECIPHER, and case reports. Yet gene lists alone lack the tissue and cell type context essential for understanding pathogenesis and improving diagnosis, prognosis, and treatment.\n\nSingle-cell RNA-seq (scRNA-seq) now enables transcriptome-wide profiling at cellular resolution [@Baysoy2023-vt; @Haque2017-bn; @Qi2023-ev]. Comprehensive atlases such as Descartes Human [@Cao2020-qz] and Human Cell Landscape [@Han2020-iq] cover embryonic to adult stages across tissues, providing gene signatures for hundreds of cell subtypes. Integrating RD gene annotations with these profiles reveals the specific cell types through which genes act, including understudied cell types.\n\nCell type-specific mechanisms are critical for guiding the development of effective therapeutics, especially virally-mediated gene therapies [@kawabataImprovingCellspecificRecombination2024; @ocarrollAAVTargetingGlial2021]. Knowledge of the specific causal cell types can enhance efficacy and improve safety by avoiding off-target effects. To facilitate these key insights, we developed a high-throughput pipeline to nominate cell type–resolved gene therapy targets across thousands of RD phenotypes, ranked by composite phenotype severity scores [@murphyHarnessingGenerativeAI2024]. This work expands knowledge of the cell types, organ systems, and life stages underlying RDs, with direct applications to precision therapeutic development.\n\n\n::: {#fig-study-design}\n![](img/study_design.png){height=\"1500px\"}\n\n__Multi-modal data fusion reveals the cell types underlying thousands of human phenotypes.__\nSchematic overview of study design in which we numerically encoded the strength of evidence linking each gene and each phenotype (using the Human Phenotype Ontology and GenCC databases).\nWe then created gene signature profiles for all cell types in the Descartes Human and Human Cell Landscape scRNA-seq atlases.\nFinally, we iteratively ran generalised linear regression tests between all pairwise combinations of phenotype gene signatures and cell type gene signatures.\nThe resulting associations were then used to nominate cell type-resolved gene therapy targets for thousands of rare diseases.\n:::\n\n## Results {#sec-results}\n\n### Phenotype-cell type associations\n\n\n\n\n\n```{.r .cell-code .hidden}\n## Create phenotype-gene matrix filled with aggregated GenCC evidence scores\nymat <- HPOExplorer::hpo_to_matrix(formula = \"gene_symbol ~ hpo_id\")\n## Run phenomix with DescartesHuman CellTypeDataset\nlm_res1 <- MSTExplorer::run_phenomix(ctd_name = \"DescartesHuman\",\n                                     annotLevel = 2, \n                                     test_method = \"glm_univariate\",\n                                     ymat = ymat)\n## Run phenomix with HumanCellLandscape CellTypeDataset\nlm_res2 <- MSTExplorer::run_phenomix(ctd_name = \"HumanCellLandscape\",\n                                     annotLevel = 3, \n                                     test_method = \"glm_univariate\",\n                                     ymat = ymat)\n## Merge results\nresults <- data.table::rbindlist(list(DescartesHuman=lm_res1,\n                                      HumanCellLandscape=lm_res2),\n                                idcol = \"ctd\")\n## Apply multiple testing correction\nresults[,q:=stats::p.adjust(p,method=\"fdr\")]\n```\n\n\n\n\n\nWe systematically investigated cell types underlying HPO phenotypes, hypothesising that genes with cell type–specific expression are most relevant to those cell types, and that disrupting such genes will have variable effects across cell types. Associations were computed between weighted gene lists for each phenotype (from GenCC evidence [@distefanoGeneCurationCoalition2022]) and cell type gene expression specificity scores derived from normalised scRNA-seq atlases.  \n\nWe analysed two references: Descartes Human (~4M cells from 15 foetal tissues) [@Cao2020-qz] and Human Cell Landscape (~703k cells from 49 embryonic, foetal, adult tissues) [@Han2020-iq]. For each phenotype–cell type pair, we ran linear regression and applied FDR correction. In Descartes Human, 19,929/  848,078 (2.35%) tests were significant across  77 cell types and 7,340 phenotypes. In Human Cell Landscape, the corresponding values were 1.96% significant tests, 124 cell types, and 9,049 phenotypes, with more phenotypes linked to at least one cell type due to greater cell type diversity and life-stage coverage.  \n\nAcross both atlases, the median number of significant cell types per phenotype was 3, indicating specificity of associations. Overall, 8,628/8,631 (~100%) of diseases had significant cell type associations for at least one phenotype. Full stratified results are provided in @tbl-summary.\n\n### Validation of expected phenotype-cell type relationships\n\n\n\n\n\n```{.r .cell-code .hidden}\nplot_bar_dendro_out <- MSTExplorer::plot_bar_dendro(\n  results = results, \n  hpo = hpo,\n  cl = cl,\n  show_plot = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading required namespace: ggdendro\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,206,994 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltered 'ancestor_name' : 999,488 / 2,206,994 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 2 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,711 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverted ontology to: igraph \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverted ontology to: igraph_dist \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: tol\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in `[.data.table`(results, , `:=`(dummy, paste0(\"All\", \" (n=\",\ntotal_phenotypes, : A shallow copy of this data.table was taken so that := can\nadd or remove 1 columns by reference. At an earlier point, this data.table was\ncopied by R (or was created manually using structure() or similar). Avoid\nnames<- and attr<- which in R currently (and oddly) may copy the whole\ndata.table. Use set* syntax instead to avoid copying: ?set, ?setnames and\n?setattr. It's also not unusual for data.table-agnostic packages to produce\ntables affected by this issue. If this message doesn't help, please report your\nuse case to the data.table issue tracker so the root cause can be fixed or this\nmessage improved.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,206,994 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRunning tests: across_branches_per_celltype\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in `[.data.table`(dat, , `:=`(facet_label, paste0(get(facets), \" (n=\",\n: A shallow copy of this data.table was taken so that := can add or remove 1\ncolumns by reference. At an earlier point, this data.table was copied by R (or\nwas created manually using structure() or similar). Avoid names<- and attr<-\nwhich in R currently (and oddly) may copy the whole data.table. Use set* syntax\ninstead to avoid copying: ?set, ?setnames and ?setattr. It's also not unusual\nfor data.table-agnostic packages to produce tables affected by this issue. If\nthis message doesn't help, please report your use case to the data.table issue\ntracker so the root cause can be fixed or this message improved.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nAncestor columns already present. Skipping.\n\n2,206,994 associations remain after filtering.\n\nCell type columns already present. Skipping mapping.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n\nKeeping descendants of 2 term(s).\n\n2,711 terms remain after filtering.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nTranslating ontology terms to ids.\n\nProportional enrichment summary stats:\n\n - pct_min: 17.22\n\n - pct_max: 64.86\n\n - pct_max_mean: 39.9\n\n - pct_max_sd: 17.66\n\n - enrichment_mean: 4.75\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\noverrep_dat <- plot_bar_dendro_out$ggbars_out$data_summary\n\n# overrep_dat[,summary:=paste0(ancestor_name,\": \", \n#                              n_celltypes_sig,\"/\",n_celltypes,\n#                              \" types of \",shQuote(target_celltypes),\n#                              \" were overrepresented\",\n#                              \" ($N_{p}$=\",phenotypes_per_ancestor,\").\")] \n\noverrep_df <- overrep_dat[,list(\"HPO branch\"=ancestor_name,\n                                \"Phenotypes (total)\"=phenotypes_per_ancestor,\n                                \"CL branch\"=target_celltypes, \n                                \"Cell types (overrepresented)\"=n_celltypes_sig,\n                                \"Cell types (total)\"=n_celltypes)]|>\n  data.frame(check.names=FALSE)\n```\n\n\n\n\n\n```{.r .cell-code .hidden}\ncor.pct_p <- stats::cor.test(plot_bar_dendro_out$ggprop_out$data$pct, \n                             plot_bar_dendro_out$ggprop_out$data$minus_log_p)\nnervous_pct <- plot_bar_dendro_out$ggprop_out$data[branch==\"Abnormality of the\\n nervous system\" & minus_log_p==6]$pct\n```\n\n\n\n\n\nWe intuit that organ system-specific abnormalities are often driven by cell types within that system. The HPO’s high-level categories allow systematic testing; for example, heart phenotypes should typically involve cardiocytes, and nervous system abnormalities should involve neural cells. All cell types in our single-cell atlases were mapped to the Cell Ontology (CL), a hierarchical vocabulary of cell types.  \n\nA cell type was considered *on-target* for an HPO branch if it belonged to a matching CL branch (@tbl-ontarget-celltypes). For each HPO branch ([Fig. @fig-summary]b), we tested whether cell types were more often associated with phenotypes in that branch compared to all others, and identified those overrepresented at FDR\\<0.05. All 7 HPO branches showed disproportionate associations with on-target cell types from their respective organ systems.  \n\nWe hypothesised that more strongly significant phenotype–cell type associations are more likely to be on-target. Grouping $-log_{10}(\\text{p-values})$ into six bins, we calculated the proportion of on-target cell types per HPO–CL branch pairing. Indeed, this proportion consistently increased with association significance ($rho=$$0.63$, $p=$$1.1 \\times 10^{-6}$). For example, in nervous system abnormalities neural cells constituted only $23$% of all tested cell types, yet made up $46$% of associations with $-log_{10}(\\text{p-values}) = 6$. This confirms that stronger associations are more likely to involve on-target cell types, confirming our association strategy captures real relationships.\n\n::: {#fig-summary .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nplot_bar_dendro_out$plot\n```\n\n::: {.cell-output-display}\n![__High-throughput analysis reveals cell types underlying thousands of rare disease phenotypes.__ **a**, Some cell types are much more commonly associated with phenotypes than others. Bar height indicates the total number of significant phenotype enrichments per cell type (FDR<0.05) across all branches of the HPO. **b**, Analyses reveal expected and novel cell type associations within high-level HPO branches. Asterisks above each bar indicate whether that cell type was significantly more often enriched in that branch relative to all other HPO branches, including those not shown here, as a proxy for how specifically that cell type is associated with that branch; FDR<0.0001 (\\*\\*\\*\\*), FDR<0.001 (\\*\\*\\*), FDR<0.01 (\\*\\*), FDR<0.05 (\\*). **c**, Ontological relatedness of cell types in the Cell Ontology (CL) [@Diehl2016-gt]. **d**, The proportion of on-target associations (*y-axis*) increases with greater test significance (*x-axis*). Percentage of significant phenotype associations with on-target cell types (second row of facet labels), respective to the HPO branch.](index_files/figure-pdf/fig-summary-1.pdf){#fig-summaryD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n### Validation of inter- and intra-dataset consistency\n\n\n\n\n\n```{.r .cell-code .hidden}\nlibrary(data.table)\n## Across CTD\nvalidate_associations_correlate_ctd_out <- MSTExplorer::validate_associations_correlate_ctd(\n  results=results, \n  hpo_agg_lvl=5,\n  group_var=\"ctd\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCasting results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n13 comparable celltypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n10945 comparable phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n10 comparable celltypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n554 comparable phenotypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGenerating plots.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-5 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n142,285 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-5 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n573 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRegistered S3 method overwritten by 'ggside':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering statistics.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n## Replace p-values of exactly 0 with smallest number R can compute\nvalidate_associations_correlate_ctd_out$data_stats$p.all$summary_data$p.value <- max(validate_associations_correlate_ctd_out$data_stats$p.all$summary_data$p.value,\n                  .Machine$double.xmin)\n\n## Within CTD: across developmental stages\nvalidate_associations_correlate_ctd_out_hcl <- MSTExplorer::validate_associations_correlate_ctd(\n  results=results,\n  hpo_agg_lvl=5,\n  filters= list(ctd=c(\"HumanCellLandscape\"), \n                stage=c(\"Fetus\",\"Adult\")),\n  group_var=\"stage\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltered 'ctd' : 848,078 / 2,206,994 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltered 'stage' : 54,795 / 1,358,916 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCasting results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n38 comparable celltypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n10959 comparable phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n33 comparable celltypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1584 comparable phenotypes @FDR<0.05.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGenerating plots.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-5 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n416,442 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-5 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,350 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering statistics.\n```\n\n\n:::\n\n\n\n\n\nIf our methodology works, it should yield consistent phenotype-cell type associations across different datasets.\nWe therefore tested for the consistency of our results across the two single-cell reference datasets (Descartes Human vs. Human Cell Landscape) across the subset of overlapping cell types [Fig. @fig-ctd-correlation].\nIn total there were 142,285 phenotype-cell type associations to compare across the two datasets (across 10,945 phenotypes and 13 cell types annotated to the exact same CL term.\nWe found that the correlation between p-values of the two datasets was high ($rho$=$0.91$, $p$=$5.7 \\times 10^{-6}$).\nWithin the subset of results that were significant in both single-cell datasets (FDR\\<0.05), we found that degree of correlation between the association effect sizes across datasets was even stronger ($rho=$$0.82$, $p=$$5.7 \\times 10^{-6}$).\nWe also checked for the intra-dataset consistency between the p-values of the foetal and adult samples in the Human Cell Landscape, showing a very similar degree of correlation as the inter-dataset comparison ($rho=$$0.95$, $p=$$5.0 \\times 10^{-15}$).\nTogether, these results suggest that our approach to identifying phenotype-cell type associations is highly replicable and generalisable to new datasets.\n\n### More specific phenotypes are associated with fewer genes and cell types\n\n\n\n\n\n```{.r .cell-code .hidden}\nplot_ontology_levels_out <- MSTExplorer::plot_ontology_levels(\n  results = results, \n  ctd_list = ctd_list,\n  x_vars = c(\"genes\",\"cell types\",\"estimate\"),\n  sig_vars= c(FALSE, TRUE, TRUE),\n  log_vars = c(FALSE, FALSE, TRUE),\n  nrow = 1,\n  show_plot = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading required namespace: gginnards\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding information_content scores.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering q-values < 0.05 : 'cell types'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering q-values < 0.05 : 'estimate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlog2 transforming x-axis: 'estimate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in eval(jsub, SDenv, parent.frame()): NaNs produced\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nplot_ontology_levels_out_stats <- plot_ontology_levels_out$data_stats$summary_data|>\n  data.table::setkeyv(\"parameter2\")\n## replace pvalues of exactly 0 with the minimum computable number in R\n## This avoids creating -Inf when logging values.\nplot_ontology_levels_out_stats[p.value==0, p.value:=.Machine$double.xmin]\nplot_ontology_levels_out_stats[q.value==0, q.value:=.Machine$double.xmin]\n```\n\n\n\n\n\nHigher levels of the ontology are broad classes of phenotype (e.g. 'Abnormality of the nervous system') while the lower levels can get very detailed (e.g. 'Spinocerebellar atrophy').\nThe higher level phenotypes inherit all genes associated with lower level phenotypes, so naturally they have more genes than the lower level phenotypes ([Fig. @fig-ontology-lvl]a; $rho=$$-0.56$, $p=$$2.2 \\times 10^{-308}$).\n\nNext, we reasoned that the more detailed and specific a phenotype is, the more likely it is to be driven by one cell type.\nFor example, while 'Neurodevelopmental abnormality' could plausibly be driven by any/all cell types in the brain, it is more likely that 'Impaired visuospatial constructive cognition' is driven by fewer cell types.\nThis was indeed the case, as we observed a strongly significant negative correlation between the two variables ([Fig. @fig-ontology-lvl]b; $rho=$$-0.49$, $p=$$2.2 \\times 10^{-308}$).\nWe also found that the phenotype-cell type association effect size increased with greater phenotype specificity, reflecting the decreasing overall number of associated cell types at each ontological level ([Fig. @fig-ontology-lvl]c; $rho=$$0.13$, $p=$$8.3 \\times 10^{-160}$).\n\n::: {#fig-ontology-lvl .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nplot_ontology_levels_out$plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![__More specific phenotypes are associated with fewer, more specific genes and cell types.__ Information content (IC), is a normalised measure of ontology term specificity. Terms with lower IC represent the broadest HPO terms (e.g. 'All'), while terms with higher IC indicate progressively more specific HPO terms (e.g. 'Contracture of proximal interphalangeal joints of 2nd-5th fingers'). Box plots show the relationship between HPO phenotype IC and **a**, the number of genes annotated to each phenotype, **b**, the number of significantly enriched cell types, **c**, the effect sizes (absolute model $R^2$ estimates after log-transformation) of significant phenotype-cell type association tests. Boxes are coloured by the mean value within each IC bin (after rounding continuous IC values to the nearest integer).](index_files/figure-pdf/fig-ontology-lvl-1.pdf){#fig-ontology-lvlD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n### Validation of phenotype-cell type associations using biomedical knowledge graphs\n\nTo validate phenotype–cell type associations without literature bias, we used the Monarch Knowledge Graph (MKG), a curated database of biomedical concepts and relationships containing 103 known associations [@Putman2024-et].  \nThe MKG served as a benchmark for the field’s current knowledge. For each MKG association, we calculated the proportion of cell types recovered in our results at different ontological distances in the Cell Ontology. Distance 0 indicates the closest possible match (e.g. “monocyte” vs. “monocyte”), with greater distances reflecting progressively broader matches (e.g. distance 1: “monocyte” vs. “classical monocyte”). The theoretical maximum recall was capped by the percentage of MKG phenotypes for which we identified at least one significant association ($FDR_{pc}$).  \n\nOur results included at least one significant cell type for $90$% of MKG phenotypes. At distance 0, we recalled $57$% of associations; at distance 1, recall rose to $77$%, reaching a maximum of $90$% at the largest allowed distance. Precision could not be computed, as MKG lists only true positives. Overall, these benchmarks show that our approach recovers most known phenotype–cell type associations while generating many novel ones.\n\n### Phenome-wide analyses discover novel phenotype-cell type associations\n\n\n\n\n\n```{.r .cell-code .hidden}\ntarget_branches <- list(\"Recurrent bacterial infections\"=\"leukocyte\")\nlvl <- subset(hpo@elementMetadata,name==names(target_branches)[1])$ontLvl\nresults_tmp <- HPOExplorer::add_ancestor(data.table::copy(results),\n                                         lvl = lvl,\n                                         force_new = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nForce new. Removing existing ancestor columns.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-6 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGetting absolute ontology level for 18,082 IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2690 ancestors found at level 6\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,206,994 associations remain after filtering.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ninfections_out <- MSTExplorer::plot_bar_dendro_facets(\n  results=results_tmp,\n  target_branches=target_branches,\n  facets = \"hpo_name\",\n  lvl=lvl+1,\n  ncol=2,\n  vlines=\"hepatoblast\",\n  legend.position=\"top\",\n  facets_n=NULL,\n  q_threshold=0.05,\n  background_full=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nForce new. Removing existing ancestor columns.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-7 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGetting absolute ontology level for 18,082 IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n3027 ancestors found at level 7\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,206,994 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n4,020 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 2 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,711 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n4,020 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRunning tests: across_branches_per_celltype\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: gnuplot\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nremove(results_tmp)\n\nstaph_res <- infections_out$data[hpo_name==\"Recurrent staphylococcal infections\"]\nstaph_res_top <- staph_res[,.SD[p %in% head(sort(p), 1)], by=c(\"hpo_id\")]\n   \nrecurrent_infections_ids <- KGExplorer::get_ontology_descendants(\n  ont = hpo,\n  terms = \"Recurrent infections\")[[1]]\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nhepatoblast_res <- results[q<0.05 & \n                           hpo_id %in% recurrent_infections_ids & \n                           cl_name==\"hepatoblast\"]\nhepatocyte_res <- results[q<0.05 & \n                          ancestor_name==\"Abnormality of the immune system\" &\n                          grepl(\"hepatocyte\",CellType,ignore.case = TRUE)] \n\nrni_res <- infections_out$data[hpo_name==\"Recurrent Neisserial infections\" & cl_name!=\"hepatoblast\"]\n```\n\n\n\n\n\nHaving confirmed many phenotype-cell type associations match prior expectations, \nwe explored novel links for undercharacterised phenotypes.\n'Recurrent bacterial infections' ($19$ descendants, e.g. staphylococcal, streptococcal, Neisserial) mostly associated with immune cells (e.g. macrophages, dendritic cells, T cells, monocytes, neutrophils) ([Fig. @fig-rni]). Known links include 'Recurrent staphylococcal infections' with myeloid cells [@Heim2014-du; @Pidwill2020-le; @Stoll2018-dc; @Tebartz2015-xs], where monocytes were most strongly associated (FDR=$1.0 \\times 10^{-30}$, $\\beta$=$0.18$).\n\nA notable novel finding was the association between 'Recurrent Neisserial infections' and hepatoblasts (Descartes Human: FDR=$1.1 \\times 10^{-6}$, $\\beta$=$8.2 \\times 10^{-2}$). This aligns with the role of hepatocyte-derived complement proteins [@Zhou2016-kq], complement receptor–expressing Kupffer cells @Dixon2013-ok, and complement deficiencies as major Neisserial risk factors [@Ladhani2019-nf; @Rosain2017-ih]. Over 56 complement genes exist [@Seal2023-pa], underscoring the need for targeted, cell type–specific therapeutic strategies. Only hepatoblasts (not mature hepatocytes) showed this association, hinting at early developmental effects.  \n\n::: {#fig-rni .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\ninfections_out$plot + \n  ggplot2::guides(fill=ggplot2::guide_legend(ncol=2,\n                                             title = NULL))\n```\n\n::: {.cell-output-display}\n![__Association tests reveal that hepatoblasts have a unique role in recurrent Neisserial infections.__ Significant phenotype-cell type tests for phenotypes within the branch 'Recurrent bacterial infections'. Amongst all different kinds of recurrent bacterial infections, hepatoblasts (highlighted by vertical dotted lines) are exclusively enriched in 'Recurrent gram−negative bacterial infections'. Note that terms from multiple levels of the same ontology branch are shown as separate facets (e.g. 'Recurrent bacterial infections' and 'Recurrent gram−negative bacterial infections').](index_files/figure-pdf/fig-rni-1.pdf){#fig-rniD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\n\n\n\n```{.r .cell-code .hidden}\n## Annotate results with disease/symptom-level and gene-level information\n## filtering q-values at this step yields the same results as filtering at the next step, \n## albeit with much fast computation.\nresults_annot <- HPOExplorer::add_disease(results[q<0.05],\n                                          add_descriptions = TRUE,\n                                          allow.cartesian = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding genes and disease IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding disease_name and disease_description.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults_annot <- MSTExplorer::add_symptom_results(results = results_annot, \n                                                  ctd_list = ctd_list)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding symptom-level results.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSubsetting results by q_threshold and effect.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n10,552,434 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n## Plot multi-scale mechanisms as an interactive network\nphenotype <- \"Recurrent Neisserial infections\"\nphenotype_id <- HPOExplorer::map_phenotypes(phenotype, to = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nresults_annot[,estimate_mult:=estimate*25]\nvn_rni <- MSTExplorer::prioritise_targets_network(\n  top_targets = results_annot[hpo_name==phenotype], \n  edge_size_var = \"estimate_mult\",\n  mediator_var = list(c(3,4),c(1,3),c(1,4)),\n  main = NULL,  \n  submain = NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading required namespace: visNetwork\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d96b212228_prioritise_targets_network.html\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nprioritise_targets_multiheatmap_out <- MSTExplorer::prioritise_targets_multiheatmap(\n  top_targets=results_annot,\n  prioritise_targets_network_out=vn_rni,\n  ctd_list=ctd_list, \n  gene_order=NULL,\n  hpo=hpo,\n  gencc_extra=list(\"disease_id\"=\"OMIM:614372\",\n                   \"disease_name\"=\"Mannose-binding lectin (MBL) deficiency\",\n                   \"gene_symbol\"=\"MBL2\",\n                   \"evidence_score_sum\"=5),\n  show_plot=FALSE) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding disease_name and disease_description.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConstructing HPO gene x phenotype matrix.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAnnotating gene-disease associations with Evidence Score\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding HPO names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to names.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping cell types to cell ontology terms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding stage information.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping cell types to cell ontology terms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding stage information.\n```\n\n\n:::\n\n\n\n\n\n\n'Recurrent Neisserial infections' (phenotype of 7 diseases: 'C5 deficiency', 'C6 deficiency', 'C7 deficiency', 'Complement component 8 deficiency, type II', 'Complement factor B deficiency', 'Complement factor I deficiency', 'Mannose-Binding lectin deficiency') was also linked to stromal cells (FDR=$4.6 \\times 10^{-6}$, $\\beta$=$7.9 \\times 10^{-2}$), stratified epithelial cells (FDR=$1.7 \\times 10^{-23}$, $\\beta$=$0.15$), and embryonic stem cells (FDR=$5.4 \\times 10^{-5}$, $\\beta$=$7.4 \\times 10^{-2}$). Network analysis showed different complement genes (*C5*, *C8*, *C7*) mediated effects via hepatoblasts, stratified epithelial cells, and stromal cells, respectively ([Supp. Fig. @fig-network-rni]). While complement genes are widely expressed, subsets act via specific cell types; e.g. only *C6*, *C7*, and *CFI* met driver thresholds in stromal cells. As phenotypes become more granular, we expect convergence toward single-cell-type associations. For RNI, the four implicated cell types may represent subtypes with distinct clinical courses or biomarkers, e.g. stromal cell–driven cases differing from stratified epithelial cell–driven ones.\n\n### Prioritising phenotypes based on severity\n\n\n\n\n\n```{.r .cell-code .hidden}\ngpt_check <- HPOExplorer::gpt_annot_check()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nQuerying HPO for matching terms.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nNumber of phenotype hits per query group:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n - intellectual_disability: 19\n - impaired_mobility: 319\n - physical_malformations: 78\n - blindness: 1\n - sensory_impairments: 252\n - immunodeficiency: 29\n - cancer: 56\n - reduced_fertility: 9\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning: The `facets` argument of `facet_grid()` is deprecated as of ggplot2 2.2.0.\ni Please use the `rows` argument instead.\ni The deprecated feature was likely used in the HPOExplorer package.\n  Please report the issue at\n  <https://github.com/neurogenomics/HPOExplorer/issues>.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ngpt_annot <- HPOExplorer::gpt_annot_codify() \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ngpt_annot$annot_weighted[,hpo_name:=gsub(\"^obsolete \",\"\",hpo_name)]\nleast_severe_phenotype <- gpt_annot$annot_weighted[hpo_name==\"Thin toenail\" & severity_score_gpt==0,]\n```\n\n\n\n\n\nSome phenotypes are more severe than others and thus could be prioritised for treatment (e.g. 'Leukonychia' is far less severe than 'Leukodystrophy'). \nTo systematically rank phenotypes, we used GPT-4 to annotate severity for 16,982/18,082 ($94$%) HPO phenotypes [@murphyHarnessingGenerativeAI2024]. \nBenchmarking against ground-truth HPO branch annotations showed high accuracy (recall=$96$%, min=$89$%, max=$100$%, SD=$4.5$%) and strong consistency ($91$%). \nFrom these, we computed weighted severity scores (0–100) for all phenotypes. The most severe was 'Atrophy/Degeneration affecting the central nervous system' (*HP:0007367*, score=$47$), followed by 'Anencephaly' (*HP:0002323*, score=$45$). \nThere were 677 phenotypes with score 0 (e.g. 'Thin toenail'), mean=$10$ (median=$9.4$).\n\n\n\n\n\n```{.r .cell-code .hidden}\n## Identify cell types associated with the most severe phenotypes\nplot_celltype_severity_out <- MSTExplorer::plot_celltype_severity(\n  results = results,\n  run_enrichment=TRUE,\n  types=c(\"dot\",\"bar\"),\n  run_prune_ancestors=TRUE,\n  base_size = 6,\n  nonsig_fill = ggplot2::alpha(\"transparent\",0),\n  save_path=here::here(\"manuscript\",\"cache\",\"plot_celltype_severity.tests.rds\"),\n  force_new = FALSE\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 2 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,711 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n99 / 99 terms were kept after pruning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating bar plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating dot plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached Wilcoxon rank-sum test results: /Users/bschilder/Desktop/Rare Disease Celltyping/rare_disease_celltyping/manuscript/cache/plot_celltype_severity.tests.rds\n```\n\n\n:::\n\n\n\n\n\n```{.r .cell-code .hidden}\nplot_severity_vs_nphenotypes_out <- MSTExplorer::plot_severity_vs_nphenotypes(\n  results = results,\n  size=2,\n  gpt_annot = gpt_annot)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading required namespace: ggrepel\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n\n\n\n\nMerging severity scores with significant (FDR<0.05) phenotype–cell type associations revealed that neuronal brush cells had the highest average severity, followed by Mueller cells and glial cells, while megakaryocytes had the lowest. Numerically encoding GPT annotations (0–3) and applying Wilcoxon tests confirmed expected links, e.g. retinal pigment epithelial cells with blindness, ventricular cardiac muscle cells with death, and analogous patterns for reduced fertility, immunodeficiency, impaired mobility, and cancer. Finally, we found that cell types associated with more phenotypes also tended to have higher mean composite severity (p=$5.0 \\times 10^{-3}$, Pearson=$0.28$), supporting the idea that broadly involved cell types perform critical physiological functions whose disruption causes more severe disease.\n\n::: {#fig-celltype-severity-dot .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\n (\n   plot_celltype_severity_out$dot$plot | \n   (\n     (patchwork::plot_spacer() / plot_severity_vs_nphenotypes_out$plot) +\n      patchwork::plot_layout(heights = c(1,1.5))\n    ) \n      \n )+\n  patchwork::plot_layout(widths = c(.5,1)) +\n   patchwork::plot_annotation(tag_levels = \"a\") #& \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n   # ggplot2::theme(text=ggplot2::element_text(size=9))\n```\n\n::: {.cell-output-display}\n![__Genetic disruptions to some cell types cause more clinically severe phenotypes than others.__ **a**, Different cell types are associated with different aspects of phenotypic severity. The dot plot shows the mean encoded frequency value for a given severity annotation (0=\"never\", 1=\"rarely\", 2=\"often\", 3=\"always\"; shown as dot size), aggregated by the associated cell type. One-sided Wilcoxon rank-sum tests were performed for each cell type (within each GPT annotation) to determine which cell types more frequently caused severe phenotypes than all other cell types. Dots are colored by $-log_2(FDR)$ when Wilcoxon test FDR values were less than 0.05. All dots with non-significant Wilcoxon tests are instead colored grey. Cell types (rows) are clustered according to the p-values of the Wilcoxon tests. **b**, Cell types that affect more phenotypes tend to have more clinically severe consequences. Specifically, the number of phenotypes each cell type is significantly associated with, and the mean composite severity score of each cell type. The cell types with the top/bottom three x/y axis values are labeled to illustrate the cell types that cause the most/least phenotypic disruption when dysfunctional. Side histograms show the density of data points along each axis. Summary statistics for the linear regression are shown in the title ($t_{Student}$ = Student t-test statistic, $p$ = p-value, $\\hat{r}_{Pearson}$ = Pearson correlation coefficient, $CI_{95\\%}$ = confidence intervals, $n_{pairs}$ = number of observed data pairs).](index_files/figure-pdf/fig-celltype-severity-dot-1.pdf){#fig-celltype-severity-dotD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n### Congenital phenotypes are associated with foetal cell types\n\n\n\n\n\n```{.r .cell-code .hidden}\nplot_congenital_annotations_out <- MSTExplorer::plot_congenital_annotations(\n  results = results[ctd==\"HumanCellLandscape\"],\n  x_var=\"fetal_celltype\",\n  hpo=hpo, \n  digits=\"signif1\",\n  sample.size.label.args = list(size=3)\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n26,585 associations remain after filtering.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n{\n  plot_congenital_annotations_out$plot$labels$subtitle <- NULL\n  plot_congenital_annotations_out$plot$labels$caption <- NULL\n  plot_congenital_annotations_out$plot$labels$group <- NULL\n  plot_congenital_annotations_out_data <- \n    data.table::data.table(plot_congenital_annotations_out$data, \n                           key=\"congenital_onset\")\n  plot_congenital_annotations_out_data[,summary:=paste0(\n    shQuote(congenital_onset),\"=\",.label,\n    \" (n=\",counts,\" associations)\"\n  )]\n}\nplot_congenital_annotations_out_stats <- data.table::data.table(\n  plot_congenital_annotations_out$data_stats$summary_data\n  )\n# plot_congenital_annotations_out_fo <- MSTExplorer::plot_congenital_annotations(\n#   results = results[ctd==\"HumanCellLandscape\"],\n#   x_var=\"fetal_only\",\n#   hpo=hpo)\n```\n\n\n\n\nThe life stage at which a phenotype manifests affects treatment options, as some interventions (e.g. gene therapies) may be ineffective once developmental defects occur.  \nIn the DescartesHuman dataset all cells were foetal, while the Human Cell Landscape included both embryonic/foetal ($29$% of cell types), and adult tissues  (`r `data.table::data.table(plot_congenital_annotations_out$data)[,list(perc=mean(perc)),by=\"fetal_celltype\"][fetal_celltype==FALSE]$perc`% of cell types). \nSome cell types exist in both stages (e.g. chondrocytes), while others are foetal-specific (e.g. neural crest cells).\nCongenital phenotypes (according to our severity annotations) were strongly associated with foetal cell types ($p=$$4.7 \\times 10^{-261}$, $\\chi^2=$$1.2 \\times 10^{3}$), consistent with their developmental origins.\n\n\n\n\n\n```{.r .cell-code .hidden}\n#  Which branches of the HPO are most enriched for phenotypes with fetal cell type associations? \nplot_congenital_annotations_branch_out <- MSTExplorer::plot_congenital_annotations(\n  results = results,\n  by_branch=TRUE,\n  keep_descendants=\"Phenotypic abnormality\",\n  hpo=hpo, \n  # sampling.plan=\"hypergeom\",\n   # type=\"nonparametric\",\n  digits=\"signif1\",\n  # label.args = list(alpha = 1, fill = \"white\", angle=90),\n  sample.size.label.args = list(size=3)\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor columns already present. Skipping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n17,548 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n46,167 associations remain after filtering.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n{\n  plot_congenital_annotations_branch_out$plot$labels$subtitle <- NULL\n  plot_congenital_annotations_branch_out$plot$labels$caption <- NULL\n  plot_congenital_annotations_branch_out$plot$labels$group <- NULL\n  if(plot_congenital_annotations_branch_out$data_stats$summary_data$p.value==0){\n    plot_congenital_annotations_branch_out$data_stats$summary_data$p.value <- .Machine$double.xmin\n  }\n}\ntop_congenital <- unique(plot_congenital_annotations_branch_out$data[,c(\"ancestor_name\",\"perc\")])\n## Create p-value heatmap\n# one_sample_data <- data.table::data.table(\n#   ggstatsplot::extract_stats(plot_congenital_annotations_branch_out$plot)$one_sample_data\n# )[p.value==0,p.value:=.Machine$double.xmin]\n# one_sample_heatmap <- one_sample_data|>\n#   ggplot2::ggplot(ggplot2::aes(x=ancestor_name, y=1, fill=-log2(p.value))) +\n#   ggplot2::geom_raster() +\n#   ggplot2::labs(fill=expression(-log[2]~\"(p-value)\"), x=NULL, y=NULL) +\n#    ggplot2::theme_minimal() +\n#   ggplot2::theme(axis.text = ggplot2::element_blank()) \n```\n\n\n\n\n\n::: {#fig-congenital .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nlegend_colors <- ggplot2::ggplot_build(\n  plot_congenital_annotations_out$plot)$data[[1]][[\"fill\"]]|>unique()\nimg_fetus <- magick::image_read(here::here(\"manuscript/img/fetus.png\"))\nimg_adult <- magick::image_read(here::here(\"manuscript/img/adult.png\"))\n\nfetus <- magick::image_ggplot(img_fetus, interpolate=TRUE) +\nggplot2::geom_line(data = data.frame(x = 1:2, y = 1:2),\n                   linewidth=20,\n                   ggplot2::aes(x, y, \n                                color = 'Foetal\\ncell\\ntypes')) +\nggplot2::scale_color_manual(NULL, values = legend_colors[1]) +\nggplot2::theme(legend.position = 'right',\n               legend.key.width = ggplot2::unit(2.5, 'cm')) \nadult <- magick::image_ggplot(img_adult, interpolate=TRUE) +\nggplot2::geom_line(data = data.frame(x = 0:1, y = 1:2),\n                   linewidth=20,\n                   ggplot2::aes(x, y, \n                                color = 'Adult\\ncell\\ntypes')) +\nggplot2::scale_color_manual(NULL, values = legend_colors[2]) +\nggplot2::theme(legend.position = 'right',\n               legend.key.width = ggplot2::unit(2.5, 'cm')) \n  \n \n\n(\n  (patchwork::plot_spacer()|adult|patchwork::plot_spacer()|fetus|patchwork::plot_spacer()) \n  ) /\n(\n  (\n  (\n  plot_congenital_annotations_out$plot +\n    ggplot2::coord_flip() +\n    \n  ggplot2::labs(x=\"Congenital onset\\nfrequency in phenotype\",\n                y=NULL,\n                fill=NULL, group=NULL) +\n  ggplot2::theme(axis.text.x = ggplot2::element_blank(), \n                 legend.position = \"none\") \n  ) /\n  plot_congenital_annotations_branch_out$plot + \n    ggplot2::labs(x=\"HPO branch\", y=\"Phenotype-cell type associations (%)\") +\n  ggplot2::theme(axis.text.x = ggplot2::element_text(size=12), \n                 legend.position = \"none\") +\n    ggplot2::coord_flip()\n)  + patchwork::plot_layout(heights  = c(data.table::uniqueN(plot_congenital_annotations_out$data$congenital_onset)/ \ndata.table::uniqueN(plot_congenital_annotations_branch_out$data$ancestor_name),\n1)\n) \n  ) +\n  patchwork::plot_layout(heights  = c(0.05, 1)) +\n  patchwork::plot_annotation(tag_levels = list(c(\"\", \"\", letters)))\n```\n\n::: {.cell-output-display}\n![__Foetal vs. adult cell type references provide development context to phenotype aetiology.__ **a**, Congenital phenotypes are more often associated with foetal cell types. As a phenotype is more often congenital in nature, the greater proportion of foetal cell types are significantly associated with it. **b**, The proportion of phenotype-cell type association tests that are enriched for foetal cell types within each HPO branch. The p-values to the right of each bar are the results of an additional series of $\\chi^2$ tests to determine whether the proportion of foetal vs. non-foetal cell types significantly different differs from the proportions expected by chance (the dashed vertical line). The feotal silhouette was generated with DALL-E. The adult silhouette is from phylopic.org and is freely available via CC0 1.0 Universal Public Domain Dedication.](index_files/figure-pdf/fig-congenital-1.pdf){#fig-congenitalD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\nHPO branches varied significantly in the proportion of their significant assocations with foetal cell types ($\\hat{V}_{Cramer}$=$0.22$, $p$<$2.2 \\times 10^{-308}$).\nBranches with the most disproportiate number of foetal cell type associations were 'Abnormality of limbs' ($35$%), 'Growth abnormality' ($32$%), and 'Abnormality of the musculoskeletal system' ($29$%). \nThe most adult-biased brances were 'Abnormality of blood and blood-forming tissues' ($97$%) and 'Abnormality of the immune system' ($96$%).\n\n\n\n\n\n```{.r .cell-code .hidden}\n## Identify which phenotypes are more often associated with foetal version of \n## cell types than the adult versions.\nrun_congenital_enrichment_out <- MSTExplorer::run_congenital_enrichment(\n  results = results[ctd==\"HumanCellLandscape\"]\n  ) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 2 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,711 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n10 / 10 terms were kept after pruning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n9 / 9 terms were kept after pruning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 / 1 terms were kept after pruning.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPruning ancestors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n0 / 0 terms were kept after pruning.\n```\n\n\n:::\n\n\n\n\n\nSome phenotypes involve only foetal or only adult versions of a cell type. We quantified bias by comparing association p-values between foetal and adult versions of the same type (metric range: 1=foetal-only, -1=adult-only).\nThe top $50$ foetal-biased phenotypes revealed were enriched for the HPO branches 'Abnormal nasal morphology' (p=$2.4 \\times 10^{-7}$) and 'Abnormal external nose morphology' (p=$2.5 \\times 10^{-6}$), which included specific phenotypes such as 'Short middle phalanx of the 2nd finger'.\nAdult-biased phenotypes were instead enriched for the branches 'Abnormal elasticity of skin' (p=$3.6 \\times 10^{-7}$) and 'Abnormally lax or hyperextensible skin' (p=$1.3 \\times 10^{-5}$), with examples like 'Excessive wrinkled skin' and 'Paroxysmal supraventricular tachycardia'.\nThese align with known developmental and age-related processes, supporting our approach for linking phenotypes to causal cell types.\n\n### Therapeutic target identification\n\n\n\n\n\n```{.r .cell-code .hidden}\nprioritise_targets_out <- MSTExplorer::prioritise_targets(\n  results = results, \n  ctd_list = ctd_list,\n  phenotype_to_genes = p2g,\n  hpo = hpo,\n  \n  keep_deaths=NULL,\n  keep_onsets=NULL,\n  keep_specificity_quantiles = seq(30,40), ## NULL:70, 30-40:64 \n  keep_mean_exp_quantiles = seq(30,40), ## NULL:65, 10:55\n  info_content_threshold=8, ## 8:55, 5:64 \n  effect_threshold=NULL, ## 1:39\n  severity_score_gpt_threshold=NULL, ## 10:78, NULL:82\n  symptom_intersection_threshold=.25, ## .25:57\n  evidence_score_threshold=3,  ## 5:47, 4:47, 3:64\n  top_n = 10, ## 5:38, 20:42, 30:45, 40:52, 50:55\n  group_vars = \"hpo_id\", \n  save_path = here::here(\"manuscript\",\"cache\",\"prioritise_targets.rds\"),\n  force_new = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading cached results: /Users/bschilder/Desktop/Rare Disease Celltyping/rare_disease_celltyping/manuscript/cache/prioritise_targets.rds\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ngenes_per_pheno <- prioritise_targets_out$top_targets[,list(n=data.table::uniqueN(gene_symbol)),\n                                                      by=\"hpo_id\"]\np2g <- HPOExplorer::add_ont_lvl(p2g)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGetting absolute ontology level for 18,082 IDs.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nmin_ont_lvl <- 3\ngenes_per_pheno_all <- p2g[ontLvl>min_ont_lvl,\n                           list(n=data.table::uniqueN(gene_symbol)),by=\"hpo_id\"]\n\n\ntop_celltypes <- prioritise_targets_out$top_targets[,list(\n  np=data.table::uniqueN(hpo_id)),\n  by=\"cl_name\"]|>data.table::setorderv(\"np\",-1)\ntop_ancestors <- prioritise_targets_out$top_targets[,list(\n  np=data.table::uniqueN(hpo_id),\n  nc=data.table::uniqueN(CellType),\n  ng=data.table::uniqueN(gene_symbol)\n  ),\n  by=\"ancestor_name\"]|>\n  data.table::setorderv(\"np\",-1)\n```\n\n\n\n\n\nIn the above sections, we demonstrated how gene association databases can be used to investigate the cell types underlying disease phenotypes at scale.\nWhile these associations are informative on their own, we wished to take these results further in order to have a more translational impact.\nKnowledge of the causal cell types underlying each phenotype can be incredibly informative for scientists and clinicians in their quest to study and treat them.\nTherapeutic targets with supportive genetic evidence have 2.6x higher success rates in clinical trials [@nelsonSupportHumanGenetic2015; @ochoaHumanGeneticsEvidence2022; @minikelRefiningImpactGenetic2024].\nFurthermore, knowing which cell types to target with gene therapy can maximise the efficacy of highly expensive payloads, and minimise side effects (e.g. immune reaction to viral vectors).\nRecent biotechnological advances have greatly enhanced our ability to target specific cell types with gene therapy, making specific and accurate knowledge the correct underlying cell types more pertinent than ever [@kawabataImprovingCellspecificRecombination2024; @ocarrollAAVTargetingGlial2021].\n\nWe developed an automated pipeline to identify putative cell type–specific gene targets for each phenotype by integrating phenotype–cell type association results with primary resources such as GenCC gene–disease relationships and scRNA-seq atlas datasets, producing a table where each row represented a disease–phenotype–cell type–gene tetrad.\nWe applied sequential filters to retain only significant phenotype–cell type associations ($FDR<0.05$), phenotype–gene pairs with strong causal evidence (GenCC score > 3), phenotypes with high specificity ($IC>8$), and gene–cell type links in the top 25\\% expression specificity quantile, and further required a symptom intersection > 0.25 when linking cell types to diseases via phenotypes.\nThe filtered results were ranked by GPT-4 composite severity scores, with only the top 10 tetrads retained per phenotype, yielding compact, high-confidence networks suitable for manual inspection and visualization. \n\nThis yielded putative therapeutic targets for 5,252 phenotypes across 4,819 diseases in 201 cell types and 3,148 genes ([Supp. Fig. @fig-therapy-filter]).\nWhile this constitutes a large number of genes in total, each phenotype was assigned a median of $2.0$ gene targets (mean=$3.3$, min=1, max=10).\nRelative to the number of genes annotations per phenotype in the HPO overall (median=$7.0$, mean=$62$, min=1, max=5,003) this represents a substantial decrease in the number of candidate target genes, even when excluding high-level phenotypes (HPO level\\>$3.0$).\nIt is also important to note that the phenotypes in the prioritised targets list are ranked by their severity, allowing us to distinguish between phenotypes with a high medical urgency (e.g. 'Hydranencephaly') from those with lower medical urgency (e.g. 'Increased mean corpuscular volume').\nThis can be useful for clinicians, biomedical scientists, and pharmaceutical manufacturers who wish to focus their research efforts on phenotypes with the greatest need for intervention.\n\nAcross all phenotypes, epithelial cell were most commonly implicated (838 phenotypes), followed by stromal cell (626 phenotypes), stromal cell (626 phenotypes), neuron (475 phenotypes), chondrocyte (383 phenotypes), and endothelial cell (361 phenotypes).\nGrouped by higher-order ontology category, 'Abnormality of the musculoskeletal system' had the greatest number of enriched phenotypes (959 phenotypes, 857 genes), followed by 'Abnormality of the nervous system' (733 phenotypes, 1,138 genes), 'Abnormality of head or neck' (543 phenotypes, 986 genes), 'Abnormality of the genitourinary system' (443 phenotypes, 695 genes), and 'Abnormality of the eye' (377 phenotypes, 545 genes).\n\n\n\n\n\n```{.r .cell-code .hidden}\nplot_report_out <- MSTExplorer::plot_report(\n  results = results,\n  rep_dt =prioritise_targets_out$report[(Rows_diff!=0) | step %in% c(\"start\",\"end\")],\n  label.size = .1,\n  add_tiers = FALSE,\n  show_plot = FALSE, \n  save_path = NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nplot_report:: Preparing data.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype.hpoa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-02-08\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nplot_report:: Preparing plot.\n```\n\n\n:::\n\n\n\n\n\n### Therapeutic target validation\n\n\n\n\n\n```{.r .cell-code .hidden}\n# remove_status <- c(\"Application submitted\",\n#                    \"Patented\",\n#                    \"Preregistration\",\"Registered\",\n#                    \"Investigative\",\"Preclinical\",\n#                    \"Clinical trial\",\"Phase 0\",\n#                    NA) \nrun_map_genes = FALSE\n\n## Gene therapy only\nttd_check_out <- MSTExplorer::ttd_check(\n  top_targets=prioritise_targets_out$top_targets, \n  phenotype_to_genes=p2g,\n  run_map_genes = run_map_genes,\n  drug_types = \"Gene therapy\",\n  as_percent = FALSE,\n  # remove_status=remove_status,\n  allow.cartesian = TRUE,\n  show_plot = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nLoading required namespace: readxl\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nNon-failed gene targets enrichment p-value: 1.75175228265098e-05\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFailed gene targets depletion p-value: 1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nNo failed therapeutics found, only plotting non-failed therapeutics.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n## All therapy types\nttd_check_all_out <- MSTExplorer::ttd_check(\n  top_targets=prioritise_targets_out$top_targets,   \n  phenotype_to_genes=p2g,\n  run_map_genes = run_map_genes,\n  as_percent = FALSE,\n  # remove_status=remove_status,  \n  allow.cartesian = TRUE,\n  show_plot = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nNon-failed gene targets enrichment p-value: 0.99999999994226\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFailed gene targets depletion p-value: 2.23069930009439e-142\n```\n\n\n:::\n\n\n\n\n\nTo determine whether the genes prioritised by our therapeutic targets pipeline were plausible, we checked what percentage of gene therapy targets we recapitulated.\nData on therapeutic approval status was gathered from the Therapeutic Target Database (TTD; release 2025-08-10) [@Liu2011-qd].\nOverall, we prioritised $87$% (120 total) of all non-failed existing gene therapy targets (ie. those which are currently approved, investigative, or undergoing clinical trials).\nA hypergeometric test confirmed that our prioritised targets were significantly enriched for non-failed gene therapy targets ($p=$$1.8 \\times 10^{-5}$).\nFor these hypergeometric tests, the background gene set was composed of the union of all phenotype-associated genes in the HPO and all gene therapy targets listed in TTD.\n\nEven when considering therapeutics of any kind ([Supp. Fig. @fig-therapy-validate-all]), not just gene therapies, we recapitulated $40$% of the non-failed therapeutic targets and 0% of the terminated/withdrawn therapeutic targets (n=1,255).\nHere we found that our prioritised targets were highly significantly depleted for failed therapeutics ($p=$$2.2 \\times 10^{-142}$).\nThis suggests that our multi-scale evidence-based prioritisation pipeline is capable of selectively identifying genes that are likely to be effective therapeutic targets.\n\n\n\n\n\n```{.r .cell-code .hidden}\nrpe65 <- prioritise_targets_out$top_targets[gene_symbol==\"RPE65\"]\n```\n\n\n\n\n\nIn addition to aggregate enrichment results, we also provide specific examples of successful gene therapies whose cell type-specific mechanism were recapitulated by our phenotype-cell associations.\nIn particular, our pipeline nominated the gene *RPE65* within 'retinal pigment epithelial cells' as the top target for 'Fundus atrophy' vision-related phenotypes that are hallmarks of 'Leber congenital amaurosis, type II' and 'Severe early-childhood-onset retinal dystrophy'.\nIndeed, gene therapies targeting *RPE65* within the retina of patients with these rare genetic conditions are some of the most successful clinical applications of this technology to date, able to restore vision in many cases [@chiu2021].\nIn other cases, a tissue (e.g. liver) may be known to be causally involved in disease genesis, but the precise causal cell types within that tissue remain unknown (e.g. heptocytes, Kupffer cells, Cholangiocytes, Hepatic stellate cells, Natural killer cells, etc.).\nTissue-level investigations (e.g. using bulk transcriptomics or epigenomics) would be dominated by hepatocytes, which comprise 75% of the liver.\nOur prioritized gene therapy targets can aid in such scenarios by providing the cell type-resolution context most likely to be causal for a given phenotype or set of phenotypes.\n\n::: {#fig-therapy-validate .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nttd_check_out$plot \n```\n\n::: {.cell-output-display}\n![__Prioritised targets recapitulate existing gene therapy targets.__ The proportion of existing gene therapy targets (documented in the Therapeutic Target Database) recapitulated by our prioritisation pipeline. Therapeutics are stratified by the stage of clinical development they were at during the time of writing. While our prioritized targets did not include any failed ('Terminated') therapies, the fact that only one such therapy exists in the dataset preclude us from making any conclusions about depletion of failed gene therapy targets in our prioritised targets list.](index_files/figure-pdf/fig-therapy-validate-1.pdf){#fig-therapy-validateD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n### Selected example targets\n\n\n\n\n\n```{.r .cell-code .hidden}\nres_class <- HPOExplorer::gpt_annot_class()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading cached RDS file: phenotype_to_genes.txt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: v2024-08-13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n151 phenotypes do not have matching HPO IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nReading in GPT annotations for 16,982 phenotypes.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAssigning severity classes.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nprioritise_targets_grid_out <- MSTExplorer::prioritise_targets_grid(\n  top_targets = prioritise_targets_out$top_targets, \n  res_class = res_class,\n  width = 65,\n  keep_severity_class = c(\"profound\",\"severe\"),\n  keep_physical_malformations = c(0,1), \n  show_plot=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndisease_name and disease_description already in dat.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding level-2 ancestor to each HPO ID.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 1 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n17,548 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n5,708 associations remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGetting absolute ontology level for 18,082 IDs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Macaca mulatta orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Macaca mulatta\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9544\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Macaca mulatta.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nDropping 1 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   4 / 19 (21%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   15 / 19 (79%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Mus musculus orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Mus musculus\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 10090\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Mus musculus.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n17 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n17 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   2 / 19 (11%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   17 / 19 (89%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Danio rerio orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Danio rerio\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 7955\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Danio rerio.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nDropping 1 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   3 / 19 (16%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   16 / 19 (84%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Drosophila melanogaster orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Drosophila melanogaster\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 7227\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Drosophila melanogaster.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n9 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n9 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   10 / 19 (53%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   9 / 19 (47%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Caenorhabditis elegans orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Caenorhabditis elegans\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 6239\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Caenorhabditis elegans.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n5 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n5 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   14 / 19 (74%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   5 / 19 (26%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Macaca mulatta orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Macaca mulatta\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9544\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Macaca mulatta.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n18 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   2 / 20 (10%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   18 / 20 (90%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Mus musculus orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Mus musculus\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 10090\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Mus musculus.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n20 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   0 / 20 (0%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   20 / 20 (100%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Danio rerio orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Danio rerio\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 7955\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Danio rerio.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n29 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n29 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nDropping 13 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   6 / 20 (30%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   14 / 20 (70%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Drosophila melanogaster orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Drosophila melanogaster\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 7227\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Drosophila melanogaster.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n5 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n5 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   15 / 20 (75%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   5 / 20 (25%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nPreparing gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\ndata.table format detected.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n21 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConverting human ==> Caenorhabditis elegans orthologs using: homologene\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCommon name mapping found for human\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 9606\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nRetrieving all organisms available in homologene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMapping species name: Caenorhabditis elegans\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n1 organism identified from search: 6239\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without orthologs in Caenorhabditis elegans.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from input_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n8 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nExtracting genes from ortholog_gene.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n8 genes extracted.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nChecking for genes without 1:1 orthologs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nDropping 3 genes that have multiple input_gene per ortholog_gene (many:1).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltering gene_df with gene_map\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding input_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ortholog_gene col to gene_df.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\n=========== REPORT SUMMARY ===========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes dropped after convert_orthologs :\n   18 / 20 (90%)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTotal genes remaining after convert_orthologs :\n   2 / 20 (10%)\n```\n\n\n:::\n\n\n\n\n\n```{.r .cell-code .hidden}\nseverity_score_gpt_threshold <- 15\ntop_targets <- prioritise_targets_out$top_targets[severity_score_gpt>severity_score_gpt_threshold,]\ntop_phenotypes <- unique(top_targets$hpo_name)\n```\n\n\n\n\n\n```{.r .cell-code .hidden}\nheight <- \"100vh\"\nwidth <- \"100vw\"\nphenotypes_network <- c(\n\"GM2-ganglioside accumulation\",\n\"Spinocerebellar atrophy\",\n\"Neuronal loss in central nervous system\")\nvn_therapy <- lapply(stats::setNames(phenotypes_network, phenotypes_network), function(phenotype){\n  MSTExplorer::prioritise_targets_network(\n    top_targets = top_targets[hpo_name==phenotype], \n    main = NULL,\n    height = height,\n    width = width,\n    submain = NULL)$plot\n}) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d975ca3fcb_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d9490a7874_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d91cb93b66_prioritise_targets_network.html\n```\n\n\n:::\n\n\n\n\n\n::: {#fig-therapy-examples .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nif(knitr::is_html_output()){\n  knitr::opts_current$set(results=\"asis\")\n  prioritise_targets_grid_out$plot \n  vn_therapy\n} else {\n  # img_paths <- stats::setNames(\n  #   here::here(\n  #     \"manuscript\",\n  #     \"img\",\"fig-therapy-examples\",\n  #  c(\"tay-sachs.png\",\n  #    \"spinocerebellar-atrophy.png\",\n  #    \"neuronal-loss.png\")),\n  #   c(\"GM2-ganglioside accumulation\",\n  #     \"Spinocerebellar atrophy\",\n  #     \"Neuronal loss in central nervous system\")\n  # )\n  # fig_networks <- lapply(img_paths, function(x){\n  #   i = which(x==img_paths)\n  #   magick::image_read(x, density=300)|>magick::image_ggplot(interpolate=TRUE) +\n  #   ggplot2::theme_void() +\n  #   ggplot2::labs(subtitle=names(img_paths)[i]) +\n  #   ggplot2::theme(plot.margin = ggplot2::unit(c(0,0,0,0),\"pt\"), \n  #                  panel.background = ggplot2::element_rect(fill = \"grey50\"))\n  # }) \n  \n  \n  \n  # fig_therapy_examples <- ( (\n  # (patchwork::plot_spacer()|prioritise_targets_grid_out$plot) +\n  #   patchwork::plot_layout(widths = c(0,1)) &  \n  #   ggplot2::theme(legend.direction = \"vertical\", \n  #                  legend.position = \"bottom\")\n  # ) /\n  # (\n  #   (fig_networks$`GM2-ganglioside accumulation` | fig_networks$`Spinocerebellar atrophy`) / \n  #     fig_networks$`Neuronal loss in central nervous system`\n  # ) )+ \n  #   patchwork::plot_layout(heights = c(1,3)) +\n  #  patchwork::plot_annotation(tag_levels=\"a\")\n  # fig_therapy_examples \n  \n  \n  # ggplot2::ggsave(fig_therapy_examples, filename=\"~/Downloads/fig_therapy_examples.png\", height=30, width=18, dpi=300)\n  \n  # ggplot2::ggsave(\"~/Downloads/prioritise_targets_grid.pdf\",\n  #                  (patchwork::plot_spacer()|prioritise_targets_grid_out$plot) +\n  #   patchwork::plot_layout(widths = c(0,1)) + \n  #     patchwork::plot_annotation(tag_levels=\"a\") &  \n  #   ggplot2::theme(legend.direction = \"vertical\", \n  #                  legend.position = \"bottom\"), \n  #   height=10, width=19\n  # ) \n  \n  ## Combined plots in Illustrator for more flexibility\n  # magick::image_read(here::here(\"manuscript\",\"img\",\"fig-therapy-examples.png\"), \n  #                    density=400) |>\n  #   magick::image_scale(geometry = \"2000x2000>\")\n    # magick::image_resize(\"1000x1000\",)\n  \n  prioritise_targets_grid_out$plot +\n   patchwork::plot_annotation(tag_levels=\"a\") \n} \n```\n\n::: {.cell-output-display}\n![__Evidence-based pipeline nominates causal mechanisms to target for gene therapy.__ Shown here are the top 40 prioritised gene therapy targets at multiple biological scales, stratified by congenital (top row) vs. non-congential phenotypes (bottom row) as well as severity class (\"profound\" or \"severe\"). In this plot, only the top 10 most severe phenotypes within a given strata/substrata are shown **a,c**, Severity annotation generated by GPT-4. **b,d**, Composite severity scores computed across all severity metrics. **e,g**, Top mediator disease and cell type-specific target for each phenotype. **f,h** top target gene for each phenotype within humans (*Homo sapiens*). We also include the 1:1 ortholog of each human gene in several commonly used animal models, including monkey (*Macaca mulatta*), mouse (*Mus musculus*), zebrafish (*Danio rerio*), fly (*Drosophila melanogaster*) and nematode (*Caenorhabditis elegans*). Boxes are empty where no 1:1 ortholog is known. See supplement [Supp. Fig. @fig-therapy-examples2] for network plots of  cell type-specific gene therapy targets for several severe phenotypes and their associated diseases.](index_files/figure-pdf/fig-therapy-examples-1.pdf){#fig-therapy-examplesD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\nFrom our prioritised targets, we selected four phenotype or disease examples: 'GM2-ganglioside accumulation', 'Spinocerebellar atrophy', 'Neuronal loss in central nervous system'.\nTo focus on clinically relevant phenotypes and reduce overplotting, we limited selection to those with GPT severity scores above $15$ [Supp. Fig. @fig-therapy-examples2].\nSelection was based on severity and network simplicity to allow compact visualisation.\n\nTay-Sachs disease (TSD) is a fatal neurodegenerative condition caused by *HEXA* deficiency and ganglioside buildup.\nWe identified alternatively activated macrophages as the cell type most associated with 'GM2-ganglioside accumulation' [Supp. Fig. @fig-therapy-examples2].\nThis aligns with prior findings of ganglioside accumulation in TSD macrophages [@fendersonChapterDevelopmentalGenetic2009; @vilcaesGangliosideSynthesisPlasma2020.; @yoheGangliosideAlterationsStimulated1985; @demirGM2GangliosideAccumulation2020].\nOur results support macrophages as causal in TSD and the most promising therapeutic target.\n\n\n\n\n\n```{.r .cell-code .hidden}\nsca <- results[q<0.05 & hpo_name=='Spinocerebellar atrophy']\n```\n\n\n\n\n\nSpinocerebellar atrophy is a progressive neurodegenerative phenotype in disorders like Spinocerebellar ataxia.\nOur pipeline implicates M2 macrophages ('Alternatively activated macrophages') as the only causal cell type [Supp. Fig. @fig-therapy-examples2].\nThis suggests Purkinje cell loss is downstream of macrophage dysfunction, consistent with microglial roles in neurodegeneration [@ferroRoleMicrogliaAtaxias2019; @holMicroglialTranscriptomicsMeets2022; @lopesAtlasGeneticEffects2020a].\nOur findings provide the first statistically supported link between risk genes and this cell type, which is supported by relevant mouse models (e.g. *Atxn1*, *Pnpla6*) that replicate cellular and behavioural disease phenotypes.\n\n\n\n\n\n```{.r .cell-code .hidden}\nneuronal_loss <- results[q<0.05 & hpo_name=='Neuronal loss in central nervous system']\n```\n\n\n\n\n\n'Neuronal loss in the central nervous system' is a phenotype by multiple serious diseases (e.g. Huntington disease, frontotemporal lobar degeneration, and certain mitochondrial disorders). Across all of these diverse conditions with varying genetic causes (>8 genes), these conditions converge on just 2 cell types: M2 macrophages and epithelial cells.\n\n\nAdditional examples of therapeutics targets include; \ncardiac muscle and endothelial cells in pheontypes associated with respiratory failure ([Supp. Fig. @fig-therapy-examples-supp-rf]), \nmicroglia in frontal lobe dementia ([Supp. Fig. @fig-therapy-examples-supp-dementia]),\nchondrocytes in lethal skeletal dyplasia ([Supp. Fig. @fig-therapy-examples-supp-lsd]), \nendothelial cells in small vessel disease ([Supp. Fig. @fig-therapy-examples-supp-svd]), \noligodendrocytes and neurons in Parkinson's disease ([Supp. Fig. @fig-therapy-examples-supp-pd]). \nand multiple gastrointestinal and immune cell types in Alzheimer's disease ([Supp. Fig. @fig-therapy-examples-supp-ad]). \nFor further details please refer to the Supplementary Results.\n \n### Mappings\n\n\n\n\n\n```{.r .cell-code .hidden}\nmaps <- HPOExplorer::get_mappings(max_dist = NULL) \nmaps_agg <- (\n  data.table::rbindlist(maps, idcol = \"source\")\n )[,list(\"source terms\"=data.table::uniqueN(curie_id), \n         \"HPO terms\"=data.table::uniqueN(mapped_curie),\n         \"mappings\"=.N),\n   keyby=c(\"source\",\"distance\")]\nmaps_agg_top <- maps_agg[distance==1][get(\"HPO terms\")==max(get(\"HPO terms\")),]\n```\n\n\n\n\n\nMappings from HPO phenotypes and other commonly used medical ontologies (SNOMED, UMLS, ICD-9, and ICD-10) were gathered using the Ontology Xref Service (OxO; <https://www.ebi.ac.uk/spot/oxo/>) to facilitate others using our results in future work.\nDirect mappings, with a cross-ontology distance of 1, are the most precise and reliable.\nCounts of mappings at each distance are shown in @tbl-mappings.\nIn total, there were 15,105 direct mappings between the HPO and other ontologies, with the largest number of mappings coming from the UMLS ontology (12,898 UMLS terms).\n\n## Discussion {#sec-discussion}\n\n\n\n\n\n```{.r .cell-code .hidden}\nnotfail <- ttd_check_out$data[DRUGTYPE==\"Gene therapy\" & failed==FALSE, drop=FALSE]\nttd_nonfailed_val <- sum(notfail$prioritised)/nrow(notfail)*100 |> round(2)\n```\n\n\n\n\nInvestigating rare diseases (RDs) at the phenotype level offers advantages in research and clinical medicine. Most RDs have a single causal gene (7,671/8,631 = 89%). Therefore aggregating genes into phenotype-based sets enables well-powered analyses (mean ~$76$ genes/phenotype). Phenotypes often converge on shared molecular pathways, and a phenotype-centric approach captures interindividual variation disease presentations. This requires mapping the molecular and cellular mechanisms behind each phenotype, which we achieve here at phenome scale.\n\nAcross 201 cell types and 11,047 phenotypes, we found >46,514 significant phenotype–cell type relationships, enabling multi-scale mechanistic tracing. Results replicate known links, add cellular context, and uncover novel associations. Extensive benchmarking confirmed expected associations, aided by comprehensive phenotype and cell type ontologies. Key findings include enrichment of anatomically matched associations, correlation of phenotype specificity with association strength, precise subtypes for recurrent infections, and links between congenital onset frequency and developmental cell types.\n\nLess than 5% of RDs have treatments [@Halley2022-pd]. However, advances in CRISPR, prime editing, antisense oligonucleotides, viral/lipid delivery [@Bueren2023-ma; @Bulaklak2020-ta; @Kohn2023-vh; @Zhao2023-qy] are accelerating. The FDA’s new program [@Lu2024-kl] aims to expand gene/cell therapy approvals in years rather than decades [@Brown2022-ye], but success depends on understanding the causal mechanisms of each RD. Here, we built a reproducible pipeline for nominating cell type–resolved therapeutic targets ([Fig. @fig-therapy-examples]), factoring in association strength, gene specificity, severity, therapy delivery suitability, and model translatability. We recovered $87$% of active gene therapies, confirming strong enrichment. Highlighted cases include macrophage-driven phenotypes in Tay-Sachs, spinocerebellar ataxia, and Alzheimer’s disease, pinpointing specific phenotypes (e.g. neurofibrillary tangles) to causal cell types.\n\nCurrent limitations of our study include missing certain rare cell subtypes and states (e.g. immune cell responses, diseased states, aging) and incomplete knowledge of gene–phenotype associations. With the expectation that data will continue to improve over time, our pipeline is fully containerised and documented for end-to-end reproducibility. Comprehensive, ontology-driven frameworks like ours enable discovery, diagnosis, and basket trial design for shared molecular etiologies across many diseases [@Zanello2023-zd]. Furthermore, we invite collaborations to validate and translate these predictions, and have publicly released all results via R packages and the Rare Disease Celltyping Portal (<https://neurogenomics-ukdri.dsi.ic.ac.uk/>) to support broad access for researchers, clinicians, and patients.\n\nIn summary, we present a scalable, cost-effective, and reproducible method for phenome-wide, cell type–specific mechanism prediction in RDs. With advances in gene therapy and supportive regulatory changes, this approach can help realise the promise of genomic medicine for the global RD community.\n\n## Methods {#sec-methods}\n\n### Human Phenotype Ontology\n\n\n\n\n\n```{.r .cell-code .hidden}\ngencc <- KGExplorer::get_gencc(agg_by = NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ngencc_version <- KGExplorer::get_version(gencc, return_version = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n\n\n\n\nThe latest version of the HPO (release 2024-02-08) was downloaded from the EMBL-EBI Ontology Lookup Service [@Cote2010-gp] and imported into R using the `HPOExplorer` package.\nThis R object was used to extract ontological relationships between phenotypes as well as to assign absolute and relative ontological levels to each phenotype.\nThe latest version of the HPO phenotype-to-gene mappings and phenotype annotations were downloaded from the official HPO GitHub repository and imported into R using `HPOExplorer`.\nThis contains lists of genes associated with phenotypes via particular diseases, formatted as three columns in a table (gene, phenotype, disease).\n\nHowever, not all genes have equally strong evidence of causality with a disease or phenotype, especially when considering that the variety of resources used to generate these annotations (OMIM, Orphanet, DECIPHER) use variable methodologies (e.g. expert-curated review of the medical literature vs. automated text mining of the literature).\nTherefore we imported data from the Gene Curation Coalition (GenCC) [@DiStefano2022-ao; @DiStefano2023-np], which (as of 2025-08-02) 24,112 evidence scores across 7,566 diseases and 5,533 genes.\nEvidence scores are defined by GenCC using a standardised ordinal rubric which we then encoded as a semi-quantitative score ranging from 0 (no evidence of disease-gene relationship) to 6 (strongest evidence of disease-gene relationship) (see @tbl-gencc).\nAs each Disease-Gene pair can have multiple entries (from different studies) with different levels of evidence, we then summed evidence scores per Disease-Gene pair to generate aggregated Disease-by-Gene evidence scores.\nThis procedure can be described as follows.\n\nLet us denote:\n\n-   $D$ as diseases.\n\n-   $P$ as phenotypes in the HPO.\n\n-   $G$ as genes\n\n-   $S$ as the evidence scores describing the strength of the relationship between each Disease-Gene pair.\n\n-   $M_{ij}$ as the aggregated Disease-by-Gene evidence score matrix.\n\n$$\nM_{ij} = \\sum_{k=1}^{\\text{f}} D_i G_j S_k\n$$\n\nNext, we extracted Disease-Gene-Phenotype relationships from the annotations file distributed by the HPO (*phenotype_to_genes.txt*).\nThis provides a list of genes associated with phenotypes via particular diseases, but does not include any strength of evidence scores.\n\nHere we define: - $A_{ijk}$ as the Disease-Gene-Phenotype relationships.\n- $D_i$ as the $i$th disease.\n- $G_j$ as the $j$th gene.\n- $P_k$ as the $k$th phenotype.\n\n$$\nA_{ijk} = D_i G_j P_k\n$$\n\nIn order to assign evidence scores to each Phenotype-Gene relationship, we combined the aforementioned datasets from GenCC ($M_{ij}$) and HPO ($A_{ijk}$) by merging on the gene and disease ID columns.\nFor each phenotype, we then computed the mean of Disease-Gene scores across all diseases for which that phenotype is a symptom.\nThis resulted in a final 2D tensor of Phenotype-by-Gene evidence scores ($L_{ij}$):\n\n::: {#eq-evidence-scores .content-hidden unless-format=\"html\"}\n![](equations/eq1.png){height=\"300px\"}\n\n\\\n\n**Construction of the tensor of Phenotype-by-Gene evidence scores.**\n:::\n\n\\\n\\\n\n::: {.content-visible unless-format=\"html\"}\n$$\n \\eqnmarkbox[NavyBlue]{n1}{ L_{ij} } = \n \\begin{cases}\n  \\frac{\\sum_{k=1}^{\\text{f}} \n    \\eqnmarkbox[Cerulean]{n3a}{D_i G_j} \n    \\eqnmarkbox[BlueViolet]{n5}{P_k} \n    }{\\text{f}}, \n  \\text{if } \\eqnmarkbox[Cerulean]{n3b}{D_i G_j} \n    \\in \\eqnmarkbox[blue]{n4a}{A},\n  \\\\\n  1, \\hspace{2.2cm}\n  \\text{if } \\eqnmarkbox[Cerulean]{n3c}{D_i G_j} \n    \\notin\\eqnmarkbox[blue]{n4b}{A}\n \\end{cases}\n$$ \\annotate[yshift=1em]{left}{n1}{Tensor of Phenotype-by-Gene \\\\evidence scores} \\annotate[yshift=2.5em]{right}{n3a,n3b,n3c}{Tensor of Disease-by-Gene \\\\evidence scores} \\annotate[yshift=-2.5em]{below,left}{n4a,n4b}{Disease-by-Gene-by-Phenotype \\\\relationships} \\annotate[yshift=1em, xshift=-1em]{right}{n5}{Phenotype}\n\n\\\n\n**Construction of the tensor of Phenotype-by-Gene evidence scores.**\n:::\n\n\\\n\nHistograms of evidence score distributions at each step in processing can be found in [Fig. @fig-evidence-histograms].\n\n### Single-cell transcriptomic atlases\n\nIn this study, the gene by cell type specificity matrix was constructed using the Descartes Human transcriptome atlas of foetal gene expression, which contains a mixture of single-nucleus and single-cell RNA-seq data (collected with sci-RNA-seq3) [@Cao2020-qz].\nThis dataset contains 377,456 cells representing 77 distinct cell types across 15 tissues.\nAll 121 human foetal samples ranged from 72 to 129 days in estimated postconceptual age.\nTo independently replicate our findings, we also used the Human Cell Landscape which contains single-cell transcriptomic data (collected with microwell-seq) from embryonic, foetal, and adult human samples across 49 tissues [@Han2020-iq].\n\nSpecificity matrices were generated separately for each transcriptomic atlas using the R package `EWCE` (v1.11.3) [@Skene2016-rb].\nWithin each atlas, cell types were defined using the authors' original freeform annotations in order to preserve the granularity of cell subtypes as well as incorporate expert-identified rare cell types.\nCell types were only aligned and aggregated to the level of corresponding Cell Ontology (CL) [@Diehl2016-gt] annotations afterwards when generating summary figures and performing cross-atlas analyses.\nUsing the original gene-by-cell count matrices from each single-cell atlas, we computed gene-by-cell type expression specificity matrices as follows.\nGenes with very no expression across any cell types were considered to be uninformative and were therefore removed from the input gene-by-cell matrix $F(g,i,c)$.\n\nNext, we calculated the mean expression per cell type and normalised the resulting matrix to transform it into a gene-by-cell type expression specificity matrix ($S_{g,c}$).\nIn other words, each gene in each cell type had a 0-1 score where 1 indicated the gene was mostly specifically expressed in that particular cell type relative to all other cell types.\nThis procedure was repeated separately for each of the single-cell atlases and can be summarised as:\n\n::: {#eq-ctd-specificity .content-hidden unless-format=\"html\"}\n![](equations/eq3.png){height=\"300px\"}\n\n**Construction of the gene-by-cell type specificity matrix.**\n:::\n\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\\begin{equation*}\n  \\eqnmarkbox[orange]{s1}{S_{gc}}\n  =\n  \\frac{\n    \\eqnmarkbox[purple]{s3a}{\n      \\frac{\n        \\sum_{i=1}^{|L|} F_{gic}\n      }{\n        N_c  \n      }\n    } \n  }{\n   \\eqnmarkbox[OrangeRed]{s6}{\\sum_{r=1}^{k}}(\n     \\eqnmarkbox[purple]{s3b}{\n      \\frac{\n        \\sum_{i=1}^{|L|} F_{gic}\n      }{\n        N_c  \n      }\n    } \n   ) \n  }\n\\end{equation*} \\annotate[yshift=1em]{left}{s1}{Gene-by-cell type specificity matrix} \\annotate[yshift=2em]{left}{s3a,s3b}{Compute mean expression of each gene per cell type} \\annotate{below,left}{s6}{Compute row sums of \\\\mean gene-by-cell type matrix}\n:::\n\n\\\n\n### Phenotype-cell type associations\n\nTo test for relationships between each pairwise combination of phenotype (n=11,047) and cell type (n=201) we ran a series of univariate generalised linear models implemented via the `stats::glm` function in R.\nFirst, we filtered the gene-by-phenotype evidence score matrix ($L_{ij}$) and the gene-by-cell type expression specificity matrix ($S_{gc}$) to only include genes present in both matrices (n=4,949 genes in the Descartes Human analyses; n=4,653 genes in the Human Cell Landscape analyses).\nThen, within each matrix any rows or columns with a sum of 0 were removed as these were uninformative data points that did not vary.\nTo improve interpretability of the results $\\beta$ coefficient estimates across models (i.e. effect size), we performed a scaling prestep on all dependent and independent variables.\nInitial tests showed that this had virtually no impact on the total number of significant results or any of the benchmarking metrics based on p-value thresholds [Fig. @fig-summary].\nThis scaling prestep improved our ability to rank cell types by the strength of their association with a given phenotype as determined by separate linear models.\n\nWe repeated the aforementioned procedure separately for each of the single-cell references.\nOnce all results were generated using both cell type references (2,206,994 association tests total), we applied Benjamini-Hochberg false discovery rate [@Benjamini1995-vo] (denoted as $FDR_{pc}$) to account for multiple testing.\nOf note, we applied this correction across all results at once (as opposed to each single-cell reference separately) to ensure the $FDR_{pc}$ was stringently controlled for across all tests performed in this study.\n\n### Symptom-cell type associations\n\nHere we define a symptom as a phenotype as it presents within the context of the specific disease.\nThe features of a given symptom can be described as the subset of genes annotated to phenotype $p$ via a particular disease $d$, denoted as $G_{dp}$ ([see Fig. @fig-diagram]).\nTo attribute our phenotype-level cell type enrichment signatures to specific diseases, we first identified the gene subset that was most strongly driving the phenotype-cell type association by computing the intersect of genes that were both in the phenotype annotation and within the top 25% specificity percentile for the associated cell type.\nWe then computed the intersect between symptom genes ($G_{dp}$) and driver genes ($G_{pc}$), resulting in the gene subset $G_{d \\cap p \\cap c}$.\nOnly $G_{d \\cap p \\cap c}$ gene sets with 25% or greater overlap with the symptom gene subset ($G_{dp}$) were kept.\nThis procedure was repeated for all phenotype-cell type-disease triads, which can be summarised as follows:\n\n::: {#eq-symptoms .content-hidden unless-format=\"html\"}\n![](equations/eq4.png){height=\"300px\"}\n:::\n\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\\begin{equation*}\n  \\frac{\n     \\eqnmarkbox[Chartreuse3]{g1}{|G_{d \\cap p \\cap c} |}\n    }{\n       \\eqnmarkbox[Emerald]{g2}{|G_{dp}|}} \n  \\geq \\eqnmarkbox[SeaGreen]{g3}{.25} \n\\end{equation*} \\annotate[yshift=1em]{left}{g1}{Intersect between \\\\symptom genes ($G_{dp}$) and driver genes ($G_{pc}$)} \\annotate[yshift=-1em]{below,left}{g2}{Symptom genes \\\\(i.e. genes annotated to a phenotype\\\\ via a specific disease)} \\annotate[yshift=-1em]{below,right}{g3}{Minimum proportion of overlap \\\\between $G_{dpc}$ and $G_{dp}$}\n:::\n\n\\\n\\\n\n### Validation of expected phenotype-cell type relationships\n\nWe first sought to confirm that our tests (across both single-cell references) were able to recover expected phenotype-cell type relationships across seven high-level branches within the HPO ([Fig. @fig-summary]), including abnormalities of the cardiovascular system, endocrine system, eye, immune system, musculoskeletal system, nervous system, and respiratory system.\nWithin each branch the number of significant tests in a given cell type were plotted ([Fig. @fig-summary]b).\nMappings between freeform annotations (the level at which we performed our phenotype- cell type association tests) provided by the original atlas authors and their closest CL term equivalents were provided by CellxGene [@CZI_Single-Cell_Biology_Program2023-fs].\nCL terms along the *x-axis* of [Fig. @fig-summary]b were assigned colours corresponding to which HPO branch showed the greatest number of enrichments (after normalising within each branch to account for differences in scale).\nThe normalised colouring allows readers to quickly assess which HPO branch was most often associated with each cell type, while accounting for differences in the number of phenotypes across branches.\nWe then ran a series of Analysis of Variance (ANOVA) tests to determine whether (within a given branch) a given cell type was more often enriched (FDR\\<0.05) within that branch relative to all of the other HPO branches of an equivalent level in the ontology (including all branches not shown in [Fig. @fig-summary]b).\nAfter applying Benjamini-Hochberg multiple testing correction [@Benjamini1995-vo] (denoted as $FDR _{b,c}$), we annotated each respective branch-by-cell type bar according to the significance (\\*\\*\\*\\* : $FDR _{b,c}<1e-04$, \\*\\*\\* : $FDR _{b,c}<0.001$, \\*\\* : $FDR _{b,c}<0.01$, \\* : $FDR _{b,c}<0.05$).\nCell types in [Fig. @fig-summary]a-b were ordered along the *x-axis* according to a dendrogram derived from the CL ontology ([Fig. @fig-summary]c), which provides ground-truth semantic relationships between all cell types (e.g. different neuronal subtypes are grouped together).\n\nAs an additional measure of the accuracy of our phenotype-cell types test results we identified conceptually matched branches across the HPO and the CL ([Fig. @fig-summary]d and @tbl-celltypes).\nFor example, 'Abnormality of the cardiovascular system' in the HPO was matched with 'cardiocytes' in the CL which includes all cell types specific to the heart.\nAnalogously, 'Abnormality of the nervous system' in the HPO was matched with 'neural cell' in the CL which includes all descendant subtypes of neurons and glia.\nThis cross-ontology matching was repeated for each HPO branch and can be referred to as on-target cell types.\nWithin each branch, the $-log_{10}(FDR _{pc})$ values of on-target cell types were binned by rounding to the nearest integer (*x-axis*) and the percentage of tests for on-target cell types relative to all cell types were computed at each bin (*y-axis*) ([Fig. @fig-summary]d).\nThe baseline level (dotted horizontal line) illustrates the percentage of on-target cell types relative to the total number of observed cell types.\nAny percentages above this baseline level represent greater than chance representation of the on-target cell types in the significant tests.\n\n### Validation of inter- and intra-dataset consistency\n\nWe tested for inter-dataset consistency of our phenotype-cell type association results across different single-cell reference datasets (Descartes Human and Human Cell Landscape).\nFor all tests reported here, the relevant association metrics (p-values or effect size) were first averaged to the level of ancestral HPO terms (5 levels down the hierachy) to reduce figure size.\nFor association tests with exactly matching Cell Ontology ID across the two references, we tested for a relationship between the p-values generated with each of the references by fitting linear regression model (`stats::lm` via the R function `ggstatsplot::ggscatterstats`). \nNext, we performed an additional linear regression between the effect sizes (each GLM model's $R^2$ estimates after applying a $log_2$ fold-change tranformation) of all significant phenotype-cell type associations (FDR \\< 0.05) with exactly matching cell types across the two references.\n\nWe also tested for intra-dataset consistency within the Human Cell Landscape by running additional linear regressions between the phenotype-cell type association test statistics of the foetal and the adult samples (using both p-values and model $R^2$ estimates).\nWhile we would not expect the same exact cell type associations across different developmental stages, we would nevertheless expect there to be some degree of correlation between the developing and mature versions of the same cell types.\n\n### More specific phenotypes are associated with fewer genes and cell types\n\nTo explore the relationship between HPO phenotype specificity and various metrics from our results, we computed the information content (IC) scores for each term in the HPO.\nIC is a measure of how much specific information a term within an ontology contains.\nIn general, terms deeper in an ontology (closer to the leaves) are more specific, and thus informative, than terms at the very root of the ontology (e.g. 'Phenotypic abnormality').\nWhere $k$ denotes the number of offspring terms (including the term itself) and $N$ denotes the total number of terms in the ontology, IC can be calculated as:\n\n$$\nIC=-log(\\frac{k}{N})\n$$\n\nNext, IC scores were quantised into 10 bins using the `ceiling` R function to improve visualisation.\nWe then performed a series of linear regressions between phenotype binned IC scores and: 1) number of genes annotated per HPO phenotype, 2) the number of significantly associated cell types per HPO phenotype, and 3) the model estimate of each significant phenotype-cell type associations (at FDR \\< 0.05) after taking the log of the absolute value ($log_2(|estimate|)$).\n\n### Monarch Knowledge Graph recall\n\nFinally, we gathered known phenotype-cell type relationships from the Monarch Knowledge Graph (MKG), a comprehensive database of links between many aspects of disease biology [@Putman2024-et].\nThis currently includes 103 links between HPO phenotypes (n=103) and CL cell types (n=79).\nOf these, we only considered the 82 phenotypes that we were able to test given that our ability to generate associations was dependent on the existence of gene annotations within the HPO.\nWe considered instances where we found a significant relationship between exactly matching pairs of HPO-CL terms as a hit.\n\nHowever, as the cell types in MKG were not necessarily annotated at the same level as our single-cell references, we considered instances where the MKG cell type was an ancestor term of our cell type (e.g. 'myeloid cell' vs. 'monocyte'), or *vice versa*, as hits.\nWe also adjusted ontological distance by computing the ratio between the observed ontological distance and the smallest possible ontological distance for that cell type given the cell type that were available in our references ($dist_{adjusted}=(\\frac{dist_{observed}+1}{dist_{minimum}+1})-1$).\nThis provides a way of accurately measuring how dissimilar our identified cell types were for each phenotype-cell type association ([Fig. @fig-monarch-recall]).\n\n### Prioritising phenotypes based on severity\n\n\n\n\n\n```{.r .cell-code .hidden}\ngpt_codes <- formals(HPOExplorer::gpt_annot_codify)\ncode_dict <- paste0(shQuote(names(eval(gpt_codes$code_dict))),\"=\",\n                     eval(gpt_codes$code_dict), collapse = \", \")\nweights_dict <- paste0(shQuote(names(eval(gpt_codes$weights_dict))),\"=\",\n                     eval(gpt_codes$weights_dict), collapse = \", \") \n```\n\n\n\n\n\nOnly a small fraction of the the phenotypes in HPO (\\<1%) have metadata annotations containing information on their time course, consequences, and severity.\nThis is due to the time-consuming nature of manually annotating thousands of phenotypes.\nTo generate such annotations at scale, we previously used Generative Pre-trained Transformer 4 (GPT-4), a large language model (LLM) as implemented within OpenAI's Application Programming Interface (API) [@murphyHarnessingGenerativeAI2024].\nAfter extensive prompt engineering and ground-truth benchmarking, we were able to acquire annotations on how often each phenotype directly causes intellectual disability, death, impaired mobility, physical malformations, blindness, sensory impairments, immunodeficiency, cancer, reduced fertility, or is associated with a congenital onset.\nThese criteria were previously defined in surveys of medical experts as a means of systematically assessing phenotype severity [@Lazarin2014-we].\nResponses for each metric were provided in a consistent one-word format which could be one of: 'never', 'rarely', 'often', 'always'.\nThis procedure was repeated in batches (to avoid exceeding token limits) until annotations were gathered for 16,982/18,082 HPO phenotypes.\n\nWe then encoded these responses into a semi-quantitative scoring system ('never'=0, 'rarely'=1, 'often'=2, 'always'=3), which were then weighted by multiplying a semi-subjective scoring of the relevance of each metric to the concept of severity on a scale from $1.0$-$6.0$, with $6.0$ being the most severe ('death'=6, 'intellectual_disability'=5, 'impaired_mobility'=4, 'physical_malformations'=3, 'blindness'=4, 'sensory_impairments'=3, 'immunodeficiency'=3, 'cancer'=3, 'reduced_fertility'=1, 'congenital_onset'=1).\nFinally, the product of the score was normalised to a quantitative severity score ranging from 0-100, where 100 is the theoretical maximum severity score.\nThis phenotype severity scoring procedure can be expressed as follows.\n\nLet us denote:\n\n-   $p$ : a phenotype in the HPO.\n\n-   $j$ : the identity of a given annotation metric (i.e. clinical characteristic, such as 'intellectual disability' or 'congenital onset').\n\n-   $W_j$: the assigned weight of metric $j$.\n\n-   $F_j$: the maximum possible value for metric $j$, equal to 3 (\"always\").\n    This value is equivalent across all $j$ annotations.\n\n-   $F_{pj}$ : the numerically encoded value of annotation metric $j$ for phenotype $p$.\n\n-   $NSS_p$: the final composite severity score for phenotype $p$ after applying normalisation to align values to a 0-100 scale and ensure equivalent meaning regardless of which other phenotypes are being analysed in addition to $p$.\n    This allows for direct comparability of severity scores across studies with different sets of phenotypes.\n\n::: {#eq-gpt .content-hidden unless-format=\"html\"}\n![](equations/eq5.png){height=\"300px\"}\n\n**Computing normalised severity score from encoded GPT-4 annotations.**\n:::\n\n\\\n\\\n\n::: {.content-visible unless-format=\"html\"}\n\\begin{equation*}\n  \\eqnmarkbox[Brown4]{nss}{NSS_p}\n  =\n  \\frac{ \n    \\eqnmarkbox[Goldenrod]{nss2}{\\sum_{j=1}^{m}} \n    (\n      \\eqnmarkbox[Goldenrod4]{nss3}{F_{pj}}\n      \\times \n      \\eqnmarkbox[IndianRed4]{nss4}{W_j}\n    )\n    }{\n    \\eqnmarkbox[Tan]{nss5}{\\sum_{j=1}^{m}(\\max\\{F_j\\} \\times W_j)} \n  } \\times 100\n\\end{equation*} \\annotate[yshift=1em]{left}{nss}{Normalised Severity Score \\\\for each phenotype} \\annotate[yshift=3em]{left}{nss2}{Sum of weighted annotation values \\\\across all metrics} \\annotate[yshift=3em]{right}{nss3}{Numerically encoded annotation value \\\\of metric $j$ for phenotype $p$} \\annotate[yshift=1em]{right}{nss4}{Weight for metric $j$} \\annotate[yshift=-1em]{below,right}{nss5}{Theoretical maximum severity score}\n:::\n\n\\\n\nUsing the numerically encoded GPT annotations (0=\"never\", 1=\"rarely\", 2=\"often\", 3=\"always\") we computed the mean encoded value per cell type within each annotation.\nOne-sided Wilcoxon rank-sum tests were run using the `rstatix::wilcox_test()` function to test whether each cell type was associated with more severe phenotypes relative to all other cell types.\nThis procedure was repeated for severity annotation independently (death, intellectual disability, impaired mobility, etc.) [Fig. @fig-celltype-severity-dot]a.\nNext, we performed a Pearson correlation test between the number of phenotypes that a cell type is significantly associated with (at FDR\\<0.05) has a relationship with the mean composite GPT severity score of those phenotypes ([Fig. @fig-celltype-severity-dot]b).\nThis was performed using the `ggstatsplot::ggscatterstats()` R function.\n\n### Congenital phenotypes are associated with foetal cell types\n\n\n\n\n\n```{.r .cell-code .hidden}\nfetal_keywords <- shQuote(eval(formals(MSTExplorer::plot_congenital_annotations)$fetal_keywords))\n```\n\n\n\n\n\nThe GPT-4 annotations also enabled us to assess whether foetal cell types were more often significantly associated with congenital phenotypes in our Human Cell Landscape results as this single-cell reference contained both adult and foetal versions of cell types ([Fig. @fig-congenital]).\nTo do this, we performed a chi-squared ($\\chi^2$) test on the proportion of significantly associated cell types containing any of the substrings 'fetal', 'fetus', 'primordial', 'hESC' or 'embryonic' (within cell types annotations from the original Human Cell Landscape authors [@Han2020-iq]) vs. those associated without, stratified by how often the corresponding phenotype had a congenital onset according to the GPT phenotype annotations (including 'never', 'rarely', 'often', 'always').\nIn addition, a series of $\\chi^2$ tests were performed within each congenital onset frequency strata, to determine whether the observed proportion of foetal cell types vs. non-foetal cell types significantly deviated from the proportions expected by chance.\n\nWe next tested whether the proportion of tests with significant associations with foetal cell types varied across the major HPO branches using a $\\chi^2$ test.\nWe also performed separate $\\chi^2$ test within each branch to determine whether the proportion of significant associations with foetal cell types was significantly different from chance.\n\nNext, we aimed to create a continuous metric from -1 to 1 that indicated how biased each phenotype is towards associations with the foetal or adult form of a cell type.\nFor each phenotype we calculated the foetal-adult bias score as the difference in the association p-values between the foetal and adult version of the equivalent cell type ($\\text{foetal-adult bias}: p_{adult} - p_{foetal} = \\Delta p \\in [-1,1]$).\nA score of 1 indicates the phenotype is only associated with the foetal version of the cell type and -1 indicates the phenotype is only associated with the adult version of the cell type.\n\nIn order to summarise higher-order HPO phenotype categories that were most biased towards foetal or adult cell types, ontological enrichment tests were run on the phenotypes with the top/bottom 50 greatest/smallest foetal-adult bias scores.\nThe enrichment tests were performed using the `simona::dag_enrich_on_offsprings` function, which uses a hypergeometric test to determine whether a list of terms in an ontology are enriched for offspring terms (descendants) of a given ancestor term within the ontology.\nPhenotypes categories with an HPO ontological enrichment a p-value \\< 0.05 were considered significant.\n\nWe were similarly interested in which higher-order cell type categories tended to be most commonly associated with these strongly foetal-/adult-biased phenotype s.\nAnother set of ontological enrichment tests were run on the cell types associated with the top/bottom 50 phenotypes from the previous analysis.\nThe CL ontology-aligned IDs for each group cell types were fed into the `simona::dag_enrich_on_offsprings` using the CL ontology.\nSignificiantly enriched cell type categories were defined as those with a CL ontological enrichment p-value \\< 0.05.\n\n### Therapeutic target identification\n\nWe developed a systematic and automated strategy for identifying putative cell type-specific gene targets for each phenotype based on a series of filters at phenotype, cell type, and gene levels.\n\nFirst, we transformed our phenotype-cell type association results and merged them with primary data sources (e.g. GenCC gene-disease relationships, scRNA-seq atlas datasets) to create a large table of multi-scale relationships, where each row represented a tetrad of disease-phenotype-cell type-gene relationships.\nWe then filtered non-significant phenotype-cell type relationships (only associations with $FDR<0.05$) as well as phenotype-gene relationships with strong causal evidence ($\\text{GenCC score}>3$).\nWe also removed any phenotypes that were too broad to be clinically useful, as quantified using the information content (IC) ($IC>8$), which measures the how specific each term is within an ontology (i.e. HPO).\nGene-cell type relationships were established by taking genes that had the top 25% expression specificity quantiles within each cell type.\nWhen connecting cell types to diseases via phenotypes, we used a symptom intersection threshold of \\>.25.\nNext, we sorted the remaining results in descending order of phenotype severity using the GPT4 composite severity scores described earlier.\nFinally, to limit the size of the resulting multi-scale networks we took only the top 10 rows, where each row represented a tetrad of disease-phenotype-cell type-gene relationships.\nThis resulted in number of relatively small, high-confidence disease-phenotype-cell type-gene networks that could be reasonably interrogated through manual inspection and network visualisation.\nFor example, if one was interested in the mechanisms causing 'Recurrent Neisserial infections', one would need only select all rows that include this phenotype to find all of its most relevant connection to diseases, cell types, and genes.\n\nThe entire target prioritisation procedure can be replicated with a single function: `MSTExplorer::prioritise_targets`.\nThis function automates all of the reference data gathering (e.g. phenotype metadata, cell type metadata, cell type signature reference, gene lengths, severity tiers) and takes a variety of arguments at each step for greater customisability.\nEach step is described in detail in @tbl-filters.\nPhenotypes that often or always caused physical malformations (according to the GPT-4 annotations) were also removed from the final prioritised targets list, as these were unlikely to be amenable to gene therapy interventions.\nFinally, phenotypes were sorted by their composite severity scores such that the most severe phenotypes were ranked the highest.\n\n### Therapeutic target validation\n\nTo assess whether our prioritised therapeutic targets were likely to be viable, we computed the overlap between our gene targets and those of existing gene therapies at various stages of clinical development ([Fig. @fig-therapy-validate]).\nGene targets were obtained for each therapy from the Therapeutic Target Database (TTD; release 2025-08-10) and mapped onto standardised HUGO Gene Nomenclature Committee (HGNC) gene symbols using the `orthogene` R package.\nWe stratified our overlap metrics according to whether the therapies had failed (unsuccessful clinical trials or withdrawn), or were non-failed (successful or ongoing clinical trials).\nWe then conducted hypergeometric tests to determine whether the observed overlap between our prioritised targets and the non-failed therapy targets was significantly greater than expected by chance (i.e. enrichment).\nWe also conducted a second hypergeometric test to determine whether the observed overlap between our prioritised targets and the failed therapy targets was significantly less than expected by chance (i.e. depletion).\nFinally, we repeated the analysis against all therapeutic targets, not just those of gene therapies, to determine whether our prioritised targets had relevance to other therapeutic modalities.\n\n### Experimental model translatability\n\nTo improve the likelihood of successful translation between preclinical animal models and human patients, we created an interspecies translatability prediction tool for each phenotype nominated by our gene therapy prioritised pipeline ([Supp. Fig. @fig-animal-models]).\nFirst, we extracted ontological similarity scores of homologous phenotypes across species from the MKG [@Putman2024-et].\nBriefly, the ontological similarity scores ($SIM_o$) are computed for each homologous pair of phenotypes across two ontologies by calculating the overlap in homologous phenotypes that are ancestors or descendants of the target phenotype.\nNext, we generated genotypic similarity scores ($SIM_g$) for each homologous phenotype pair by computing the proportion of 1:1 orthologous genes using gene annotation from their respective ontologies.\nInterspecies orthologs were also obtained from the MKG.\nFinally, both scores are multiplied together to yield a unified ontological-genotypic similarity score ($SIM_{og}$).\n\n### Novel R packages\n\nTo facilitate all analyses described in this study and to make them more easily reproducible by others, we created several open-source R packages.\n[`KGExplorer`](https://github.com/neurogenomics/KGExplorer) imports and analyses large-scale biomedical knowledge graphs and ontologies.\n[`HPOExplorer`](https://github.com/neurogenomics/HPOExplorer) aids in managing and querying the directed acyclic ontology graph within the HPO.\n[`MSTExplorer`](https://github.com/neurogenomics/MSTExplorer) facilitates the efficient analysis of many thousands of phenotype-cell type association tests, and provides a suite of multi-scale therapeutic target prioritisation and visualisation functions.\nThese R packages also include various functions for distributing the post-processed results from this study in an organised, tabular format.\nOf note, `MSTExplorer::load_example_results` loads all summary statistics from our phenotype-cell type tests performed here.\n\n### Rare Disease Celltyping Portal\n\nTo further increase the ease of access for stakeholders in the RD community without the need for programmatic experience, we developed a series of web apps to interactively explore, visualise, and download the results from our study.\nCollectively, these web apps are called the Rare Disease Celltyping Portal.\nThe website can be accessed at <https://neurogenomics-ukdri.dsi.ic.ac.uk/>.\n\nThe Rare Disease Celltyping Portal integrates diverse datasets, including the HPO, cell types, genes, and phenotype severity, into a unified platform that allows users to perform flexible, bidirectional queries.\nUsers can start from any entry point: either phenotype, cell type, genes, or severity, and seamlessly trace relationships across these dimensions.\n\nThe portal provides a dynamic and intuitive exploration experience with its real-time interaction capabilities and responsive interface including network graphs, bar charts, and heat maps.\nIt has the ability to handle large datasets efficiently and offer fast query response by building with FARM stack (FastAPI, React, MongoDB).\nThe portal is designed for a broad audience, including researchers, clinicians, and biologists, by offering user-friendly navigation and interactive visual outputs.\nBy enabling users to intuitively explore complex biological relationships, the portal aims to accelerate rare disease research, enhance diagnostic accuracy, and drive therapeutic innovation.\n\nAll code used to generate the website can be found at <https://github.com/neurogenomics/Rare-Disease-Web-Portal>.\n\n### Mappings\n\nMappings from the HPO to other medical ontologies were extracted from the EMBL-EBI Ontology Xref Service (OxO; <https://www.ebi.ac.uk/spot/oxo/>) by selecting the National Cancer Institute metathesaurus (NCIm) as the target ontology and either \"SNOMED CT\", \"UMLS\", \"ICD-9\" or \"ICD-10CM\" as the data source.\nHPO terms were then selected as the ID framework with to mediate the cross-ontology mappings.\nMappings between each pair of ontologies were then downloaded, stored in a tabular format.\nThe mappings files can be accessed with the function `HPOExplorer::get_mappings` or directly via the `HPOExplorer` Releases page on GitHub (<https://github.com/neurogenomics/HPOExplorer/releases/tag/latest>).\n\n\n## Data Availability\n\nAll data is publicly available through the following resources:\n\n-   Human Phenotype Ontology (<https://hpo.jax.org>)\n-   GenCC (<https://thegencc.org/>)\n-   Descartes Human scRNA-seq atlas (<https://cellxgene.cziscience.com/collections/c114c20f-1ef4-49a5-9c2e-d965787fb90c>)\n-   Human Cell Landscape scRNA-seq atlas (<https://cellxgene.cziscience.com/collections/38833785-fac5-48fd-944a-0f62a4c23ed1>)\n-   Processed Cell Type Datasets (*ctd_DescartesHuman.rds* and *ctd_HumanCellLandscape.rds*; <https://github.com/neurogenomics/MSTExplorer/releases>)\n-   Gene x Phenotype association matrix (*hpo_matrix.rds*; <https://github.com/neurogenomics/MSTExplorer/releases>)\n-   GPT-4 phenotype severity annotations (<https://github.com/neurogenomics/rare_disease_celltyping/releases/download/latest/gpt_check_annot.csv.gz>)\n-   Full phenotype-cell type association test results <https://github.com/neurogenomics/MSTExplorer/releases/download/v0.1.10/phenomix_results.tsv.gz>\n-   Rare Disease Celltyping Portal (<https://neurogenomics-ukdri.dsi.ic.ac.uk/>)\n\n## Code Availability\n\nAll code is made freely available through the following GitHub repositories:\n\n-   `KGExplorer` (<https://github.com/neurogenomics/KGExplorer>)\n-   `HPOExplorer` (<https://github.com/neurogenomics/HPOExplorer>)\n-   `MSTExplorer` (<https://github.com/neurogenomics/MSTExplorer>)\n-   Code to replicate analyses (<https://github.com/neurogenomics/rare_disease_celltyping>)\n-   Cell type-specific gene target prioritisation (<https://neurogenomics.github.io/RareDiseasePrioritisation/reports/prioritise_targets>)\n-   Complement system gene list (<https://www.genenames.org/data/genegroup/#!/group/492>)\n\n## Acknowledgements\n\nWe would like to thank the following individuals for their insightful feedback and assistance with data resources: Sarah J. Marzi, Gerton Lunter, Peter Robinson, Melissa Haendel, Ben Coleman, Nico Matentzoglu, Shawn T. O'Neil, Alan E. Murphy, Sarada Gurung.\n\n### Funding\n\nThis work was supported by a UK Dementia Research Institute (UK DRI) Future Leaders Fellowship \\[MR/T04327X/1\\] and the UK DRI which receives its funding from UK DRI Ltd, funded by the UK Medical Research Council, Alzheimer's Society and Alzheimer's Research UK.\n\n## References {.unnumbered}\n\n::: {#refs}\n:::\n\n\\\n\n\\newpage\n\n## Supplementary Materials\n\n### Supplementary Results\n\n#### Congenital phenotypes are associated with foetal cell types\n\nTo test whether some cell types tend to show strong differences in their phenotype associations between their foetal and adult forms.\nTo test this, we performed an analogous enrichment procedure as with the phenotypes, except using Cell Ontology terms and the Cell Ontology graph.\nThis analysis identified the cell type category connective tissue cell (p=$1.8 \\times 10^{-3}$, $log_2(\\text{fold-change})$=$3.2$) as the most foetal-biased cell type.\nNo cell type categories were significantly enriched for the most adult-biased cell types.\nThis is likely due to the fact that cell types can be disrupted at different stages of life, resulting in different phenotypes.\nThus there the same cell types may be involved in both the most foetal-biased and adult-biased phenotypes.\n\n#### Phenome-wide analyses discover novel phenotype-cell type associations\n\nWe visualised the putative causal relationships between genes, cell types and diseases associated with RNI as a network ([Fig. @fig-network-rni]).\nThe phenotype 'Recurrent Neisserial infections' was connected to cell types through the aforementioned association test results (FDR\\<0.05).\nGenes that were primarily driving these associations (i.e. genes that were both strongly linked with 'Recurrent Neisserial infections' and were highly specifically expressed in the given cell type) were designated as \"driver genes\" and retained for plotting.\nAcross all phenotypes in the HPO, more specific phenotypes (terms in the HPO with greater IC) are not only more specific to certain cell types ([Fig. @fig-ontology-lvl]b), but are also associated with genes that have greater cell type-specific expression within those cell types.\nEven so, we should note that the choice of which specificity quantiles to include is arbitrary.\nIt should also be noted that simply because a gene is not specific to a cell type does not mean it is not important for the function of the cell type.\nIndeed, there are many genes that are ubiquitously expressed throughout many tissues in the body and are essential for cell function.\nGene expression specificity is nevertheless a useful metric to help distinguish many hundreds of cell (sub)types with overlapping gene signatures.\n\n#### Selected example targets\n\nFrom our prioritised targets, we selected the following four sets of phenotypes or diseases as examples: 'GM2-ganglioside accumulation', 'Spinocerebellar atrophy', 'Neuronal loss in central nervous system'.\nOnly phenotypes with a GPT severity score greater than $15$ were considered to avoid overplotting and to focus on the more clinically relevant phenotypes [Fig. @fig-therapy-examples]a-h.\nThese examples were then selected partly on the basis of severity rankings, and partly for their relatively smaller, simpler networks than lent themselves to compact visualisations.\n\nTay-Sachs disease (TSD) is a devastating hereditary condition in which children are born appearing healthy, which gradually degrades leading to death after 3-5 years.\nThe underlying cause is the toxic accumulation of gangliosides in the nervous system due to a loss of the enzyme produced by *HEXA*.\nWhile this could in theory be corrected with gene editing technologies, there remain some outstanding challenges.\nOne of which is identifying which cell types should be targeted to ensure the most effective treatments.\nHere we identified alternatively activated macrophages as the cell type most strongly associated with 'GM2-ganglioside accumulation' [Fig. @fig-therapy-examples]i.\nThe role of aberrant macrophage activity in the regulation of ganglioside levels is supported by observation that gangliosides accumulate within macrophages in TSD [@fendersonChapterDevelopmentalGenetic2009], as well as experimental evidence in rodent models [@vilcaesGangliosideSynthesisPlasma2020.; @yoheGangliosideAlterationsStimulated1985; @demirGM2GangliosideAccumulation2020].\nOur results not only corroborate these findings, but propose macrophages as the primary causal cell type in TSD, making it the most promising cell type to target in therapies.\n\nAnother challenge in TSD is early detection and diagnosis, before irreversible damage has occurred.\nOur pipeline implicated extravillous trophoblasts of the placenta in 'GM2-ganglioside accumulation'.\nWhile not necessarily a target for gene therapy (as the child is detached from the placenta after birth), checking these cells *in utero* for an absence of *HEXA* may serve as a viable biomarker as these cells normally express the gene at high levels.\nEarly detection of TSD may lengthen the window of opportunity for therapeutic intervention [@solovyevaNewApproachesTaySachs2018], especially when genetic sequencing is not available or variants of unknown significance are found within *HEXA* [@hoffmanNextgenerationDNASequencing2013].\n\nSpinocerebellar atrophy is a debilitating and lethal phenotype that occurs in diseases such as Spinocerebellar ataxia and Boucher-Nenhauser syndrome.\nThese diseases are characterised by progressive degeneration of the cerebellum and spinal cord, leading to severe motor and cognitive impairments.\nOur pipeline identified M2 macrophages (labeled as the closest CL term 'Alternatively activated macrophages' in [Fig. @fig-therapy-examples]j) as the only causal cell type associated with 'Spinocerebellar atrophy'.\nThis strongly suggests that degeneration of cerebellar Purkinje cells are in fact downstream consequences of macrophage dysfunction, rather than being the primary cause themselves.\nThis is consistent with the known role of macrophages, especially microglia, in neuroinflammation and other neurodegenerative conditions such as Alzheimer's and Parkinsons' disease [@ferroRoleMicrogliaAtaxias2019; @holMicroglialTranscriptomicsMeets2022; @lopesAtlasGeneticEffects2020a].\nWhile experimental and postmortem observational studies have implicated microglia in spinocerebellar atrophy previously [@ferroRoleMicrogliaAtaxias2019], our results provide a statistically-supported and unbiased genetic link between known risk genes and this cell type.\nTherefore, targeting M2 microglia in the treatment of spinocerebellar atrophy may therefore represent a promising therapeutic strategy.\nThis is aided by the fact that there are mouse models that perturb the ortholog of human spinocerebellar atrophy risk genes (e.g. [*Atxn1*](https://www.informatics.jax.org/marker/MGI:104783), [*Pnpla6*](https://www.informatics.jax.org/marker/MGI:1354723)) and reliably recapitulate the effects of this diseases at the cellular (e.g. loss of Purkinje cells), morphological (e.g. atrophy of the cerebellum, spinal cord, and muscles), and functional (e.g. ataxia) levels.\n\nNext, we investigated the phenotype 'Neuronal loss in the central nervous system'.\nDespite the fact that this is a fairly broad phenotype, we found that it was only significantly associated with 3 cell types (alternatively activated macrophage, macrophage, epithelial cell), specifically M2 macrophages and sinusoidal endothelial cells [Fig. @fig-therapy-examples]k.\n\nSkeletal dysplasia is a heterogeneous group of over 450 disorders that affect the growth and development of bone and cartilage.\nThis phenotype can be lethal when deficient bone growth leads to the constriction of vital organs such as the lungs.\nEven after surgical interventions, these complications continue to arise as the child develops.\nPharmacological interventions to treat this condition have largely been ineffective.\nWhile there are various cell types involved in skeletal system development, our pipeline nominated chondrocytes as the causal cell type underlying the lethal form of this condition ([Fig. @fig-therapy-examples-supp]).\nAssuringly, we found that the disease 'Achondrogenesis Type 1B' is caused by the genes *SLC26A2* and *COL2A1* via chondrocytes.\nWe also found that 'Platyspondylic lethal skeletal dysplasia, Torrance type'.\nThus, in cases where surgical intervention is insufficient, targeting these genes within chondrocytes may prove a viable long-term solution for children suffering from lethal skeletal dysplasia.\n\nAlzheimer's disease (AD) is the most common neurodegenerative condition.\nIt is characterised by a set of variably penetrant phenotypes including memory loss, cognitive decline, and cerebral proteinopathy.\nInterestingly, we found that different forms of early onset AD (which are defined by the presence of a specific disease gene) are each associated with different cell types via different phenotypes ([Fig. @fig-therapy-examples-supp]).\nFor example, AD 3 and AD 4 are primarily associated with cells of the digestive system ('enterocyte', 'gastric goblet cell') and are implied to be responsible for the phenotypes 'Senile plaques', 'Alzheimer disease', 'Parietal hypometabolism in FDG PET'.\nMeanwhile, AD 2 is primarily associated with immune cells ('alternatively activated macrophage') and is implied to be responsible for the phenotypes 'Neurofibrillary tangles', 'Long-tract signs'.\nThis suggests that different forms of AD may be driven by different cell types and phenotypes, which may help to explain its variability in onset and clinical presentation.\n\nFinally, Parkinson's disease (PD) is characterised by motor symptoms such as tremor, rigidity, and bradykinesia.\nHowever there are a number of additional phenotypes associated with the disease that span multiple physiological systems.\nPD 19a and PD 8 seemed to align most closely with the canonical understanding of PD as a disease of the central nervous system in that they implicated oligodendrocytes and neurons ([Fig. @fig-therapy-examples-supp]).\nThough the reference datasets being used in this study were not annotated at sufficient resolution to distinguish between different subtypes of neurons, in particular dopaminergic neurons.\nPD 19a/8 also suggested that risk variants in *LRRK2* mediate their effects on PD through both myeloid cells and oligodendrocytes by causing gliosis of the substantia nigra.\nThe remaining clusters of PD mechanisms revolved around chondrocytes (PD 20), amacrine cells of the eye (hereditary late-onset PD), and the respiratory/immune system (PD 14).\nWhile the diversity in cell type-specific mechanisms is somewhat surprising, it may help to explain the wide variety of cross-system phenotypes frequently observed in PD.\n\nIt should be noted that the HPO only includes gene annotations for the monogenic forms of AD and PD.\nHowever it has previously been shown that there is at least partial overlap in their phenotypic and genetic aetiology with respect to their common forms.\nThus understanding the monogenic forms of these diseases may shed light onto their more common counterparts.\n\n### Experimental model translatability\n\n\n\n\n\n```{.r .cell-code .hidden}\npheno_map_genes_match <- KGExplorer::map_upheno_data(pheno_map_method = \"upheno\", \n                                                     force_new = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached data: /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/pheno_map_genes_match.rds\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\npheno_map_targets <- pheno_map_genes_match[\n  id1 %in% unique(prioritise_targets_out$top_targets$hpo_id)\n  ]|>\n  data.table::setorderv(\"phenotype_genotype_score\",-1)\ntaxa_count <- sort(table(pheno_map_targets$gene_taxon_label2), decreasing = TRUE)\n\npheno_map_targets_severe <- pheno_map_targets[\n  id1 %in% unique(prioritise_targets_out$top_targets[severity_score_gpt>10,]$hpo_id)\n  ]\n\npheno_map_targets_severe[,summary:=paste0(\n  shQuote(object_label1),  \n  \" ($SIM_{og}=\",round(phenotype_genotype_score,options()$digits),\"$)\"\n  )] \n```\n\n\n\n\n\nWe computed interspecies translatability scores using a combination of both ontological ($SIM_{o}$) and genotypic ($SIM_{g}$) similarity relative to each homologous human phenotype and its associated genes [Supp. Fig. @fig-animal-models].\nIn total, we mapped 1,221 non-human phenotypes (in *Caenorhabditis elegans*, *Danio rerio*, *Mus musculus*, *Rattus norvegicus*) to 3,319 homologous human phenotypes.\nAmongst the 5,252 phenotype within our prioritised therapy targets, 1,788 had viable animal models in at least on non-human species.\nPer species, the number of homologous phenotypes was: *Mus musculus* (n=1705), *Danio rerio* (n=244), *Rattus norvegicus* (n=85), *Caenorhabditis elegans* (n=23).\nAmongst our prioritised targets with a GPT-4 severity score of \\>10, the phenotypes with the greatest animal model similarity were \"Rudimentary to absent tibiae\" ($SIM_{og}=1$), \"Hypoglutaminemia\" ($SIM_{og}=1$), \"Bilateral ulnar hypoplasia\" ($SIM_{og}=0.99$), \"Disproportionate shortening of the tibia\" ($SIM_{og}=0.99$), \"Acrobrachycephaly\" ($SIM_{og}=0.98$).\n\n### Supplementary Figures\n\n::: {#fig-evidence-histograms .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nevidence_plot <- HPOExplorer::plot_evidence(phenotype_to_genes = p2g,\n                                            show_plot = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAnnotating gene-disease associations with Evidence Score\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nConstructing HPO gene x phenotype matrix.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAnnotating gene-disease associations with Evidence Score\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nevidence_plot$plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![__Distribution of GenCC evidence scores at each processing step.__ GenCCC (<https://thegencc.org/>) is a database where semi-quantitative scores for the current strength of evidence attributing disruption of a gene as a causal factor in a given disease. \"gcc_disease_raw\" is the distribution of raw GenCC scores before any aggregation. \"gcc_disease_agg\" is the distribution of GenCC scores after aggregating by disease. \"gcc_phenotype\" is the distribution of scores after linking each phenotype to one or more disease. \"gcc_phenotype_agg\" is the distribution of scores after aggregating by phenotype, while \"gcc_phenotype_agg_sd\" is the standard deviation of those aggregated scores.](index_files/figure-pdf/fig-evidence-histograms-1.pdf){#fig-evidence-histogramsD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n::: {#fig-diagram}\n![](img/fig-diagram.png)\n\n__Diagrammatic overview of multi-scale disease investigation strategy.__\nHere we provide an abstract example of differential disease aetiology across multiple scales: diseases ($D$), phenotypes ($P$), cell types ($C$), genes ($G$), and clinical outcomes ($O$).\nIn the HPO, genes are assigned to phenotypes via particular diseases ($G_{dp}$).\nTherefore, the final gene list for each phenotype is aggregated from across multiple diseases ($G_{p}$).\nWe performed association tests for all pairwise combinations of cell types and phenotypes and filtered results after multiple testing corrections (FDR\\<0.05).\nEach phenotype in the context of a given disease is referred to here as a symptom.\nLinks were established between symptoms and cell types through proportional gene set overlap at a minimum threshold of 25%.\n:::\n\n\\newpage\n\n::: {#fig-ctd-correlation .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\n(\n  (validate_associations_correlate_ctd_out$plot$p.all |\n validate_associations_correlate_ctd_out$plot$logFC.significant) /\n  (validate_associations_correlate_ctd_out_hcl$plot$p.all |\n  validate_associations_correlate_ctd_out_hcl$plot$logFC.significant)\n) +\n  patchwork::plot_annotation(tag_levels = letters)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![__Inter- and intra-dataset validation across the different CellTypeDataset (CTD) and developmental stages.__ Correlations are computed using Pearson correlation coefficient. Point density is plotted using a 2D kernel density estimate. **a** Correlation between the uncorrected p-values from all phenotype-cell type association tests using the Descartes Human vs. Human Cell Landscape CTDs. **b** Correlation between the $log_{10}(fold-change)$ from significant phenotype-cell type association tests (FDR<0.05) using the Descartes Human vs. Human Cell Landscape CTDs. **c** Correlation between the uncorrected p-values from all phenotype-cell type association tests using the Human Cell Landscape fetal samples vs. Human Cell Landscape adult samples. **d** Correlation between the $log_{10}(fold-change)$ from significant phenotype-cell type association tests (FDR<0.05) using the Human Cell Landscape fetal samples vs. Human Cell Landscape adult samples.](index_files/figure-pdf/fig-ctd-correlation-1.pdf){#fig-ctd-correlationD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-monarch-recall .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nvalidate_associations_mkg_out$cl_distance_results$plot\n```\n\n::: {.cell-output-display}\n![__Recall of ground-truth Monarch Knowledge Graph phenotype-cell type relationships at each ontological distance between cell types according to the Cell Ontology.__](index_files/figure-pdf/fig-monarch-recall-1.pdf){#fig-monarch-recallD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-celltype-severity-bar .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nplot_celltype_severity_out$bar$plot +\n  patchwork::plot_annotation(tag_levels = \"a\") \n```\n\n::: {.cell-output-display}\n![__Cell types ordered by the mean severity of the phenotypes they're associated with.__ **a**, The disribution of phenotype severity annotation frequencies aggregated by cell type. **b**, The composite severity score, averaged across all phenotypes associated with each cell type.](index_files/figure-pdf/fig-celltype-severity-bar-1.pdf){#fig-celltype-severity-barD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-network-rni .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nif(knitr::is_html_output()){\n  knitr::opts_current$set(results=\"asis\")\n  vn_rni$plot\n  prioritise_targets_multiheatmap_out$plot\n} else { \n  # Read the image\n  img <- magick::image_read(here::here(\"manuscript/img/fig-rni.png\"), \n                            density = 400)\n  img_grob <- grid::rasterGrob(img, interpolate = TRUE)\n  \n  # Create a ggplot with the image as a background\n  img_plot <- ggplot2::ggplot() +\n    ggplot2::annotation_custom(img_grob, xmin = -Inf, xmax = Inf, \n                      ymin = -Inf, ymax = Inf) +\n    ggplot2::theme_void()\n  \n  fig_network_rni <- patchwork::wrap_plots(\n    img_plot,\n    prioritise_targets_multiheatmap_out$plot,\n    ncol = 1,\n    heights = c(1, .6)\n  ) + \n    patchwork::plot_annotation(tag_levels = \"a\") & \n    ggplot2::theme(plot.margin = ggplot2::margin(),\n                   plot.tag = ggplot2::element_text(size = 12)) # works now\n  fig_network_rni\n  # ggplot2::ggsave(\"~/Downloads/fig_network_rni.png\", fig_network_rni, dpi = 400, height = 8, width = 8)\n} \n```\n\n::: {.cell-output-display}\n![__Causal network of recurrent Neisserial infections (RNI) reveals multi-scale disease aetiology.__ RNI is a phenotype in seven different monogenic diseases caused by disruptions to specific complement system genes. Four cell types were significantly associated with RNI. **a**, One can trace how genes causal for RNI (yellow boxes, bottom) mediate their effects through cell types (orange circles, middle) and diseases (blue cylinders, top). Cell types are connected to RNI via association testing (FDR\\<0.05). Genes shown here have both strong evidence for a causal role in RNI and high expression specificity in the associated cell type. Cell types can be linked  to monogenic diseases via the genes specifically expressed in those cell types (i.e. are in the top 25\\% of cell type specificity expression quantiles). Nodes are arranged using the Sugiyama algorithm [@Sugiyama1981-ev]. **b** Expression specificity quantiles (1-40 scale) of each driver gene in each cell type (darker = greater specificity). **c** GenCC-derived eevidence scores between the RNI phenotype and each gene. **d** Expression specificity (0 = least specific, 1 = most specific) of each gene in each cell type.](index_files/figure-pdf/fig-network-rni-1.pdf){#fig-network-rniD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-therapy-filter .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nplot_report_out$plot\n```\n\n::: {.cell-output-display}\n![__Prioritised target filtering steps.__ This plot visualises the number of unique phenotype-cell type associations, cell types, genes, and phenotypes (*y-axis*) at each filtering step (*x-axis*) within the multi-scale therapeutic target prioritisation pipeline. Each step in the pipeline can be easily adjusted according to user preference and use case. See @tbl-filters for descriptions and criterion of each filtering step.](index_files/figure-pdf/fig-therapy-filter-1.pdf){#fig-therapy-filterD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-therapy-validate-all .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nttd_check_all_out$plot\n```\n\n::: {.cell-output-display}\n![__Validation of prioritised therapeutic targets.__ Proportion of existing all therapy targets (documented in the Therapeutic Target Database) recapitulated by our prioritisation pipeline.](index_files/figure-pdf/fig-therapy-validate-all-1.pdf){#fig-therapy-validate-allD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-animal-models .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nlibrary(ggplot2) # <-- Necessary due to bug in one of the plotting dependencies (tidyquant::scale_fill_tq) \nupheno <- KGExplorer::get_ontology(name=\"upheno\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\\ iterating 12 done (5.9/s) | 2s\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n\\ iterating 14 done (6.1/s) | 2.3s\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file: /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/upheno.rds\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ntop_ids <- unique(prioritise_targets_out$top_targets$hpo_id)[seq(200)]\nplot_upheno_out <- KGExplorer::plot_upheno(\n  pheno_map_genes_match = pheno_map_genes_match, \n  filters=list(id1=top_ids),\n  types=c(\"heatmap\"),\n  name=\"Phenotype-\\ngenotype\\nsimilarity\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nFiltered 'id1' : 3,774 / 3,861 rows dropped.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n3 / 4 species remain after filtering by `subset_db1`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating UPHENO heatmap.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding ancestor metadata.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file: /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/upheno.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAncestor metadata already present. Use force_new=TRUE to overwrite.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nplot_upheno_out$heatmap\n```\n\n::: {.cell-output-display}\n![__Identification of translatable experimental models.__ Interspecies translatability of the top 200 human phenotypes nominated by the gene therapy prioritised pipeline. Above, the combined ontological-genotypic similarity score ($SIM_{og}$) is displayed as the heatmap fill colour stratified by the model organism (*x-axis*). An additional column (\"n_genes_db1\" on the far left) displays the total number of unique genes annotated to the phenotypic within the HPO. Phenotypes are clustered according to their ontological similarity in the HPO (*y-axis*).](index_files/figure-pdf/fig-animal-models-1.pdf){#fig-animal-modelsD08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n::: {#fig-therapy-examples2 .hide-subcaptions}\n\n\n\n\n```{.r .cell-code .hidden}\nimg_paths <- stats::setNames(\n   here::here(\n     \"manuscript\",\n     \"img\",\"fig-therapy-examples\",\n  c(\"tay-sachs.png\",\n    \"spinocerebellar-atrophy.png\",\n    \"neuronal-loss.png\")),\n   c(\"GM2-ganglioside accumulation\",\n     \"Spinocerebellar atrophy\",\n     \"Neuronal loss in central nervous system\")\n )\n fig_networks <- lapply(img_paths, function(x){\n   i = which(x==img_paths)\n   magick::image_read(x, density=300)|>magick::image_ggplot(interpolate=TRUE) +\n   ggplot2::theme_void() +\n   ggplot2::labs(subtitle=names(img_paths)[i]) +\n   ggplot2::theme(plot.margin = ggplot2::unit(c(0,0,0,0),\"pt\"),\n                  panel.background = ggplot2::element_rect(fill = \"grey50\"))\n })\n \n{design <- \"AB\n           CC\"\n patchwork::wrap_plots(fig_networks, ncol = 1, \n                       design=design, heights = c(.75, 1)) +\n   patchwork::plot_annotation(tag_levels = \"a\")  \n}\n```\n\n::: {.cell-output-display}\n![__Causal multi-scale networks reveal cell type-specific therapeutic targets.__ Each disease (blue cylinders) is connected to its phenotype (purple cylinders) based on well-established clinical observations recorded within the HPO [@Gargano2024-fc]. Phenotypes are connected to cell types (orange circles) via association testing between weighted gene sets (FDR<0.05). Each cell type is connected to the prioritised gene targets (yellow boxes) based on the driver gene analysis.The thickness of the edges connecting the nodes represent the (mean) fold-change from the bootstrapped enrichment tests. Nodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].](index_files/figure-pdf/fig-therapy-examples2-1.pdf){#fig-therapy-examples2D08295A6-16DC-499D-85A8-8BA656E013A2 fig-pos='H'}\n:::\n\n\n\n\n:::\n\n\\newpage\n\n\n\n\n\n```{.r .cell-code .hidden}\nheight <- \"100vh\"\nseverity_score_gpt_threshold <- 15\ntop_targets <- prioritise_targets_out$top_targets[severity_score_gpt>severity_score_gpt_threshold]\nphenotypes <- c(\"respiratory failure\", \n                \"amyotrophic lateral sclerosis\", \n                \"dementia\",\n                \"lethal skeletal dysplasia\",\n                \"small vessel disease\",\n                \"Alzheimer disease\",\n                \"Parkinson disease\")\nvn_therapy <- lapply(stats::setNames(phenotypes,phenotypes), function(phenotype){\n  # cat(\"\\nPreparing\",phenotype,\"\\n\")\n  MSTExplorer::prioritise_targets_network(\n    top_targets = top_targets[grepl(paste(phenotype,collapse = \"|\"), hpo_name,ignore.case = TRUE)|\n                              grepl(paste(phenotype,collapse = \"|\"), disease_name,ignore.case = TRUE)],\n    main = phenotype, \n    height = height,\n    submain = NULL)$plot\n}) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d92df4eebc_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d918dedf7c_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d97d5ff7bc_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d92d1ea521_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d9ac846b8_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d925cb57dc_prioritise_targets_network.html\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nlogFC already exists in results. Use `force_new=TRUE` to overwrite.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCell type columns already present. Skipping mapping.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating network.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nMaking hoverboxes from: 'node', 'node_type', 'effect', 'q', 'CellType', 'ancestor_name', 'disease_id', 'ontLvl', 'definition', 'hpo_name', 'hpo_id', 'disease_name', 'shape', 'name'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nAdding hoverboxes to data.table.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nCreating visNetwork plot.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n'title' column already exists. Skipping hoverbox creation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing palette: kovesi.linear_bmy_10_95_c78\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nWarning in\nvisNetwork::visOptions(visNetwork::visInteraction(visNetwork::visEdges(visNetwork::visNodes(visNetwork::visPhysics(visNetwork::visIgraphLayout(visNetwork::toVisNetworkData(g)\n%>% : Can't find 'name' in node data.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nSaving plot --> /var/folders/x7/97p7bsjj3tg3y7vvq_mwjggc0000gn/T//RtmpJW0lgg/file181d95d363a75_prioritise_targets_network.html\n```\n\n\n:::\n\n\n\n\n\n::: {#fig-therapy-examples-supp .content-visible unless-format=\"html\"}\n![Respiratory failure](img/fig-therapy-examples-supp/respiratory_failure.png){#fig-therapy-examples-supp-rf}\n\n**Example cell type-specific gene therapy targets for phenotypes associated with respiratory failure-related diseases.**\nEach disease (blue cylinders) is connected to its phenotype (purple cylinders) based on well-established clinical observations recorded within the HPO [@Gargano2024-fc].Phenotypes are connected to cell types (red circles) via association testing between weighted gene sets (FDR\\<0.05).\nEach cell type is connected to the prioritised gene targets (yellow boxes) based on the driver gene analysis.The thickness of the edges connecting the nodes represent the (mean) fold-change from the bootstrapped enrichment tests.\nNodes were spatially arranged using the Sugiyama algorithm [@Sugiyama1981-ev].\n:::\n \n\n\\newpage\n\n![__Causal multi-scale network for dementia phenotypes.__](img/fig-therapy-examples-supp/dementia.png){#fig-therapy-examples-supp-dementia}\n\n\\newpage\n\n![__Causal multi-scale network for the phenotype lethal skeletal dysplasia.__](img/fig-therapy-examples-supp/lethal_skeletal_dysplasia.png){#fig-therapy-examples-supp-lsd}\n\n\\newpage\n\n![__Causal multi-scale network for phenotypes associated with small vessel disease.__](img/fig-therapy-examples-supp/small_vessel_disease.png){#fig-therapy-examples-supp-svd}\n\n\\newpage\n\n![__Causal multi-scale network for phenotypes associated with various subtypes of Parkinson's disease.__](img/fig-therapy-examples-supp/parkinson.png){#fig-therapy-examples-supp-pd}\n\n\\newpage\n\n![__Causal multi-scale network for phenotypes associated with various subtypes of Alzheimer's disease.__](img/fig-therapy-examples-supp/alzheimer.png){#fig-therapy-examples-supp-ad}\n\n\\newpage\n\n![__Causal multi-scale network for phenotypes associated with Amyotrophic Lateral Sclerosis (ALS).__](img/fig-therapy-examples-supp/als.png){#fig-therapy-examples-supp-als}\n\n::: {#fig-therapy-examples-supp-html .content-hidden unless-format=\"html\"}\n\n\n\n\n```{.r .cell-code .hidden}\nvn_therapy\n```\n\n$`respiratory failure`\n\n$`amyotrophic lateral sclerosis`\n\n$dementia\n\n$`lethal skeletal dysplasia`\n\n$`small vessel disease`\n\n$`Alzheimer disease`\n\n$`Parkinson disease`\n\n\n\n\n:::\n\n### Supplementary Tables\n\n::: {#tbl-mappings}\n\n\n\n\n```{.r .cell-code .hidden}\nmaps_agg|> \n  kableExtra::kbl() \n```\n\n::: {.cell-output-display}\n\n\\begin{tabular}[t]{l|r|r|r|r}\n\\hline\nsource & distance & source terms & HPO terms & mappings\\\\\n\\hline\nICD10 & 2 & 25 & 23 & 25\\\\\n\\hline\nICD10 & 3 & 839 & 876 & 1170\\\\\n\\hline\nICD9 & 1 & 21 & 21 & 21\\\\\n\\hline\nICD9 & 2 & 434 & 306 & 462\\\\\n\\hline\nICD9 & 3 & 1052 & 920 & 1816\\\\\n\\hline\nSNOMED & 1 & 4413 & 3483 & 4654\\\\\n\\hline\nSNOMED & 2 & 75 & 21 & 78\\\\\n\\hline\nSNOMED & 3 & 1796 & 833 & 9605\\\\\n\\hline\nUMLS & 1 & 12898 & 11601 & 13049\\\\\n\\hline\nUMLS & 2 & 140 & 113 & 142\\\\\n\\hline\nUMLS & 3 & 1871 & 1204 & 11021\\\\\n\\hline\n\\end{tabular}\n\n\n:::\n\n\n\n\n\n**Mappings between HPO phenotypes and other medical ontologies.**\n\"source\" indicates the medical ontology and \"distance\" indicates the cross-ontology distance.\n\"source terms\" and \"HPO terms\" indicates the number of unique IDs mapped from the source ontology and HPO respectively.\n\"mappings\" is the total number of cross-ontology mappings within a given distance.\nSome IDs may have more than one mapping for a given source due to many-to-many relationships.\n:::\n\n\\newpage\n\n::: {#tbl-summary}\n\n\n\n\n```{.r .cell-code .hidden}\ndata.frame(res_summ$tmerged[,-c(\"ctd\")], \n             row.names = res_summ$tmerged$ctd,\n             check.names = FALSE) |>\n  t() |>\n  kableExtra::kbl(label = NA)\n```\n\n::: {.cell-output-display}\n\n\\begin{tabular}[t]{l|l|l|l}\n\\hline\n  & DescartesHuman & HumanCellLandscape & all\\\\\n\\hline\ntests significant & 19,929 & 26,585 & 46,514\\\\\n\\hline\ntests & 848,078 & 1,358,916 & 2,206,994\\\\\n\\hline\ntests significant (\\%) & 2.35 & 1.96 & 2.11\\\\\n\\hline\ncell types significant & 77 & 124 & 201\\\\\n\\hline\ncell types & 77 & 124 & 201\\\\\n\\hline\ncell types significant (\\%) & 100 & 100 & 100\\\\\n\\hline\nphenotypes significant & 7,340 & 9,049 & 9,575\\\\\n\\hline\nphenotypes tested & 11,014 & 10,959 & 11,028\\\\\n\\hline\nphenotypes & 11,047 & 11,047 & 11,047\\\\\n\\hline\nphenotypes significant (\\%) & 66.4 & 81.9 & 86.7\\\\\n\\hline\ndiseases significant & 8,628 & 8,627 & 8,628\\\\\n\\hline\ndiseases & 8,631 & 8,631 & 8,631\\\\\n\\hline\ndiseases significant (\\%) & 100 & 100 & 100\\\\\n\\hline\ncell types per phenotype (mean) & 1.81 & 2.43 & 4.22\\\\\n\\hline\ncell types per phenotype (median) & 1 & 2 & 3\\\\\n\\hline\ncell types per phenotype (min) & 0 & 0 & 0\\\\\n\\hline\ncell types per phenotype (max) & 31 & 28 & 59\\\\\n\\hline\nphenotypes per cell type (mean) & 259 & 214 & 231\\\\\n\\hline\nphenotypes per cell type (median) & 252 & 200 & 209\\\\\n\\hline\nphenotypes per cell type (min) & 71 & 57 & 57\\\\\n\\hline\nphenotypes per cell type (max) & 696 & 735 & 735\\\\\n\\hline\n\\end{tabular}\n\n\n:::\n\n\n\n\n\n__Summary statistics of enrichment results stratified by single-cell atlas.__\nSummary statistics at multiple levels (tests, cell types, phenotypes, diseases, cell types per phenotype, phenotypes per cell type) stratified by the single-cell atlas that was used as a cell type signature reference (Descartes Human or Human Cell Landscape).\n:::\n\n\\newpage\n\n::: {#tbl-filters tbl-colwidths=\"[20,20,60]\"}\n\n\n\n\n```{.r .cell-code .hidden}\ntbl_filters <- plot_report_out$data$filters[,.SD[1],by=c(\"step\")][,c(\"level\",\"step\",\"description\")]\ntbl_filters[,step:=gsub(\"_\",\" \",step)]\n\n\ntbl_filters |>\n  as.data.frame() |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|level     |step                               |description                                                                                                                                                                                                                    |\n|:---------|:----------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|NA        |1. start                           |NA                                                                                                                                                                                                                             |\n|Cell type |2. q threshold                     |Keep only cell type-phenotype association results at q<=0.05.                                                                                                                                                                  |\n|Phenotype |3. keep descendants                |Remove phenotypes belonging to a certain branch of the HPO, as defined by an ancestor term.                                                                                                                                    |\n|Phenotype |4. info content threshold          |Keep only phenotypes with a minimum information criterion score (computed from the HPO).                                                                                                                                       |\n|Phenotype |5. severity threshold              |Keep only phenotypes with mean Severity equal to or below the threshold.                                                                                                                                                       |\n|Symptom   |6. pheno frequency threshold       |Keep only phenotypes with mean frequency equal to or above the threshold (i.e. how frequently a phenotype is associated with any diseases in which it occurs).                                                                 |\n|Gene      |7. symptom gene overlap            |Ensure that genes nominated at the phenotype-level also appear in the genes overlapping at the cell type-specific symptom-level.                                                                                               |\n|Gene      |8. evidence score threshold        |Remove genes that are below an aggregate phenotype-gene evidence score threshold.                                                                                                                                              |\n|Gene      |9. add driver genes                |Keep only genes that are driving the association with a given phenotype (inferred by the intersection of phenotype-associated genes and gene with high-specificity quantiles in the target cell type).                         |\n|Symptom   |10. symptom intersection threshold |Minimum proportion of genes overlapping between a symptom gene list (phenotype-associated genes in the context of a particular disease) and the phenotype-cell type association driver genes.                                  |\n|Gene      |11. gene frequency threshold       |Keep only genes at or above a certain mean frequency threshold (i.e. how frequently a gene is associated with a given phenotype when observed within a disease).                                                               |\n|Phenotype |12. prune ancestors                |Remove redundant ancestral phenotypes when at least one of their descendants already exist.                                                                                                                                    |\n|All       |13. top n                          |Only return the top N targets per variable group (specified with the \"group_vars\" argument). For example, setting \"group_vars\" to \"hpo_id\" and \"top_n\" to 1 would only return one target (row) per phenotype ID after sorting. |\n|NA        |14. end                            |NA                                                                                                                                                                                                                             |\n\n\n:::\n\n\n\n\n\n__Description of each filtering step performed in the multi-scale therapeutic target prioritisation pipleline.__\n'level' indicates the biological scale at which the step is applied to.\n:::\n\n\\newpage\n\n::: {#tbl-ontarget-celltypes}\n\n\n\n\n```{.r .cell-code .hidden}\noverrep_df |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|HPO branch                                | Phenotypes (total)|CL branch                                           | Cell types (overrepresented)| Cell types (total)|\n|:-----------------------------------------|------------------:|:---------------------------------------------------|----------------------------:|------------------:|\n|Abnormality of the cardiovascular system  |                673|cardiocyte                                          |                            5|                  6|\n|Abnormality of the endocrine system       |                291|endocrine cell                                      |                            3|                  4|\n|Abnormality of the eye                    |                721|photoreceptor cell/retinal cell                     |                            5|                  5|\n|Abnormality of the immune system          |                255|leukocyte                                           |                           14|                 14|\n|Abnormality of the musculoskeletal system |               2155|cell of skeletal muscle/chondrocyte                 |                            4|                  4|\n|Abnormality of the nervous system         |               1647|neural cell                                         |                           17|                 24|\n|Abnormality of the respiratory system     |                292|respiratory epithelial cell/epithelial cell of lung |                            3|                  3|\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\n#   # dplyr::select(-`HPO branch`) |>\n  # kableExtra::kbl() \n  # kableExtra::kable_styling(full_width=FALSE)\n  # kableExtra::group_rows(index=overrep_df$`HPO branch`)\n```\n\n\n\n\n\n__Cross-ontology mappings between HPO and CL branches.__\nThe last two columns represent the number of cell types that were overrepresented in the on-target HPO branch and the total number of cell types in that branch.\nA disaggregated version of this table with all descendant cell type names is available in @tbl-celltypes.\n:::\n\n::: {#tbl-gencc}\n\n\n\n\n```{.r .cell-code .hidden}\ngencc <- KGExplorer::get_gencc(agg_by=NULL)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nGathering data from GenCC.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nImporting cached file.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nEvidence scores for: \n - 11050 diseases \n - 5533 genes\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n+ Version: 2025-08-02\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\ndict <- eval(formals(KGExplorer::get_gencc)$dict)\ngencc_tbl <- gencc[,list(classification_title=unique(classification_title)),\n                   by=\"classification_curie\"][,encoding:=dict[classification_title]]|>\n  data.table::setorderv(\"encoding\",-1)\nknitr::kable(as.data.frame(gencc_tbl))\n```\n\n::: {.cell-output-display}\n\n\n|classification_curie |classification_title          | encoding|\n|:--------------------|:-----------------------------|--------:|\n|GENCC:100001         |Definitive                    |        6|\n|GENCC:100002         |Strong                        |        5|\n|GENCC:100003         |Moderate                      |        4|\n|GENCC:100009         |Supportive                    |        3|\n|GENCC:100004         |Limited                       |        2|\n|GENCC:100005         |Disputed Evidence             |        1|\n|GENCC:100008         |No Known Disease Relationship |        0|\n|GENCC:100006         |Refuted Evidence              |        0|\n\n\n:::\n\n\n\n\n\n__Encodings for GenCC evidence scores.__\nAssigned numeric values for the GenCC evidence levels.\n:::\n\n\\newpage\n\n::: {#tbl-celltypes}\n\n\n\n\n```{.r .cell-code .hidden}\ntarget_branches <- MSTExplorer:::get_target_branches()\ntarget_celltypes <- MSTExplorer:::get_target_celltypes(target_branches=target_branches)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nUsing cached ontology file (1/1):\n /Users/bschilder/Library/Caches/org.R-project.R/R/KGExplorer/ontologies/github/cl_v2023-09-21.rds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nKeeping descendants of 2 term(s).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\n2,711 terms remain after filtering.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n\n```\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\nTranslating ontology terms to ids.\n```\n\n\n:::\n\n\n\n```{.r .cell-code .hidden}\nhpo <- HPOExplorer::get_hpo()\ncelltype_maps <- MSTExplorer::celltype_maps|> data.table::setkeyv(\"cl_id\")\n\nct_dt <- lapply(names(target_celltypes), function(b){\n  cl_ids <- intersect(target_celltypes[[b]],\n                      celltype_maps$cl_id) \n  data.table::data.table(hpo_branch=b, \n                         # hpo_branch_id=HPOExplorer::map_phenotypes(b,\n                         #                                           hpo = hpo,\n                         #                                           to=\"id\"),\n                         cl_branch=paste0(target_branches[[b]],collapse=\" / \"),\n                         celltype_maps[cl_ids,c(\"cl_name\",\"cl_id\")])\n}) |> data.table::rbindlist(fill=TRUE) |> \n  unique() |>\n  as.data.frame()\n\nct_dt |>\n  dplyr::rename(\"CL branch\"=\"cl_branch\",\n                \"CL name\"=\"cl_name\",\n                \"CL ID\"=\"cl_id\" ) |>\n  dplyr::select(-hpo_branch) |>\n  kableExtra::kbl() |>\n  kableExtra::kable_styling(font_size = 7, full_width = FALSE) |>\n  kableExtra::pack_rows(index = table(ct_dt$hpo_branch))  \n```\n\n::: {.cell-output-display}\n\\begin{table}\n\\centering\\begingroup\\fontsize{7}{9}\\selectfont\n\n\\begin{tabular}[t]{l|l|l}\n\\hline\nCL branch & CL name & CL ID\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the cardiovascular system}}\\\\\n\\hline\n\\hspace{1em}cardiocyte & cardiac muscle cell & CL:0000746\\\\\n\\hline\n\\hspace{1em}cardiocyte & regular atrial cardiac myocyte & CL:0002129\\\\\n\\hline\n\\hspace{1em}cardiocyte & endocardial cell & CL:0002350\\\\\n\\hline\n\\hspace{1em}cardiocyte & epicardial adipocyte & CL:1000309\\\\\n\\hline\n\\hspace{1em}cardiocyte & ventricular cardiac muscle cell & CL:2000046\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the endocrine system}}\\\\\n\\hline\n\\hspace{1em}endocrine cell & endocrine cell & CL:0000163\\\\\n\\hline\n\\hspace{1em}endocrine cell & neuroendocrine cell & CL:0000165\\\\\n\\hline\n\\hspace{1em}endocrine cell & chromaffin cell & CL:0000166\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the eye}}\\\\\n\\hline\n\\hspace{1em}photoreceptor cell / retinal cell & photoreceptor cell & CL:0000210\\\\\n\\hline\n\\hspace{1em}photoreceptor cell / retinal cell & amacrine cell & CL:0000561\\\\\n\\hline\n\\hspace{1em}photoreceptor cell / retinal cell & Mueller cell & CL:0000636\\\\\n\\hline\n\\hspace{1em}photoreceptor cell / retinal cell & retinal pigment epithelial cell & CL:0002586\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the immune system}}\\\\\n\\hline\n\\hspace{1em}leukocyte & T cell & CL:0000084\\\\\n\\hline\n\\hspace{1em}leukocyte & mature neutrophil & CL:0000096\\\\\n\\hline\n\\hspace{1em}leukocyte & mast cell & CL:0000097\\\\\n\\hline\n\\hspace{1em}leukocyte & microglial cell & CL:0000129\\\\\n\\hline\n\\hspace{1em}leukocyte & professional antigen presenting cell & CL:0000145\\\\\n\\hline\n\\hspace{1em}leukocyte & macrophage & CL:0000235\\\\\n\\hline\n\\hspace{1em}leukocyte & B cell & CL:0000236\\\\\n\\hline\n\\hspace{1em}leukocyte & dendritic cell & CL:0000451\\\\\n\\hline\n\\hspace{1em}leukocyte & monocyte & CL:0000576\\\\\n\\hline\n\\hspace{1em}leukocyte & plasma cell & CL:0000786\\\\\n\\hline\n\\hspace{1em}leukocyte & alternatively activated macrophage & CL:0000890\\\\\n\\hline\n\\hspace{1em}leukocyte & thymocyte & CL:0000893\\\\\n\\hline\n\\hspace{1em}leukocyte & innate lymphoid cell & CL:0001065\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the musculoskeletal system}}\\\\\n\\hline\n\\hspace{1em}cell of skeletal muscle / chondrocyte & chondrocyte & CL:0000138\\\\\n\\hline\n\\hspace{1em}cell of skeletal muscle / chondrocyte & cell of skeletal muscle & CL:0000188\\\\\n\\hline\n\\hspace{1em}cell of skeletal muscle / chondrocyte & skeletal muscle satellite cell & CL:0000594\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the nervous system}}\\\\\n\\hline\n\\hspace{1em}neural cell & bipolar neuron & CL:0000103\\\\\n\\hline\n\\hspace{1em}neural cell & granule cell & CL:0000120\\\\\n\\hline\n\\hspace{1em}neural cell & Purkinje cell & CL:0000121\\\\\n\\hline\n\\hspace{1em}neural cell & glial cell & CL:0000125\\\\\n\\hline\n\\hspace{1em}neural cell & astrocyte & CL:0000127\\\\\n\\hline\n\\hspace{1em}neural cell & oligodendrocyte & CL:0000128\\\\\n\\hline\n\\hspace{1em}neural cell & microglial cell & CL:0000129\\\\\n\\hline\n\\hspace{1em}neural cell & neuroendocrine cell & CL:0000165\\\\\n\\hline\n\\hspace{1em}neural cell & chromaffin cell & CL:0000166\\\\\n\\hline\n\\hspace{1em}neural cell & photoreceptor cell & CL:0000210\\\\\n\\hline\n\\hspace{1em}neural cell & inhibitory interneuron & CL:0000498\\\\\n\\hline\n\\hspace{1em}neural cell & neuron & CL:0000540\\\\\n\\hline\n\\hspace{1em}neural cell & neuronal brush cell & CL:0000555\\\\\n\\hline\n\\hspace{1em}neural cell & amacrine cell & CL:0000561\\\\\n\\hline\n\\hspace{1em}neural cell & GABAergic neuron & CL:0000617\\\\\n\\hline\n\\hspace{1em}neural cell & Mueller cell & CL:0000636\\\\\n\\hline\n\\hspace{1em}neural cell & glutamatergic neuron & CL:0000679\\\\\n\\hline\n\\hspace{1em}neural cell & retinal ganglion cell & CL:0000740\\\\\n\\hline\n\\hspace{1em}neural cell & retina horizontal cell & CL:0000745\\\\\n\\hline\n\\hspace{1em}neural cell & Schwann cell & CL:0002573\\\\\n\\hline\n\\hspace{1em}neural cell & retinal pigment epithelial cell & CL:0002586\\\\\n\\hline\n\\hspace{1em}neural cell & visceromotor neuron & CL:0005025\\\\\n\\hline\n\\hspace{1em}neural cell & sympathetic neuron & CL:0011103\\\\\n\\hline\n\\multicolumn{3}{l}{\\textbf{Abnormality of the respiratory system}}\\\\\n\\hline\n\\hspace{1em}respiratory epithelial cell / epithelial cell of lung & type II pneumocyte & CL:0002063\\\\\n\\hline\n\\hspace{1em}respiratory epithelial cell / epithelial cell of lung & epithelial cell of lower respiratory tract & CL:0002632\\\\\n\\hline\n\\end{tabular}\n\\endgroup{}\n\\end{table}\n\n\n:::\n\n\n\n\n\n__On-target cell types for each Human Phenotype Ontology (HPO) ancestral branch.__\nCell type-phenotype branch pairings were manually curated by comparing high-level HPO terms to terms within the Cell Ontology (CL).\nEach HPO branch is shown as bolded row dividers.\nAncestral CL branch names are shown in the first column, along with the specific CL names and IDs.\n:::\n\n\\newpage\n\n<!-- ::: {#tbl-death} -->\n\n<!-- ```{r tbl-death} -->\n\n<!-- #| label: tbl-death -->\n\n<!-- hpo_deaths <- KGExplorer::get_ontology_descendants(ont = hpo, -->\n\n<!--                                                    include_self = FALSE, -->\n\n<!--                                                    terms = \"Age of death\")[[1]] -->\n\n<!-- deaths_dt <- data.table::data.table(hpo_id=hpo_deaths) -->\n\n<!-- deaths_dt <- HPOExplorer::add_hpo_name(deaths_dt) -->\n\n<!-- dict <- HPOExplorer:::hpo_dict(type=\"AgeOfDeath\") -->\n\n<!-- deaths_dt[,encoding:=dict[hpo_name]] |> -->\n\n<!--   data.table::setorderv(\"encoding\") -->\n\n<!-- knitr::kable(as.data.frame(deaths_dt)) -->\n\n<!-- ``` -->\n\n<!-- Encodings for Age of Death scores. -->\n\n<!-- Assigned numeric values for the Age of Death scores within the HPO annotations. -->\n\n<!-- ::: -->\n\n<!-- \\newpage -->\n\n::: {#tbl-hpo_enrich}\n\n\n\n\n```{.r .cell-code .hidden}\nfoetal_biased_tbl <- (data.table::rbindlist(\n  list(top=run_congenital_enrichment_out$hpo_enrich_top,\n       bottom=run_congenital_enrichment_out$hpo_enrich_bottom), \n  idcol = \"group\")\n )[,c(\"group\",\"term\",\"name\",\"p_adjust\",\"log2_fold_enrichment\",\"depth\")]|>\n  data.frame() |>\n  dplyr::rename(\"FDR\"=\"p_adjust\", \n                \"log2-fold enrichment\"=\"log2_fold_enrichment\") \ntop_idx = which(foetal_biased_tbl$group==\"top\")\nbottom_idx = which(foetal_biased_tbl$group==\"bottom\")\n\nfoetal_biased_tbl|>\n  dplyr::select(-group) |>\n  kableExtra::kbl() |> \n  kableExtra::group_rows(\"Foetal-biased\", min(top_idx), max(top_idx)) |>\n  kableExtra::group_rows(\"Adult-biased\", min(bottom_idx), max(bottom_idx))\n```\n\n::: {.cell-output-display}\n\n\\begin{tabular}[t]{l|l|r|r|r}\n\\hline\nterm & name & FDR & log2-fold enrichment & depth\\\\\n\\hline\n\\multicolumn{5}{l}{\\textbf{Foetal-biased}}\\\\\n\\hline\n\\hspace{1em}HP:0005105 & Abnormal nasal morphology & 0.00 & 4.5 & 6\\\\\n\\hline\n\\hspace{1em}HP:0010938 & Abnormal external nose morphology & 0.00 & 5.4 & 7\\\\\n\\hline\n\\hspace{1em}HP:0000366 & Abnormality of the nose & 0.00 & 3.8 & 5\\\\\n\\hline\n\\hspace{1em}HP:0000055 & Abnormal female external genitalia morphology & 0.00 & 5.2 & 6\\\\\n\\hline\n\\hspace{1em}HP:0000271 & Abnormality of the face & 0.00 & 1.9 & 4\\\\\n\\hline\n\\hspace{1em}HP:0000234 & Abnormality of the head & 0.00 & 1.7 & 3\\\\\n\\hline\n\\hspace{1em}HP:0000152 & Abnormality of head or neck & 0.00 & 1.6 & 2\\\\\n\\hline\n\\hspace{1em}HP:0010460 & Abnormality of the female genitalia & 0.03 & 2.8 & 5\\\\\n\\hline\n\\hspace{1em}HP:0000811 & Abnormal external genitalia & 0.03 & 2.8 & 5\\\\\n\\hline\n\\hspace{1em}HP:0000078 & Abnormality of the genital system & 0.03 & 1.9 & 3\\\\\n\\hline\n\\multicolumn{5}{l}{\\textbf{Adult-biased}}\\\\\n\\hline\n\\hspace{1em}HP:0010647 & Abnormal elasticity of skin & 0.00 & 6.0 & 5\\\\\n\\hline\n\\hspace{1em}HP:0008067 & Abnormally lax or hyperextensible skin & 0.00 & 6.0 & 6\\\\\n\\hline\n\\hspace{1em}HP:0011121 & Abnormal skin morphology & 0.00 & 2.4 & 4\\\\\n\\hline\n\\hspace{1em}HP:0000951 & Abnormality of the skin & 0.00 & 2.1 & 3\\\\\n\\hline\n\\hspace{1em}HP:0001574 & Abnormality of the integument & 0.01 & 1.6 & 2\\\\\n\\hline\n\\hspace{1em}HP:0001626 & Abnormality of the cardiovascular system & 0.02 & 1.4 & 2\\\\\n\\hline\n\\hspace{1em}HP:0030680 & Abnormal cardiovascular system morphology & 0.02 & 1.7 & 3\\\\\n\\hline\n\\hspace{1em}HP:0025015 & Abnormal vascular morphology & 0.04 & 1.9 & 4\\\\\n\\hline\n\\hspace{1em}HP:0030962 & Abnormal morphology of the great vessels & 0.04 & 2.7 & 6\\\\\n\\hline\n\\end{tabular}\n\n\n:::\n\n\n\n\n\n__Some HPO phenotype categories or more biased towards foetal- or adult- versions of the same cell type.__\nWe took the top 50 phenotypes with the greatest bias towards foetal-cell type associations (\"Foetal-biased\") and the greatest bias towards adult-cell type associations (\"Adult-biased\") and fed each list of terms into ontological enrichment tests to get a summary of the representative HPO branches for each group.\nThe phenotypes most biased towards associations with only the foetal versions of cell type and those biased towards the adult versions of cell types.\n\"FDR\" is the False Discovery Rate-adjusted p-value from the enrichment test, \"log2-fold enrichment\" is the log2 fold-change from the enrichment test, and \"depth\" is the depth of the enriched HPO term in the ontology.\n:::\n\n\\newpage\n\n::: {#tbl-foetal_examples}\n\n\n\n\n```{.r .cell-code .hidden}\nfoetal_examples_tbl <- data.table::rbindlist(list(\n  top=run_congenital_enrichment_out$fetal_pdiff_top,\n  bottom=run_congenital_enrichment_out$fetal_pdiff_bottom\n), idcol = \"group\")[,c(\"group\",\"hpo_name\",\"hpo_id\",\"cl_id\",\"cl_name\",\"fetal_nonfetal_pdiff\")]|>unique()|>\n  data.frame()|>\n  dplyr::rename(\"p-value difference\"=\"fetal_nonfetal_pdiff\") \n\ntop_idx = which(foetal_examples_tbl$group==\"top\")\nbottom_idx = which(foetal_examples_tbl$group==\"bottom\")\n\nfoetal_examples_tbl|>\n  dplyr::select(-group) |>\n  dplyr::rename(\"HPO name\"=\"hpo_name\",\n                \"HPO ID\"=\"hpo_id\",\n                \"CL ID\"=\"cl_id\",\n                \"CL name\"=\"cl_name\") |>\n  kableExtra::kbl() |> \n  kableExtra::group_rows(\"Foetal-biased\", min(top_idx), max(top_idx)) |>\n  kableExtra::group_rows(\"Adult-biased\", min(bottom_idx), max(bottom_idx))\n```\n\n::: {.cell-output-display}\n\n\\begin{tabular}[t]{l|l|l|l|r}\n\\hline\nHPO name & HPO ID & CL ID & CL name & p-value difference\\\\\n\\hline\n\\multicolumn{5}{l}{\\textbf{Foetal-biased}}\\\\\n\\hline\n\\hspace{1em}Short middle phalanx of the 2nd finger & HP:0009577 & CL:0000138 & chondrocyte & 0.99\\\\\n\\hline\n\\hspace{1em}Abnormal morphology of the nasal alae & HP:0000429 & CL:0000057 & fibroblast & 0.95\\\\\n\\hline\n\\hspace{1em}Abnormal labia minora morphology & HP:0012880 & CL:0000499 & stromal cell & 0.94\\\\\n\\hline\n\\hspace{1em}Acromesomelia & HP:0003086 & CL:0000138 & chondrocyte & 0.93\\\\\n\\hline\n\\hspace{1em}Left atrial isomerism & HP:0011537 & CL:0000163 & endocrine cell & 0.92\\\\\n\\hline\n\\hspace{1em}Fixed facial expression & HP:0005329 & CL:0000499 & stromal cell & 0.92\\\\\n\\hline\n\\hspace{1em}Migraine without aura & HP:0002083 & CL:0000163 & endocrine cell & 0.92\\\\\n\\hline\n\\hspace{1em}Truncal ataxia & HP:0002078 & CL:0000163 & endocrine cell & 0.92\\\\\n\\hline\n\\hspace{1em}Anteverted nares & HP:0000463 & CL:0000057 & fibroblast & 0.91\\\\\n\\hline\n\\hspace{1em}Short 1st metacarpal & HP:0010034 & CL:0000138 & chondrocyte & 0.90\\\\\n\\hline\n\\multicolumn{5}{l}{\\textbf{Adult-biased}}\\\\\n\\hline\n\\hspace{1em}Symblepharon & HP:0430007 & CL:0000138 & chondrocyte & -0.97\\\\\n\\hline\n\\hspace{1em}Abnormally lax or hyperextensible skin & HP:0008067 & CL:0000057 & fibroblast & -0.94\\\\\n\\hline\n\\hspace{1em}Reduced bone mineral density & HP:0004349 & CL:0000057 & fibroblast & -0.94\\\\\n\\hline\n\\hspace{1em}Paroxysmal supraventricular tachycardia & HP:0004763 & CL:0000138 & chondrocyte & -0.93\\\\\n\\hline\n\\hspace{1em}Lack of skin elasticity & HP:0100679 & CL:0000057 & fibroblast & -0.92\\\\\n\\hline\n\\hspace{1em}Excessive wrinkled skin & HP:0007392 & CL:0000057 & fibroblast & -0.91\\\\\n\\hline\n\\hspace{1em}Bruising susceptibility & HP:0000978 & CL:0000057 & fibroblast & -0.91\\\\\n\\hline\n\\hspace{1em}Corneal opacity & HP:0007957 & CL:0000057 & fibroblast & -0.90\\\\\n\\hline\n\\hspace{1em}Broad skull & HP:0002682 & CL:0000138 & chondrocyte & -0.90\\\\\n\\hline\n\\hspace{1em}Emphysema & HP:0002097 & CL:0000057 & fibroblast & -0.89\\\\\n\\hline\n\\end{tabular}\n\n\n:::\n\n\n\n\n\n__Examples of specific phenotypes that are most biased towards associations with only the foetal versions of cell types (\"Foetal-biased\") and those biased towards the adult versions of cell types (\"Adult-biased\").__\n\"p-value difference\" is the difference in the association p-values between the foetal and adult version of the equivalent cell type ($\\text{foetal-adult bias}: p_{adult} - p_{foetal} = \\Delta p \\in [-1,1]$).\n:::\n\n<!-- \\newpage -->\n\n<!-- ::: {#tbl-cl_enrich} -->\n\n<!-- ```{r tbl-cl_enrich} -->\n\n<!-- #| label: tbl-cl_enrich -->\n\n<!-- cbind( -->\n\n<!--   group=\"top\", -->\n\n<!--   run_congenital_enrichment_out$cl_enrich_top -->\n\n<!--   )[,c(\"group\",\"term\",\"name\",\"p_adjust\",\"log2_fold_enrichment\",\"depth\")] -->\n\n<!--   |>data.frame()|> -->\n\n<!--   dplyr::mutate(group = ifelse(group==\"top\",\"foetal-biased\",\"adult-biased\"))|> -->\n\n<!--   knitr::kable() -->\n\n<!-- ``` -->\n\n<!-- Cell type enrichment results. -->\n\n<!-- The cell types that most strongly show a difference between their foetal and adult versions in their phenotype associations. -->\n\n<!-- \"p_adjust\" is the adjusted p-value from the enrichment test, \"log2_fold_enrichment\" is the $log_2$ fold-change from the enrichment test, and \"depth\" is the depth of the CL term in the ontology. -->\n\n<!-- ::: -->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{booktabs}\n\\usepackage{longtable}\n\\usepackage{array}\n\\usepackage{multirow}\n\\usepackage{wrapfig}\n\\usepackage{float}\n\\usepackage{colortbl}\n\\usepackage{pdflscape}\n\\usepackage{tabu}\n\\usepackage{threeparttable}\n\\usepackage{threeparttablex}\n\\usepackage[normalem]{ulem}\n\\usepackage{makecell}\n\\usepackage{xcolor}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}